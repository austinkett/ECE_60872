diff --git a/docs/analysis_writing.md b/docs/analysis_writing.md
index 872d293..500fc4a 100644
--- a/docs/analysis_writing.md
+++ b/docs/analysis_writing.md
@@ -11,7 +11,7 @@ Let's start with something simple:
 ...     def __init__(self, option):
 ...         self.option = option
 
->>> MockAnalysis.register_default() # register the class with angr's global analysis list
+>>> angr.AnalysesHub.register_default('MockAnalysis', MockAnalysis) # register the class with angr's global analysis list
 ```
 
 This is a very simple analysis -- it takes an option, and stores it.
@@ -35,7 +35,7 @@ Use this to interact with your project and analyze it!
 ...     def __init__(self):
 ...         self.result = 'This project is a %s binary with an entry point at %#x.' % (self.project.arch.name, self.project.entry)
 
->>> ProjectSummary.register_default()
+>>> angr.AnalysesHub.register_default('ProjectSummary', ProjectSummary)
 >>> proj = angr.Project("/bin/true")
 
 >>> summary = proj.analyses.ProjectSummary()
@@ -43,23 +43,6 @@ Use this to interact with your project and analyze it!
 This project is a AMD64 binary with an entry point at 0x401410.
 ```
 
-### Naming Analyses
-
-The registration will use the name of the class as the key through which it's accessable on `project.analyses`.
-If you want to use a shorter name, you can, just by passing the name you want to use:
-
-```python
->>> class FunctionBlockAverage(angr.Analysis):
-...     def __init__(self):
-...         self._cfg = self.project.analyses.CFG()
-...         self.avg = len(self._cfg.nodes()) / len(self._cfg.function_manager.functions)
-
->>> FunctionBlockAverage.register_default('FuncSize')
-```
-
-After this, you can call this analysis using it's specified name.
-For example, `b.analyses.FuncSize()`.
-
 ### Analysis Resilience
 
 Sometimes, your (or our) code might suck and analyses might throw exceptions.
