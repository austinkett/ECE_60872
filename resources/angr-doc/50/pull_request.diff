diff --git a/docs/examples.md b/docs/examples.md
index 876b7f4..3368c8c 100644
--- a/docs/examples.md
+++ b/docs/examples.md
@@ -228,7 +228,7 @@ ais3_crackme has been developed by Tyler Nighswander (tylerni7) for ais3 summer
 
 Author: Kyle Ossinger (github: @k0ss)
 
-This is the first in a series of "tutorial scripts" I'll be making which use angr to find exploitable conditions in binaries.  The first example is a very simple program.  The script finds a path from the main entry point to `strcpy`, but **only** when we control the source buffer of the `strcpy` operation.  To hit the right path, angr has to solve for a password argument, but angr solved this in less than 2 seconds on my machine using the standard python interpreter.  The script might look large, but that's only because I've heavily commented it to be more helpful to beginners.  The challenge binary is [here](https://github.com/angr/angr-doc/tree/master/examples/strcpy_find/strcpy_test') and the script is [here](https://github.com/angr/angr-doc/tree/master/examples/strcpy_find/solve.py).
+This is the first in a series of "tutorial scripts" I'll be making which use angr to find exploitable conditions in binaries.  The first example is a very simple program.  The script finds a path from the main entry point to `strcpy`, but **only** when we control the source buffer of the `strcpy` operation.  To hit the right path, angr has to solve for a password argument, but angr solved this in less than 2 seconds on my machine using the standard python interpreter.  The script might look large, but that's only because I've heavily commented it to be more helpful to beginners.  The challenge binary is [here](https://github.com/angr/angr-doc/tree/master/examples/strcpy_find/strcpy_test) and the script is [here](https://github.com/angr/angr-doc/tree/master/examples/strcpy_find/solve.py).
 
 ### Beginner Exploitation example: CADET_0001
 Author: Antonio Bianchi, Jacopo Corbetta
