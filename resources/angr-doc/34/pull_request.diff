diff --git a/api-doc/Makefile b/api-doc/Makefile
new file mode 100644
index 0000000..87dc287
--- /dev/null
+++ b/api-doc/Makefile
@@ -0,0 +1,216 @@
+# Makefile for Sphinx documentation
+#
+
+# You can set these variables from the command line.
+SPHINXOPTS    =
+SPHINXBUILD   = sphinx-build
+PAPER         =
+BUILDDIR      = build
+
+# User-friendly check for sphinx-build
+ifeq ($(shell which $(SPHINXBUILD) >/dev/null 2>&1; echo $$?), 1)
+$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)
+endif
+
+# Internal variables.
+PAPEROPT_a4     = -D latex_paper_size=a4
+PAPEROPT_letter = -D latex_paper_size=letter
+ALLSPHINXOPTS   = -d $(BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) source
+# the i18n builder cannot share the environment and doctrees with the others
+I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) source
+
+.PHONY: help
+help:
+	@echo "Please use \`make <target>' where <target> is one of"
+	@echo "  html       to make standalone HTML files"
+	@echo "  dirhtml    to make HTML files named index.html in directories"
+	@echo "  singlehtml to make a single large HTML file"
+	@echo "  pickle     to make pickle files"
+	@echo "  json       to make JSON files"
+	@echo "  htmlhelp   to make HTML files and a HTML help project"
+	@echo "  qthelp     to make HTML files and a qthelp project"
+	@echo "  applehelp  to make an Apple Help Book"
+	@echo "  devhelp    to make HTML files and a Devhelp project"
+	@echo "  epub       to make an epub"
+	@echo "  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter"
+	@echo "  latexpdf   to make LaTeX files and run them through pdflatex"
+	@echo "  latexpdfja to make LaTeX files and run them through platex/dvipdfmx"
+	@echo "  text       to make text files"
+	@echo "  man        to make manual pages"
+	@echo "  texinfo    to make Texinfo files"
+	@echo "  info       to make Texinfo files and run them through makeinfo"
+	@echo "  gettext    to make PO message catalogs"
+	@echo "  changes    to make an overview of all changed/added/deprecated items"
+	@echo "  xml        to make Docutils-native XML files"
+	@echo "  pseudoxml  to make pseudoxml-XML files for display purposes"
+	@echo "  linkcheck  to check all external links for integrity"
+	@echo "  doctest    to run all doctests embedded in the documentation (if enabled)"
+	@echo "  coverage   to run coverage check of the documentation (if enabled)"
+
+.PHONY: clean
+clean:
+	rm -rf $(BUILDDIR)/*
+
+.PHONY: html
+html:
+	$(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(BUILDDIR)/html
+	@echo
+	@echo "Build finished. The HTML pages are in $(BUILDDIR)/html."
+
+.PHONY: dirhtml
+dirhtml:
+	$(SPHINXBUILD) -b dirhtml $(ALLSPHINXOPTS) $(BUILDDIR)/dirhtml
+	@echo
+	@echo "Build finished. The HTML pages are in $(BUILDDIR)/dirhtml."
+
+.PHONY: singlehtml
+singlehtml:
+	$(SPHINXBUILD) -b singlehtml $(ALLSPHINXOPTS) $(BUILDDIR)/singlehtml
+	@echo
+	@echo "Build finished. The HTML page is in $(BUILDDIR)/singlehtml."
+
+.PHONY: pickle
+pickle:
+	$(SPHINXBUILD) -b pickle $(ALLSPHINXOPTS) $(BUILDDIR)/pickle
+	@echo
+	@echo "Build finished; now you can process the pickle files."
+
+.PHONY: json
+json:
+	$(SPHINXBUILD) -b json $(ALLSPHINXOPTS) $(BUILDDIR)/json
+	@echo
+	@echo "Build finished; now you can process the JSON files."
+
+.PHONY: htmlhelp
+htmlhelp:
+	$(SPHINXBUILD) -b htmlhelp $(ALLSPHINXOPTS) $(BUILDDIR)/htmlhelp
+	@echo
+	@echo "Build finished; now you can run HTML Help Workshop with the" \
+	      ".hhp project file in $(BUILDDIR)/htmlhelp."
+
+.PHONY: qthelp
+qthelp:
+	$(SPHINXBUILD) -b qthelp $(ALLSPHINXOPTS) $(BUILDDIR)/qthelp
+	@echo
+	@echo "Build finished; now you can run "qcollectiongenerator" with the" \
+	      ".qhcp project file in $(BUILDDIR)/qthelp, like this:"
+	@echo "# qcollectiongenerator $(BUILDDIR)/qthelp/angr.qhcp"
+	@echo "To view the help file:"
+	@echo "# assistant -collectionFile $(BUILDDIR)/qthelp/angr.qhc"
+
+.PHONY: applehelp
+applehelp:
+	$(SPHINXBUILD) -b applehelp $(ALLSPHINXOPTS) $(BUILDDIR)/applehelp
+	@echo
+	@echo "Build finished. The help book is in $(BUILDDIR)/applehelp."
+	@echo "N.B. You won't be able to view it unless you put it in" \
+	      "~/Library/Documentation/Help or install it in your application" \
+	      "bundle."
+
+.PHONY: devhelp
+devhelp:
+	$(SPHINXBUILD) -b devhelp $(ALLSPHINXOPTS) $(BUILDDIR)/devhelp
+	@echo
+	@echo "Build finished."
+	@echo "To view the help file:"
+	@echo "# mkdir -p $$HOME/.local/share/devhelp/angr"
+	@echo "# ln -s $(BUILDDIR)/devhelp $$HOME/.local/share/devhelp/angr"
+	@echo "# devhelp"
+
+.PHONY: epub
+epub:
+	$(SPHINXBUILD) -b epub $(ALLSPHINXOPTS) $(BUILDDIR)/epub
+	@echo
+	@echo "Build finished. The epub file is in $(BUILDDIR)/epub."
+
+.PHONY: latex
+latex:
+	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
+	@echo
+	@echo "Build finished; the LaTeX files are in $(BUILDDIR)/latex."
+	@echo "Run \`make' in that directory to run these through (pdf)latex" \
+	      "(use \`make latexpdf' here to do that automatically)."
+
+.PHONY: latexpdf
+latexpdf:
+	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
+	@echo "Running LaTeX files through pdflatex..."
+	$(MAKE) -C $(BUILDDIR)/latex all-pdf
+	@echo "pdflatex finished; the PDF files are in $(BUILDDIR)/latex."
+
+.PHONY: latexpdfja
+latexpdfja:
+	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
+	@echo "Running LaTeX files through platex and dvipdfmx..."
+	$(MAKE) -C $(BUILDDIR)/latex all-pdf-ja
+	@echo "pdflatex finished; the PDF files are in $(BUILDDIR)/latex."
+
+.PHONY: text
+text:
+	$(SPHINXBUILD) -b text $(ALLSPHINXOPTS) $(BUILDDIR)/text
+	@echo
+	@echo "Build finished. The text files are in $(BUILDDIR)/text."
+
+.PHONY: man
+man:
+	$(SPHINXBUILD) -b man $(ALLSPHINXOPTS) $(BUILDDIR)/man
+	@echo
+	@echo "Build finished. The manual pages are in $(BUILDDIR)/man."
+
+.PHONY: texinfo
+texinfo:
+	$(SPHINXBUILD) -b texinfo $(ALLSPHINXOPTS) $(BUILDDIR)/texinfo
+	@echo
+	@echo "Build finished. The Texinfo files are in $(BUILDDIR)/texinfo."
+	@echo "Run \`make' in that directory to run these through makeinfo" \
+	      "(use \`make info' here to do that automatically)."
+
+.PHONY: info
+info:
+	$(SPHINXBUILD) -b texinfo $(ALLSPHINXOPTS) $(BUILDDIR)/texinfo
+	@echo "Running Texinfo files through makeinfo..."
+	make -C $(BUILDDIR)/texinfo info
+	@echo "makeinfo finished; the Info files are in $(BUILDDIR)/texinfo."
+
+.PHONY: gettext
+gettext:
+	$(SPHINXBUILD) -b gettext $(I18NSPHINXOPTS) $(BUILDDIR)/locale
+	@echo
+	@echo "Build finished. The message catalogs are in $(BUILDDIR)/locale."
+
+.PHONY: changes
+changes:
+	$(SPHINXBUILD) -b changes $(ALLSPHINXOPTS) $(BUILDDIR)/changes
+	@echo
+	@echo "The overview file is in $(BUILDDIR)/changes."
+
+.PHONY: linkcheck
+linkcheck:
+	$(SPHINXBUILD) -b linkcheck $(ALLSPHINXOPTS) $(BUILDDIR)/linkcheck
+	@echo
+	@echo "Link check complete; look for any errors in the above output " \
+	      "or in $(BUILDDIR)/linkcheck/output.txt."
+
+.PHONY: doctest
+doctest:
+	$(SPHINXBUILD) -b doctest $(ALLSPHINXOPTS) $(BUILDDIR)/doctest
+	@echo "Testing of doctests in the sources finished, look at the " \
+	      "results in $(BUILDDIR)/doctest/output.txt."
+
+.PHONY: coverage
+coverage:
+	$(SPHINXBUILD) -b coverage $(ALLSPHINXOPTS) $(BUILDDIR)/coverage
+	@echo "Testing of coverage in the sources finished, look at the " \
+	      "results in $(BUILDDIR)/coverage/python.txt."
+
+.PHONY: xml
+xml:
+	$(SPHINXBUILD) -b xml $(ALLSPHINXOPTS) $(BUILDDIR)/xml
+	@echo
+	@echo "Build finished. The XML files are in $(BUILDDIR)/xml."
+
+.PHONY: pseudoxml
+pseudoxml:
+	$(SPHINXBUILD) -b pseudoxml $(ALLSPHINXOPTS) $(BUILDDIR)/pseudoxml
+	@echo
+	@echo "Build finished. The pseudo-XML files are in $(BUILDDIR)/pseudoxml."
diff --git a/api-doc/source/angr.rst b/api-doc/source/angr.rst
new file mode 100644
index 0000000..62447c1
--- /dev/null
+++ b/api-doc/source/angr.rst
@@ -0,0 +1,79 @@
+:mod:`angr` --- angr
+====================
+
+Project
+-------
+
+.. automodule:: angr.project
+
+Factory
+-------
+
+.. automodule:: angr.factory
+
+Paths & Path Groups
+-------------------
+
+.. automodule:: angr.path_group
+.. automodule:: angr.path
+.. automodule:: angr.path_hierarchy
+.. automodule:: angr.pathprioritizer
+
+Knowledge Base
+--------------
+
+.. automodule:: angr.knowledge_base
+.. automodule:: angr.knowledge
+.. automodule:: angr.knowledge.codenode
+.. automodule:: angr.knowledge.data
+.. automodule:: angr.knowledge.function
+.. automodule:: angr.knowledge.function_manager
+
+Analysis
+--------
+
+.. automodule:: angr.analysis
+.. automodule:: angr.annocfg
+.. automodule:: angr.blade
+.. automodule:: angr.analyses
+.. automodule:: angr.analyses.backward_slice
+.. automodule:: angr.analyses.bindiff
+.. automodule:: angr.analyses.boyscout
+.. automodule:: angr.analyses.cdg
+.. automodule:: angr.analyses.cfg_accurate
+.. automodule:: angr.analyses.cfg_base
+.. automodule:: angr.analyses.cfg_fast
+.. automodule:: angr.analyses.cfg_node
+.. automodule:: angr.analysesc.code_location
+.. automodule:: angr.analyses.datagraph_meta
+.. automodule:: angr.analyses.ddg
+.. automodule:: angr.analyses.dfg
+.. automodule:: angr.analyses.forward_analysis
+.. automodule:: angr.analyses.girlscout
+.. automodule:: angr.analyses.loopfinder
+.. automodule:: angr.analyses.veritesting
+.. automodule:: angr.analyses.vfg
+.. automodule:: angr.analyses.vsa_ddg
+
+
+Surveyors
+---------
+
+.. automodule:: angr.surveyor
+.. automodule:: angr.surveyors
+.. automodule:: angr.surveyors.caller
+.. automodule:: angr.surveyors.escaper
+.. automodule:: angr.surveyors.executor
+.. automodule:: angr.surveyors.explorer
+.. automodule:: angr.surveyors.slicecutor
+.. automodule:: angr.surveyors.sser
+
+Lifter
+------
+
+.. automodule:: angr.lifter
+
+SimOS
+-----
+
+.. automodule:: angr.simos
diff --git a/api-doc/source/archinfo.rst b/api-doc/source/archinfo.rst
new file mode 100644
index 0000000..66028af
--- /dev/null
+++ b/api-doc/source/archinfo.rst
@@ -0,0 +1,13 @@
+:mod:`archinfo` --- Arch Info
+=============================
+
+.. automodule:: archinfo
+.. automodule:: archinfo.arch
+.. automodule:: archinfo.arch_aarch64
+.. automodule:: archinfo.arch_amd64
+.. automodule:: archinfo.arch_arm
+.. automodule:: archinfo.arch_mips32
+.. automodule:: archinfo.arch_mips64
+.. automodule:: archinfo.arch_ppc32
+.. automodule:: archinfo.arch_ppc64
+.. automodule:: archinfo.arch_x86
diff --git a/api-doc/source/claripy.rst b/api-doc/source/claripy.rst
new file mode 100644
index 0000000..aab3c32
--- /dev/null
+++ b/api-doc/source/claripy.rst
@@ -0,0 +1,64 @@
+:mod:`claripy` --- Claripy
+==========================
+
+..  automodule:: claripy
+..  automodule:: claripy.backend
+..  automodule:: claripy.backend_manager
+..  automodule:: claripy.backend_object
+..  automodule:: claripy.balancer
+..  automodule:: claripy.bv
+..  automodule:: claripy.errors
+..  automodule:: claripy.fp
+..  automodule:: claripy.frontend
+..  automodule:: claripy.operations
+..  automodule:: claripy.ops
+..  automodule:: claripy.replacer
+..  automodule:: claripy.result
+ 
+AST
+---
+..  automodule:: claripy.ast
+..  automodule:: claripy.ast.base
+..  automodule:: claripy.ast.bits
+..  automodule:: claripy.ast.bool
+..  automodule:: claripy.ast.bv
+..  automodule:: claripy.ast.fp
+..  automodule:: claripy.ast.int
+..  automodule:: claripy.ast.vs
+ 
+
+Backends
+--------
+
+..  automodule:: claripy.backends
+..  automodule:: claripy.backends.backend_concrete
+..  automodule:: claripy.backends.z3
+..  automodule:: claripy.backends.backend_z3_parallel
+..  automodule:: claripy.backends.backendremote
+..  automodule:: claripy.backends.celeryconfig
+..  automodule:: claripy.backends.remotetasks
+ 
+Frontends
+---------
+
+..  automodule:: claripy.frontends
+..  automodule:: claripy.frontends.caching_frontend
+..  automodule:: claripy.frontends.composite_frontend
+..  automodule:: claripy.frontends.constrained_frontend
+..  automodule:: claripy.frontends.full_frontend
+..  automodule:: claripy.frontends.hybrid_frontend
+..  automodule:: claripy.frontends.light_frontend
+..  automodule:: claripy.frontends.replacement_frontend
+
+
+VSA
+---
+
+..  automodule:: claripy.vsa
+..  automodule:: claripy.vsa.abstract_location
+..  automodule:: claripy.vsa.bool_result
+..  automodule:: claripy.vsa.discrete_strided_interval_set
+..  automodule:: claripy.vsa.errors
+..  automodule:: claripy.vsa.strided_interval
+..  automodule:: claripy.vsa.valueset
+ 
\ No newline at end of file
diff --git a/api-doc/source/cle.rst b/api-doc/source/cle.rst
new file mode 100644
index 0000000..96c3b7d
--- /dev/null
+++ b/api-doc/source/cle.rst
@@ -0,0 +1,22 @@
+:mod:`cle` --- CLE
+==========================
+
+..  automodule:: cle
+..  automodule:: cle.loader
+..  automodule:: cle.memory
+..  automodule:: cle.relocations
+..  automodule:: cle.tls
+
+Backends
+--------
+
+..  automodule:: cle.backends
+..  automodule:: cle.backends.backedcgc
+..  automodule:: cle.backends.blob
+..  automodule:: cle.backends.cgc
+..  automodule:: cle.backends.elf
+..  automodule:: cle.backends.elfcore
+..  automodule:: cle.backends.metaelf
+..  automodule:: cle.backends.idabin
+..  automodule:: cle.backends.pe
+
diff --git a/api-doc/source/conf.py b/api-doc/source/conf.py
new file mode 100644
index 0000000..6d9cd1a
--- /dev/null
+++ b/api-doc/source/conf.py
@@ -0,0 +1,311 @@
+# -*- coding: utf-8 -*-
+#
+# angr documentation build configuration file, created by
+# sphinx-quickstart on Sun Feb 14 00:29:24 2016.
+#
+# This file is execfile()d with the current directory set to its
+# containing dir.
+#
+# Note that not all possible configuration values are present in this
+# autogenerated file.
+#
+# All configuration values have a default; values that are commented out
+# serve to show the default.
+
+import sys
+import os
+
+from recommonmark.parser import CommonMarkParser
+
+# If extensions (or modules to document with autodoc) are in another directory,
+# add these directories to sys.path here. If the directory is relative to the
+# documentation root, use os.path.abspath to make it absolute, like shown here.
+sys.path.insert(0, os.path.abspath('..'))
+
+# -- General configuration ------------------------------------------------
+
+# If your documentation needs a minimal Sphinx version, state it here.
+#needs_sphinx = '1.0'
+
+# Add any Sphinx extension module names here, as strings. They can be
+# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
+# ones.
+extensions = [
+    'sphinx.ext.autodoc',
+    'sphinx.ext.napoleon',
+]
+
+# Add any paths that contain templates here, relative to this directory.
+templates_path = ['_templates']
+
+# The suffix(es) of source filenames.
+# You can specify multiple suffix as a list of string:
+# source_suffix = ['.rst', '.md']
+source_parsers = {
+    '.md': CommonMarkParser,
+}
+
+source_suffix = ['.rst', '.md']
+
+# The encoding of source files.
+#source_encoding = 'utf-8-sig'
+
+# The master toctree document.
+master_doc = 'index'
+
+# General information about the project.
+project = u'angr'
+copyright = u'2016, The angr project'
+author = u'The angr project'
+
+# The version info for the project you're documenting, acts as replacement for
+# |version| and |release|, also used in various other places throughout the
+# built documents.
+#
+# The short X.Y version.
+version = u'4.6.3'
+# The full version, including alpha/beta/rc tags.
+release = u'4.6.3'
+
+# The language for content autogenerated by Sphinx. Refer to documentation
+# for a list of supported languages.
+#
+# This is also used if you do content translation via gettext catalogs.
+# Usually you set "language" from the command line for these cases.
+language = None
+
+# There are two options for replacing |today|: either, you set today to some
+# non-false value, then it is used:
+#today = ''
+# Else, today_fmt is used as the format for a strftime call.
+#today_fmt = '%B %d, %Y'
+
+# List of patterns, relative to source directory, that match files and
+# directories to ignore when looking for source files.
+exclude_patterns = ['_build']
+
+# The reST default role (used for this markup: `text`) to use for all
+# documents.
+#default_role = None
+
+# If true, '()' will be appended to :func: etc. cross-reference text.
+#add_function_parentheses = True
+
+# If true, the current module name will be prepended to all description
+# unit titles (such as .. function::).
+#add_module_names = True
+
+# If true, sectionauthor and moduleauthor directives will be shown in the
+# output. They are ignored by default.
+#show_authors = False
+
+# The name of the Pygments (syntax highlighting) style to use.
+pygments_style = 'sphinx'
+
+# A list of ignored prefixes for module index sorting.
+#modindex_common_prefix = []
+
+# If true, keep warnings as "system message" paragraphs in the built documents.
+#keep_warnings = False
+
+# If true, `todo` and `todoList` produce output, else they produce nothing.
+todo_include_todos = False
+
+intersphinx_mapping = {'python': ('https://docs.python.org/2.7', None)}
+
+autoclass_content = "both"
+autodoc_default_flags = ['members',
+                         #'special-members',
+                         'show-inheritance'
+                         # 'private-members',
+                         #'undoc-members',
+                        ]
+
+def autodoc_skip_member(app, what, name, obj, skip, options):
+    exclusions = ('__weakref__', '__doc__', '__module__', '__dict__')
+    for excluded_name in exclusions:
+        if name.find(excluded_name) >= 0:
+            return True
+    return skip
+
+def setup(app):
+    app.connect('autodoc-skip-member', autodoc_skip_member)
+
+# -- Options for HTML output ----------------------------------------------
+
+# The theme to use for HTML and HTML Help pages.  See the documentation for
+# a list of builtin themes.
+html_theme = 'sphinx_rtd_theme'
+
+# Theme options are theme-specific and customize the look and feel of a theme
+# further.  For a list of options available for each theme, see the
+# documentation.
+#html_theme_options = {}
+
+# Add any paths that contain custom themes here, relative to this directory.
+#html_theme_path = []
+
+# The name for this set of Sphinx documents.  If None, it defaults to
+# "<project> v<release> documentation".
+#html_title = None
+
+# A shorter title for the navigation bar.  Default is the same as html_title.
+#html_short_title = None
+
+# The name of an image file (relative to this directory) to place at the top
+# of the sidebar.
+#html_logo = None
+
+# The name of an image file (within the static path) to use as favicon of the
+# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
+# pixels large.
+#html_favicon = None
+
+# Add any paths that contain custom static files (such as style sheets) here,
+# relative to this directory. They are copied after the builtin static files,
+# so a file named "default.css" will overwrite the builtin "default.css".
+html_static_path = ['_static']
+
+# Add any extra paths that contain custom files (such as robots.txt or
+# .htaccess) here, relative to this directory. These files are copied
+# directly to the root of the documentation.
+#html_extra_path = []
+
+# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
+# using the given strftime format.
+#html_last_updated_fmt = '%b %d, %Y'
+
+# If true, SmartyPants will be used to convert quotes and dashes to
+# typographically correct entities.
+#html_use_smartypants = True
+
+# Custom sidebar templates, maps document names to template names.
+#html_sidebars = {}
+
+# Additional templates that should be rendered to pages, maps page names to
+# template names.
+#html_additional_pages = {}
+
+# If false, no module index is generated.
+#html_domain_indices = True
+
+# If false, no index is generated.
+#html_use_index = True
+
+# If true, the index is split into individual pages for each letter.
+#html_split_index = False
+
+# If true, links to the reST sources are added to the pages.
+#html_show_sourcelink = True
+
+# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
+#html_show_sphinx = True
+
+# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
+#html_show_copyright = True
+
+# If true, an OpenSearch description file will be output, and all pages will
+# contain a <link> tag referring to it.  The value of this option must be the
+# base URL from which the finished HTML is served.
+#html_use_opensearch = ''
+
+# This is the file name suffix for HTML files (e.g. ".xhtml").
+#html_file_suffix = None
+
+# Language to be used for generating the HTML full-text search index.
+# Sphinx supports the following languages:
+#   'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'
+#   'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'
+#html_search_language = 'en'
+
+# A dictionary with options for the search language support, empty by default.
+# Now only 'ja' uses this config value
+#html_search_options = {'type': 'default'}
+
+# The name of a javascript file (relative to the configuration directory) that
+# implements a search results scorer. If empty, the default will be used.
+#html_search_scorer = 'scorer.js'
+
+# Output file base name for HTML help builder.
+htmlhelp_basename = 'angrdoc'
+
+# -- Options for LaTeX output ---------------------------------------------
+
+latex_elements = {
+# The paper size ('letterpaper' or 'a4paper').
+#'papersize': 'letterpaper',
+
+# The font size ('10pt', '11pt' or '12pt').
+#'pointsize': '10pt',
+
+# Additional stuff for the LaTeX preamble.
+#'preamble': '',
+
+# Latex figure (float) alignment
+#'figure_align': 'htbp',
+}
+
+# Grouping the document tree into LaTeX files. List of tuples
+# (source start file, target name, title,
+#  author, documentclass [howto, manual, or own class]).
+latex_documents = [
+    (master_doc, 'angr.tex', u'angr Documentation',
+     u'The angr project', 'manual'),
+]
+
+# The name of an image file (relative to this directory) to place at the top of
+# the title page.
+#latex_logo = None
+
+# For "manual" documents, if this is true, then toplevel headings are parts,
+# not chapters.
+#latex_use_parts = False
+
+# If true, show page references after internal links.
+#latex_show_pagerefs = False
+
+# If true, show URL addresses after external links.
+#latex_show_urls = False
+
+# Documents to append as an appendix to all manuals.
+#latex_appendices = []
+
+# If false, no module index is generated.
+#latex_domain_indices = True
+
+
+# -- Options for manual page output ---------------------------------------
+
+# One entry per manual page. List of tuples
+# (source start file, name, description, authors, manual section).
+man_pages = [
+    (master_doc, 'angr', u'angr Documentation',
+     [author], 1)
+]
+
+# If true, show URL addresses after external links.
+#man_show_urls = False
+
+
+# -- Options for Texinfo output -------------------------------------------
+
+# Grouping the document tree into Texinfo files. List of tuples
+# (source start file, target name, title, author,
+#  dir menu entry, description, category)
+texinfo_documents = [
+    (master_doc, 'angr', u'angr Documentation',
+     author, 'angr', 'One line description of project.',
+     'Miscellaneous'),
+]
+
+# Documents to append as an appendix to all manuals.
+#texinfo_appendices = []
+
+# If false, no module index is generated.
+#texinfo_domain_indices = True
+
+# How to display URL addresses: 'footnote', 'no', or 'inline'.
+#texinfo_show_urls = 'footnote'
+
+# If true, do not generate a @detailmenu in the "Top" node's menu.
+#texinfo_no_detailmenu = False
diff --git a/api-doc/source/index.rst b/api-doc/source/index.rst
new file mode 100644
index 0000000..7d326c5
--- /dev/null
+++ b/api-doc/source/index.rst
@@ -0,0 +1,25 @@
+angr API documentation
+======================
+
+
+angr is a multi-architecture binary analysis platform, with the capability to perform dynamic symbolic execution (like
+Mayhem, KLEE, etc) and various static analyses on binaries.
+
+.. toctree::
+   :maxdepth: 2
+   :glob:
+
+   angr
+   simuvex
+   pyvex
+   claripy
+   cle
+   archinfo
+
+Indices and tables
+==================
+
+* :ref:`genindex`
+* :ref:`modindex`
+* :ref:`search`
+
diff --git a/api-doc/source/pyvex.rst b/api-doc/source/pyvex.rst
new file mode 100644
index 0000000..1a6648d
--- /dev/null
+++ b/api-doc/source/pyvex.rst
@@ -0,0 +1,19 @@
+:mod:`pyvex` --- PyVex
+======================
+
+.. automodule:: pyvex
+.. automodule:: pyvex.IRConst
+
+Vex IR Expressions
+------------------
+
+Expressions represent operations without side effects.
+
+.. automodule:: pyvex.IRExpr
+
+Vex IR Statements
+-----------------
+
+Statements represent operations with side effects.
+
+.. automodule:: pyvex.IRStmt
diff --git a/api-doc/source/simuvex.rst b/api-doc/source/simuvex.rst
new file mode 100644
index 0000000..55cb0e9
--- /dev/null
+++ b/api-doc/source/simuvex.rst
@@ -0,0 +1,48 @@
+:mod:`simuvex` --- Simuvex
+==========================
+
+.. automodule:: simuvex
+.. automodule:: simuvex.s_action
+.. automodule:: simuvex.s_action_object
+.. automodule:: simuvex.s_cc
+.. automodule:: simuvex.s_event
+.. automodule:: simuvex.s_format
+.. automodule:: simuvex.s_options
+.. automodule:: simuvex.s_pcap
+.. automodule:: simuvex.s_procedure
+.. automodule:: simuvex.s_run
+.. automodule:: simuvex.s_slicer
+.. automodule:: simuvex.s_state
+.. automodule:: simuvex.s_type
+.. automodule:: simuvex.s_variable
+
+Plugins
+-------
+
+.. automodule:: simuvex.plugins
+.. automodule:: simuvex.plugins.abstract_memory
+.. automodule:: simuvex.plugins.cgc
+.. automodule:: simuvex.plugins.gdb
+.. automodule:: simuvex.plugins.inspect
+.. automodule:: simuvex.plugins.libc
+.. automodule:: simuvex.plugins.posix
+.. automodule:: simuvex.plugins.solver
+
+Procedures
+----------
+
+.. automodule:: simuvex.procedures
+
+Storage
+-------
+
+.. automodule:: simuvex.storage
+..  automodule:: simuvex.storage.file
+..  automodule:: simuvex.storage.memory
+..  automodule:: simuvex.storage.memory_object
+..  automodule:: simuvex.storage.paged_memory
+ 
+Vex
+---
+
+..  automodule:: simuvex.vex
\ No newline at end of file
