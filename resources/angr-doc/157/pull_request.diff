diff --git a/examples/CSCI-4968-MBE/lab02/Makefile b/examples/CSCI-4968-MBE/lab02/Makefile
new file mode 100644
index 0000000..c92c753
--- /dev/null
+++ b/examples/CSCI-4968-MBE/lab02/Makefile
@@ -0,0 +1,4 @@
+all: lab2A.c lab2B.c lab2C.c
+	gcc -o lab2A lab2A.c -g3 -O0 -z execstack -fno-stack-protector -no-pie -D_FORTIFY_SOURCE=0
+	gcc -o lab2B lab2B.c -g3 -O0 -z execstack -fno-stack-protector -no-pie -D_FORTIFY_SOURCE=0
+	gcc -o lab2C lab2C.c -g3 -O0 -z execstack -fno-stack-protector -no-pie -D_FORTIFY_SOURCE=0
diff --git a/examples/CSCI-4968-MBE/lab02/lab2A b/examples/CSCI-4968-MBE/lab02/lab2A
new file mode 100755
index 0000000..77395a6
Binary files /dev/null and b/examples/CSCI-4968-MBE/lab02/lab2A differ
diff --git a/examples/CSCI-4968-MBE/lab02/lab2A.c b/examples/CSCI-4968-MBE/lab02/lab2A.c
new file mode 100644
index 0000000..9dd363a
--- /dev/null
+++ b/examples/CSCI-4968-MBE/lab02/lab2A.c
@@ -0,0 +1,59 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+
+/*
+ * compiled with:
+ * gcc -O0 -fno-stack-protector lab2A.c -o lab2A
+ */
+
+void shell()
+{
+	printf("You got it\n");
+	system("/bin/sh");
+}
+
+void concatenate_first_chars()
+{
+	struct {
+		char word_buf[12];
+		int i;
+		char* cat_pointer;
+		char cat_buf[10];
+	} locals;
+	locals.cat_pointer = locals.cat_buf;
+
+	printf("Input 10 words:\n");
+	for(locals.i=0; locals.i!=10; locals.i++)
+	{
+		// Read from stdin
+		if(fgets(locals.word_buf, 0x10, stdin) == 0 || locals.word_buf[0] == '\n')
+		{
+			printf("Failed to read word\n");
+			return;
+		}
+		// Copy first char from word to next location in concatenated buffer
+		*locals.cat_pointer = *locals.word_buf;
+		locals.cat_pointer++;
+	}
+
+	// Even if something goes wrong, there's a null byte here
+	//   preventing buffer overflows
+	locals.cat_buf[10] = '\0';
+	printf("Here are the first characters from the 10 words concatenated:\n\
+%s\n", locals.cat_buf);
+}
+
+int main(int argc, char** argv)
+{
+	if(argc != 1)
+	{
+		printf("usage:\n%s\n", argv[0]);
+		return EXIT_FAILURE;
+	}
+
+	concatenate_first_chars();
+
+	printf("Not authenticated\n");
+	return EXIT_SUCCESS;
+}
diff --git a/examples/CSCI-4968-MBE/lab02/lab2B b/examples/CSCI-4968-MBE/lab02/lab2B
new file mode 100755
index 0000000..83d44af
Binary files /dev/null and b/examples/CSCI-4968-MBE/lab02/lab2B differ
diff --git a/examples/CSCI-4968-MBE/lab02/lab2B.c b/examples/CSCI-4968-MBE/lab02/lab2B.c
new file mode 100644
index 0000000..426576b
--- /dev/null
+++ b/examples/CSCI-4968-MBE/lab02/lab2B.c
@@ -0,0 +1,35 @@
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+
+/*
+ * compiled with:
+ * gcc -O0 -fno-stack-protector lab2B.c -o lab2B
+ */
+
+char* exec_string = "/bin/sh";
+
+void shell(char* cmd)
+{
+	system(cmd);
+}
+
+void print_name(char* input)
+{
+	char buf[15];
+	strcpy(buf, input);
+	printf("Hello %s\n", buf);
+}
+
+int main(int argc, char** argv)
+{
+	if(argc != 2)
+	{
+		printf("usage:\n%s string\n", argv[0]);
+		return EXIT_FAILURE;
+	}
+
+	print_name(argv[1]);
+
+	return EXIT_SUCCESS;
+}
diff --git a/examples/CSCI-4968-MBE/lab02/lab2C b/examples/CSCI-4968-MBE/lab02/lab2C
new file mode 100755
index 0000000..55339c8
Binary files /dev/null and b/examples/CSCI-4968-MBE/lab02/lab2C differ
diff --git a/examples/CSCI-4968-MBE/lab02/lab2C.c b/examples/CSCI-4968-MBE/lab02/lab2C.c
new file mode 100644
index 0000000..e7592ac
--- /dev/null
+++ b/examples/CSCI-4968-MBE/lab02/lab2C.c
@@ -0,0 +1,38 @@
+#include <stdlib.h>
+#include <stdio.h>
+#include <string.h>
+
+/*
+ * compiled with:
+ * gcc -O0 -fno-stack-protector lab2C.c -o lab2C
+ */
+
+void shell()
+{
+	printf("You did it.\n");
+	system("/bin/sh");
+}
+
+int main(int argc, char** argv)
+{
+	if(argc != 2)
+	{
+		printf("usage:\n%s string\n", argv[0]);
+		return EXIT_FAILURE;
+	}
+
+	int set_me = 0;
+	char buf[15];
+	strcpy(buf, argv[1]);
+
+	if(set_me == 0xdeadbeef)
+	{
+		shell();
+	}
+	else
+	{
+		printf("Not authenticated.\nset_me was %d\n", set_me);
+	}
+
+	return EXIT_SUCCESS;
+}
diff --git a/examples/CSCI-4968-MBE/lab02/solve.py b/examples/CSCI-4968-MBE/lab02/solve.py
new file mode 100755
index 0000000..619a2df
--- /dev/null
+++ b/examples/CSCI-4968-MBE/lab02/solve.py
@@ -0,0 +1,50 @@
+#!/usr/bin/env python2
+# -*- coding: utf-8 -*-
+# Author: David Manouchehri
+
+import angr, claripy
+import logging
+logging.getLogger('angr.manager').setLevel(logging.DEBUG)
+
+# import subprocess
+
+# import IPython
+# logging.getLogger('angr').setLevel(logging.DEBUG)
+
+def main():
+	project = angr.Project('./lab2C', load_options={"auto_load_libs": False})
+
+	def correct(state):
+		try:
+			return 'You did it.' in state.posix.dumps(1)
+		except:
+			return False
+	def wrong(state):
+		try:
+			return 'Not authenticated' in state.posix.dumps(1)
+		except:
+			return False
+
+	input = claripy.BVS("input", 32*8)
+
+	state = project.factory.entry_state(args=["./lab2C", input], add_options=angr.options.unicorn)
+
+	simulation_manager = project.factory.simgr(state)
+
+	# (•_•) ( •_•)>⌐■-■ (⌐■_■)
+	simulation_manager.explore(find=correct, avoid=wrong)
+
+	found = simulation_manager.found[-1]
+	solution = found.se.eval(input, cast_to=str)
+
+	return solution
+
+def test():
+	pass
+	# solution = main()
+	# stdout,_ = subprocess.Popen(["./lab2C", solution], stdout=subprocess.PIPE, stderr=subprocess.STDOUT).communicate()
+	# print(stdout)
+	# assert stdout == "You did it."
+
+if __name__ == '__main__':
+	print(repr(main()))
