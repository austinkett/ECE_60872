diff --git a/src/python/grpcio_tests/tests/unit/_server_ssl_cert_config_test.py b/src/python/grpcio_tests/tests/unit/_server_ssl_cert_config_test.py
index e733a59a5b1..61d79408195 100644
--- a/src/python/grpcio_tests/tests/unit/_server_ssl_cert_config_test.py
+++ b/src/python/grpcio_tests/tests/unit/_server_ssl_cert_config_test.py
@@ -29,6 +29,8 @@
   to deal with user's reuse of ServerCertificateConfiguration instances.
 """
 
+from __future__ import print_function
+
 import abc
 import collections
 import os
@@ -298,6 +300,7 @@ def _test(self):
             private_key=CLIENT_KEY_2_PEM,
             certificate_chain=CLIENT_CERT_CHAIN_2_PEM)
         actual_calls = self.cert_config_fetcher.getCalls()
+        print('301 actual_calls', actual_calls)
         self.assertGreaterEqual(len(actual_calls), 1)
         self.assertFalse(actual_calls[0].did_raise)
         for i, call in enumerate(actual_calls):
@@ -314,6 +317,7 @@ def _test(self):
             private_key=CLIENT_KEY_1_PEM,
             certificate_chain=CLIENT_CERT_CHAIN_1_PEM)
         actual_calls = self.cert_config_fetcher.getCalls()
+        print('318 actual_calls', actual_calls)
         self.assertEqual(len(actual_calls), 1)
         self.assertFalse(actual_calls[0].did_raise)
         self.assertIsNone(actual_calls[0].returned_cert_config)
@@ -351,6 +355,7 @@ def _test(self):
         self.cert_config_fetcher.configure(False, None)
         self._perform_rpc(persistent_client_stub_A, True)
         actual_calls = self.cert_config_fetcher.getCalls()
+        print('356 actual_calls', actual_calls)
         self.assertEqual(len(actual_calls), 0)
 
         self.cert_config_fetcher.reset()
@@ -519,5 +524,4 @@ def test_cert_config_reuse(self):
 
 
 if __name__ == '__main__':
-    logging.basicConfig()
     unittest.main(verbosity=2)
