diff --git a/doc/interop-test-descriptions.md b/doc/interop-test-descriptions.md
index 44473099cee..978c422d470 100755
--- a/doc/interop-test-descriptions.md
+++ b/doc/interop-test-descriptions.md
@@ -1121,7 +1121,7 @@ for the `SimpleRequest.response_type`. If the server does not support the
 Server gets the default SimpleRequest proto as the request. The content of the
 request is ignored. It returns the SimpleResponse proto with the payload set
 to current timestamp.  The timestamp is an integer representing current time
-with nanosecond resolution. This integer is formated as ASCII decimal in the
+with nanosecond resolution. This integer is formatted as ASCII decimal in the
 response. The format is not really important as long as the response payload
 is different for each request. In addition it adds
   1. cache control headers such that the response can be cached by proxies in
diff --git a/examples/csharp/HelloworldXamarin/iOS/AppDelegate.cs b/examples/csharp/HelloworldXamarin/iOS/AppDelegate.cs
index 16a071c4d60..53835f89dac 100644
--- a/examples/csharp/HelloworldXamarin/iOS/AppDelegate.cs
+++ b/examples/csharp/HelloworldXamarin/iOS/AppDelegate.cs
@@ -58,7 +58,7 @@ public override void DidEnterBackground(UIApplication application)
 
         public override void WillEnterForeground(UIApplication application)
         {
-            // Called as part of the transiton from background to active state.
+            // Called as part of the transition from background to active state.
             // Here you can undo many of the changes made on entering the background.
         }
 
diff --git a/examples/python/cancellation/README.md b/examples/python/cancellation/README.md
index 26ef61c329f..87d0c76d9b1 100644
--- a/examples/python/cancellation/README.md
+++ b/examples/python/cancellation/README.md
@@ -76,7 +76,7 @@ catch the `RpcError` raised by the for loop upon cancellation.
 
 #### Cancellation on the Server Side
 
-A server is reponsible for cancellation in two ways. It must respond in some way
+A server is responsible for cancellation in two ways. It must respond in some way
 when a client initiates a cancellation, otherwise long-running computations
 could continue indefinitely.
 
diff --git a/examples/python/cancellation/hash_name.proto b/examples/python/cancellation/hash_name.proto
index 7b4e47e056f..262f12b21f8 100644
--- a/examples/python/cancellation/hash_name.proto
+++ b/examples/python/cancellation/hash_name.proto
@@ -21,7 +21,7 @@ message HashNameRequest {
   // The string that is desired in the secret's hash.
   string desired_name = 1;
 
-  // The ideal Hamming distance betwen desired_name and the secret that will
+  // The ideal Hamming distance between desired_name and the secret that will
   // be searched for.
   int32 ideal_hamming_distance = 2;
 
diff --git a/examples/python/data_transmission/README.en.md b/examples/python/data_transmission/README.en.md
index d9639290549..b935943477f 100644
--- a/examples/python/data_transmission/README.en.md
+++ b/examples/python/data_transmission/README.en.md
@@ -1,6 +1,6 @@
 ##  Data transmission demo for using gRPC in Python
 
-Four ways of data transmission when gRPC is used in Python.  [Offical Guide](<https://grpc.io/docs/guides/concepts/#unary-rpc>)
+Four ways of data transmission when gRPC is used in Python.  [Official Guide](<https://grpc.io/docs/guides/concepts/#unary-rpc>)
 
 - #### unary-unary
 
diff --git a/src/compiler/ruby_generator_string-inl.h b/src/compiler/ruby_generator_string-inl.h
index 7d6b50a516d..005e9f09c75 100644
--- a/src/compiler/ruby_generator_string-inl.h
+++ b/src/compiler/ruby_generator_string-inl.h
@@ -106,7 +106,7 @@ inline grpc::string RubyPackage(const grpc::protobuf::FileDescriptor* file) {
   if (file->options().has_ruby_package()) {
     package_name = file->options().ruby_package();
 
-    // If :: is in the package convert the Ruby formated name
+    // If :: is in the package convert the Ruby formatted name
     //    -> A::B::C
     // to use the dot seperator notation
     //    -> A.B.C
diff --git a/test/cpp/util/cli_credentials.cc b/test/cpp/util/cli_credentials.cc
index 91acc904aac..1f7af81a331 100644
--- a/test/cpp/util/cli_credentials.cc
+++ b/test/cpp/util/cli_credentials.cc
@@ -41,11 +41,11 @@ DEFINE_string(
     "validation.");
 DEFINE_string(
     ssl_client_cert, "",
-    "If not empty, load this PEM formated client certificate file. Requires "
+    "If not empty, load this PEM formatted client certificate file. Requires "
     "use of --ssl_client_key.");
 DEFINE_string(
     ssl_client_key, "",
-    "If not empty, load this PEM formated private key. Requires use of "
+    "If not empty, load this PEM formatted private key. Requires use of "
     "--ssl_client_cert");
 DEFINE_string(
     channel_creds_type, "",
diff --git a/test/cpp/util/proto_file_parser.h b/test/cpp/util/proto_file_parser.h
index 1e49c98daf9..114f5cba7c6 100644
--- a/test/cpp/util/proto_file_parser.h
+++ b/test/cpp/util/proto_file_parser.h
@@ -63,7 +63,7 @@ class ProtoFileParser {
   /// \param is_json_format if \c true the \c formatted_proto is treated as a
   ///        json-formatted proto, otherwise it is treated as a text-formatted
   ///        proto
-  /// \return the serialised binary proto represenation of \c formatted_proto
+  /// \return the serialised binary proto representation of \c formatted_proto
   grpc::string GetSerializedProtoFromMethod(const grpc::string& method,
                                             const grpc::string& formatted_proto,
                                             bool is_request,
@@ -72,7 +72,7 @@ class ProtoFileParser {
   /// Converts a text or json string to its proto representation for the given
   /// message type.
   /// \param formatted_proto the text- or json-formatted proto string
-  /// \return the serialised binary proto represenation of \c formatted_proto
+  /// \return the serialised binary proto representation of \c formatted_proto
   grpc::string GetSerializedProtoFromMessageType(
       const grpc::string& message_type_name,
       const grpc::string& formatted_proto, bool is_json_format);
diff --git a/tools/buildgen/plugins/check_attrs.py b/tools/buildgen/plugins/check_attrs.py
index 0730f8a1bbb..1fadd3a2310 100644
--- a/tools/buildgen/plugins/check_attrs.py
+++ b/tools/buildgen/plugins/check_attrs.py
@@ -112,7 +112,7 @@ def mako_plugin(dictionary):
 
   This validates that filegroups, libs, and target can have only valid
   attributes. This is mainly for preventing build.yaml from having
-  unnecessary and misleading attributes accidently.
+  unnecessary and misleading attributes accidentally.
   """
 
     errors = []
diff --git a/tools/gce/linux_kokoro_performance_worker_init.sh b/tools/gce/linux_kokoro_performance_worker_init.sh
index 46061a0cc67..78c98ce1e3b 100755
--- a/tools/gce/linux_kokoro_performance_worker_init.sh
+++ b/tools/gce/linux_kokoro_performance_worker_init.sh
@@ -92,7 +92,7 @@ sudo pypy get-pip.py
 sudo pypy -m pip install tabulate
 sudo pypy -m pip install google-api-python-client oauth2client
 # TODO(jtattermusch): for some reason, we need psutil installed
-# in pypy for kokoro_log_reader.py (strange, because the comand is
+# in pypy for kokoro_log_reader.py (strange, because the command is
 # "python kokoro_log_reader.py" and pypy is not the system default)
 sudo pypy -m pip install psutil
 
diff --git a/tools/github/pr_latency.py b/tools/github/pr_latency.py
index 34870a53260..2eb87aa66bb 100644
--- a/tools/github/pr_latency.py
+++ b/tools/github/pr_latency.py
@@ -18,7 +18,7 @@
 https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/
 
 This script goes over the most recent 100 pull requests. For PRs with a single
-commit, it uses the PR's creation as the initial time; othewise, it uses the
+commit, it uses the PR's creation as the initial time; otherwise, it uses the
 date of the last commit. This is somewhat fragile, and imposed by the fact that
 GitHub reports a PR's updated timestamp for any event that modifies the PR (e.g.
 comments), not just the addition of new commits.
diff --git a/tools/internal_ci/linux/grpc_publish_packages.sh b/tools/internal_ci/linux/grpc_publish_packages.sh
index 87684214d84..db5c9d0b03b 100755
--- a/tools/internal_ci/linux/grpc_publish_packages.sh
+++ b/tools/internal_ci/linux/grpc_publish_packages.sh
@@ -223,7 +223,7 @@ EOF
 
 # Upload the current build artifacts
 gsutil -m cp -r "$LOCAL_STAGING_TEMPDIR/${BUILD_RELPATH%%/*}" "$GCS_ARCHIVE_ROOT"
-# Upload directory indicies for subdirectories
+# Upload directory indices for subdirectories
 (
   cd "$LOCAL_BUILD_ROOT"
   find * -type d | while read -r directory
diff --git a/tools/interop_matrix/create_matrix_images.py b/tools/interop_matrix/create_matrix_images.py
index 28dc4be0f4d..0e4423b92ac 100755
--- a/tools/interop_matrix/create_matrix_images.py
+++ b/tools/interop_matrix/create_matrix_images.py
@@ -25,7 +25,7 @@
 import sys
 import tempfile
 
-# Langauage Runtime Matrix
+# Language Runtime Matrix
 import client_matrix
 
 python_util_dir = os.path.abspath(
diff --git a/tools/interop_matrix/create_testcases.sh b/tools/interop_matrix/create_testcases.sh
index b3e3ee6cd25..5074a8abbf5 100755
--- a/tools/interop_matrix/create_testcases.sh
+++ b/tools/interop_matrix/create_testcases.sh
@@ -19,7 +19,7 @@
 # Params:
 #   LANG - The language.
 #   SKIP_TEST - If set, skip running the test cases for sanity.
-#   RELEASE - Create testcase for specific release, defautl to 'master'.
+#   RELEASE - Create testcase for specific release, default to 'master'.
 #   KEEP_IMAGE - Do not clean local docker image created for the test cases.
 
 set -e
diff --git a/tools/profiling/microbenchmarks/bm_diff/bm_main.py b/tools/profiling/microbenchmarks/bm_diff/bm_main.py
index e5061b24f57..2dbaa1b7bef 100755
--- a/tools/profiling/microbenchmarks/bm_diff/bm_main.py
+++ b/tools/profiling/microbenchmarks/bm_diff/bm_main.py
@@ -66,7 +66,7 @@ def _args():
         '--old',
         default='old',
         type=str,
-        help='Name of baseline run to compare to. Ususally just called "old"')
+        help='Name of baseline run to compare to. Usually just called "old"')
     argp.add_argument(
         '-r',
         '--regex',
@@ -91,7 +91,7 @@ def _args():
         '--pr_comment_name',
         type=str,
         default="microbenchmarks",
-        help='Name that Jenkins will use to commen on the PR')
+        help='Name that Jenkins will use to comment on the PR')
     argp.add_argument('--counters', dest='counters', action='store_true')
     argp.add_argument('--no-counters', dest='counters', action='store_false')
     argp.set_defaults(counters=True)
diff --git a/tools/run_tests/performance/README.md b/tools/run_tests/performance/README.md
index 791270ab389..787f3229bc9 100644
--- a/tools/run_tests/performance/README.md
+++ b/tools/run_tests/performance/README.md
@@ -24,7 +24,7 @@ GCE "worker" machines that are in the same zone.
   * For example, to start the grpc-go benchmark worker:
   [grpc-go worker main.go](https://github.com/grpc/grpc-go/blob/master/benchmark/worker/main.go) --driver_port <driver_port>
 
-#### Comands to start workers in different languages:
+#### Commands to start workers in different languages:
  * Note that these commands are what the top-level
    [run_performance_test.py](../run_performance_tests.py) script uses to
    build and run different workers through the
diff --git a/tools/run_tests/run_tests.py b/tools/run_tests/run_tests.py
index 6786b8d53bb..7d2d56530af 100755
--- a/tools/run_tests/run_tests.py
+++ b/tools/run_tests/run_tests.py
@@ -1380,7 +1380,7 @@ def _docker_arch_suffix(arch):
 
 
 def runs_per_test_type(arg_str):
-    """Auxilary function to parse the "runs_per_test" flag.
+    """Auxiliary function to parse the "runs_per_test" flag.
 
        Returns:
            A positive integer or 0, the latter indicating an infinite number of
@@ -1786,7 +1786,7 @@ def _shut_down_legacy_server(legacy_server_port):
 
 
 def _calculate_num_runs_failures(list_of_results):
-    """Caculate number of runs and failures for a particular test.
+    """Calculate number of runs and failures for a particular test.
 
   Args:
     list_of_results: (List) of JobResult object.
