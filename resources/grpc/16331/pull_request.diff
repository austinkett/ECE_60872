diff --git a/src/python/grpcio_tests/tests/unit/_exit_scenarios.py b/src/python/grpcio_tests/tests/unit/_exit_scenarios.py
index 0a0239a63d8..43d19549476 100644
--- a/src/python/grpcio_tests/tests/unit/_exit_scenarios.py
+++ b/src/python/grpcio_tests/tests/unit/_exit_scenarios.py
@@ -26,6 +26,7 @@
 REQUEST = b'request'
 
 UNSTARTED_SERVER = 'unstarted_server'
+BOUND_SERVER = 'bound_server'
 RUNNING_SERVER = 'running_server'
 POLL_CONNECTIVITY_NO_SERVER = 'poll_connectivity_no_server'
 POLL_CONNECTIVITY = 'poll_connectivity'
@@ -171,6 +172,11 @@ def infinite_request_iterator():
         server = grpc.server(DaemonPool(), options=(('grpc.so_reuseport', 0),))
         if args.wait_for_interrupt:
             time.sleep(WAIT_TIME)
+    if args.scenario == BOUND_SERVER:
+        server = grpc.server(DaemonPool(), options=(('grpc.so_reuseport', 0),))
+        port = server.add_insecure_port('[::]:0')
+        if args.wait_for_interrupt:
+            time.sleep(WAIT_TIME)
     elif args.scenario == RUNNING_SERVER:
         server = grpc.server(DaemonPool(), options=(('grpc.so_reuseport', 0),))
         port = server.add_insecure_port('[::]:0')
diff --git a/src/python/grpcio_tests/tests/unit/_exit_test.py b/src/python/grpcio_tests/tests/unit/_exit_test.py
index f40f3ae07cd..faf2e109ef8 100644
--- a/src/python/grpcio_tests/tests/unit/_exit_test.py
+++ b/src/python/grpcio_tests/tests/unit/_exit_test.py
@@ -86,6 +86,19 @@ def test_unstarted_server_terminate(self):
             stdout=sys.stdout)
         interrupt_and_wait(process)
 
+    def test_bound_server(self):
+        process = subprocess.Popen(
+            BASE_COMMAND + [_exit_scenarios.BOUND_SERVER],
+            stdout=sys.stdout,
+            stderr=sys.stderr)
+        wait(process)
+
+    def test_bound_server_terminate(self):
+        process = subprocess.Popen(
+            BASE_SIGTERM_COMMAND + [_exit_scenarios.BOUND_SERVER],
+            stdout=sys.stdout)
+        interrupt_and_wait(process)
+
     def test_running_server(self):
         process = subprocess.Popen(
             BASE_COMMAND + [_exit_scenarios.RUNNING_SERVER],
