diff --git a/Zend/tests/bug75426.phpt b/Zend/tests/bug75426.phpt
new file mode 100644
index 000000000000..20b6704ca99d
--- /dev/null
+++ b/Zend/tests/bug75426.phpt
@@ -0,0 +1,14 @@
+--TEST--
+Bug #75426 ("Cannot use empty array elements" reports wrong position)
+--FILE--
+<?php
+$a = [
+    1,
+    2,
+    ,
+    3
+];
+
+?>
+--EXPECTF--
+Fatal error: Cannot use empty array elements in arrays in %s on line 5
diff --git a/Zend/zend_ast.h b/Zend/zend_ast.h
index 65d1f7c4d1c6..4ff2e96c7af1 100644
--- a/Zend/zend_ast.h
+++ b/Zend/zend_ast.h
@@ -61,6 +61,7 @@ enum _zend_ast_kind {
 	/* 0 child nodes */
 	ZEND_AST_MAGIC_CONST = 0 << ZEND_AST_NUM_CHILDREN_SHIFT,
 	ZEND_AST_TYPE,
+	ZEND_AST_ARRAY_ELEM_EMPTY,
 
 	/* 1 child node */
 	ZEND_AST_VAR = 1 << ZEND_AST_NUM_CHILDREN_SHIFT,
@@ -269,7 +270,7 @@ static zend_always_inline zend_ast *zend_ast_create_cast(uint32_t type, zend_ast
 }
 static zend_always_inline zend_ast *zend_ast_list_rtrim(zend_ast *ast) {
 	zend_ast_list *list = zend_ast_get_list(ast);
-	if (list->children && list->child[list->children - 1] == NULL) {
+	if (list->children && list->child[list->children - 1]->kind == ZEND_AST_ARRAY_ELEM_EMPTY) {
 		list->children--;
 	}
 	return ast;
diff --git a/Zend/zend_compile.c b/Zend/zend_compile.c
index bc4e3f0bd06e..a323401a3320 100644
--- a/Zend/zend_compile.c
+++ b/Zend/zend_compile.c
@@ -2833,14 +2833,15 @@ static void zend_compile_list_assign(
 	uint32_t i;
 	zend_bool has_elems = 0;
 	zend_bool is_keyed =
-		list->children > 0 && list->child[0] != NULL && list->child[0]->child[1] != NULL;
+		list->children > 0 && list->child[0] != NULL && list->child[0]->child[1] != NULL &&
+			list->child[0]->kind != ZEND_AST_ARRAY_ELEM_EMPTY && list->child[0]->child[1]->kind != ZEND_AST_ARRAY_ELEM_EMPTY;
 
 	for (i = 0; i < list->children; ++i) {
 		zend_ast *elem_ast = list->child[i];
 		zend_ast *var_ast, *key_ast;
 		znode fetch_result, dim_node;
 
-		if (elem_ast == NULL) {
+		if (elem_ast->kind == ZEND_AST_ARRAY_ELEM_EMPTY) {
 			if (is_keyed) {
 				zend_error(E_COMPILE_ERROR,
 					"Cannot use empty array entries in keyed array assignment");
@@ -2938,7 +2939,7 @@ zend_bool zend_list_has_assign_to(zend_ast *list_ast, zend_string *name) /* {{{
 		zend_ast *elem_ast = list->child[i];
 		zend_ast *var_ast;
 
-		if (!elem_ast) {
+		if (!elem_ast || elem_ast->kind == ZEND_AST_ARRAY_ELEM_EMPTY) {
 			continue;
 		}
 		var_ast = elem_ast->child[0];
@@ -6618,7 +6619,8 @@ static zend_bool zend_try_ct_eval_array(zval *result, zend_ast *ast) /* {{{ */
 	for (i = 0; i < list->children; ++i) {
 		zend_ast *elem_ast = list->child[i];
 
-		if (elem_ast == NULL) {
+		if (elem_ast->kind == ZEND_AST_ARRAY_ELEM_EMPTY) {
+			CG(zend_lineno) = elem_ast->lineno;
 			zend_error(E_COMPILE_ERROR, "Cannot use empty array elements in arrays");
 		}
 
@@ -7253,7 +7255,8 @@ void zend_compile_array(znode *result, zend_ast *ast) /* {{{ */
 		zend_bool by_ref;
 		znode value_node, key_node, *key_node_ptr = NULL;
 
-		if (elem_ast == NULL) {
+		if (elem_ast->kind == ZEND_AST_ARRAY_ELEM_EMPTY) {
+			CG(zend_lineno) = elem_ast->lineno;
 			zend_error(E_COMPILE_ERROR, "Cannot use empty array elements in arrays");
 		}
 
@@ -7706,7 +7709,7 @@ void zend_compile_const_expr_magic_const(zend_ast **ast_ptr) /* {{{ */
 void zend_compile_const_expr(zend_ast **ast_ptr) /* {{{ */
 {
 	zend_ast *ast = *ast_ptr;
-	if (ast == NULL || ast->kind == ZEND_AST_ZVAL) {
+	if (ast == NULL || ast->kind == ZEND_AST_ZVAL || ast->kind == ZEND_AST_ARRAY_ELEM_EMPTY) {
 		return;
 	}
 
diff --git a/Zend/zend_language_parser.y b/Zend/zend_language_parser.y
index 908ac143c1a7..1d11e4f03436 100644
--- a/Zend/zend_language_parser.y
+++ b/Zend/zend_language_parser.y
@@ -1188,7 +1188,7 @@ array_pair_list:
 ;
 
 possible_array_pair:
-		/* empty */ { $$ = NULL; }
+		/* empty */ { $$ = zend_ast_create(ZEND_AST_ARRAY_ELEM_EMPTY); }
 	|	array_pair  { $$ = $1; }
 ;
 
