diff --git a/ext/opcache/zend_file_cache.c b/ext/opcache/zend_file_cache.c
index 6ac4f0e35f64..6d34851352a4 100644
--- a/ext/opcache/zend_file_cache.c
+++ b/ext/opcache/zend_file_cache.c
@@ -791,6 +791,7 @@ int zend_file_cache_script_store(zend_persistent_script *script, int in_shm)
 	if (writev(fd, vec, 3) != (ssize_t)(sizeof(info) + script->size + info.str_size)) {
 		zend_accel_error(ACCEL_LOG_WARNING, "opcache cannot write to file '%s'\n", filename);
 		zend_string_release((zend_string*)ZCG(mem));
+		close(fd);
 		efree(mem);
 		unlink(filename);
 		efree(filename);
@@ -804,6 +805,7 @@ int zend_file_cache_script_store(zend_persistent_script *script, int in_shm)
 		) {
 		zend_accel_error(ACCEL_LOG_WARNING, "opcache cannot write to file '%s'\n", filename);
 		zend_string_release((zend_string*)ZCG(mem));
+		close(fd);
 		efree(mem);
 		unlink(filename);
 		efree(filename);
diff --git a/main/fastcgi.c b/main/fastcgi.c
index 3f2efc86f1c9..d77e8a0ae308 100644
--- a/main/fastcgi.c
+++ b/main/fastcgi.c
@@ -758,6 +758,7 @@ int fcgi_listen(const char *path, int backlog)
 	    bind(listen_socket, (struct sockaddr *) &sa, sock_len) < 0 ||
 	    listen(listen_socket, backlog) < 0) {
 
+		close(listen_socket);
 		fcgi_log(FCGI_ERROR, "Cannot bind/listen socket - [%d] %s.\n",errno, strerror(errno));
 		return -1;
 	}
diff --git a/sapi/cli/ps_title.c b/sapi/cli/ps_title.c
index 2d95e494aa84..8f5ce2480088 100644
--- a/sapi/cli/ps_title.c
+++ b/sapi/cli/ps_title.c
@@ -224,8 +224,10 @@ char** save_ps_args(int argc, char** argv)
         for (i = 0; i < argc; i++)
         {
             new_argv[i] = strdup(argv[i]);
-            if (!new_argv[i])
+            if (!new_argv[i]) {
+                free(new_argv);
                 goto clobber_error;
+            }
         }
         new_argv[argc] = NULL;
 
diff --git a/sapi/phpdbg/phpdbg.c b/sapi/phpdbg/phpdbg.c
index 0a45882251d4..ecd3f3974e0c 100644
--- a/sapi/phpdbg/phpdbg.c
+++ b/sapi/phpdbg/phpdbg.c
@@ -1433,6 +1433,7 @@ int main(int argc, char **argv) /* {{{ */
 			case 'i': { /* set init file */
 				if (init_file) {
 					free(init_file);
+					init_file = NULL;
 				}
 
 				init_file_len = strlen(php_optarg);
@@ -1786,7 +1787,9 @@ int main(int argc, char **argv) /* {{{ */
 		/* initialize from file */
 		PHPDBG_G(flags) |= PHPDBG_IS_INITIALIZING;
 		zend_try {
-			phpdbg_init(init_file, init_file_len, init_file_default);
+			if (init_file) {
+				phpdbg_init(init_file, init_file_len, init_file_default);
+			}
 			if (bp_tmp) {
 				PHPDBG_G(flags) |= PHPDBG_DISCARD_OUTPUT;
 				phpdbg_string_init(bp_tmp);
