diff --git a/Zend/zend_language_parser.y b/Zend/zend_language_parser.y
index fd45f6275a1a..754c50215dac 100644
--- a/Zend/zend_language_parser.y
+++ b/Zend/zend_language_parser.y
@@ -473,10 +473,10 @@ unset_variable:
 ;
 
 function_declaration_statement:
-	function returns_ref T_STRING '(' parameter_list ')' return_type
-	backup_doc_comment '{' inner_statement_list '}'
-		{ $$ = zend_ast_create_decl(ZEND_AST_FUNC_DECL, $2, $1, $8,
-		      zend_ast_get_str($3), $5, NULL, $10, $7); }
+	function returns_ref T_STRING backup_doc_comment '(' parameter_list ')' return_type
+	'{' inner_statement_list '}'
+		{ $$ = zend_ast_create_decl(ZEND_AST_FUNC_DECL, $2, $1, $4,
+		      zend_ast_get_str($3), $6, NULL, $10, $8); }
 ;
 
 is_reference:
@@ -705,10 +705,10 @@ class_statement:
 			{ $$ = $3; $$->attr = $1; }
 	|	T_USE name_list trait_adaptations
 			{ $$ = zend_ast_create(ZEND_AST_USE_TRAIT, $2, $3); }
-	|	method_modifiers function returns_ref identifier '(' parameter_list ')'
-		return_type backup_doc_comment method_body
-			{ $$ = zend_ast_create_decl(ZEND_AST_METHOD, $3 | $1, $2, $9,
-				  zend_ast_get_str($4), $6, NULL, $10, $8); }
+	|	method_modifiers function returns_ref identifier backup_doc_comment '(' parameter_list ')'
+		return_type method_body
+			{ $$ = zend_ast_create_decl(ZEND_AST_METHOD, $3 | $1, $2, $5,
+				  zend_ast_get_str($4), $7, NULL, $10, $9); }
 ;
 
 name_list:
@@ -959,16 +959,16 @@ expr_without_variable:
 	|	T_YIELD expr { $$ = zend_ast_create(ZEND_AST_YIELD, $2, NULL); }
 	|	T_YIELD expr T_DOUBLE_ARROW expr { $$ = zend_ast_create(ZEND_AST_YIELD, $4, $2); }
 	|	T_YIELD_FROM expr { $$ = zend_ast_create(ZEND_AST_YIELD_FROM, $2); }
-	|	function returns_ref '(' parameter_list ')' lexical_vars return_type
-		backup_doc_comment '{' inner_statement_list '}'
-			{ $$ = zend_ast_create_decl(ZEND_AST_CLOSURE, $2, $1, $8,
+	|	function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars return_type
+		'{' inner_statement_list '}'
+			{ $$ = zend_ast_create_decl(ZEND_AST_CLOSURE, $2, $1, $3,
 				  zend_string_init("{closure}", sizeof("{closure}") - 1, 0),
-			      $4, $6, $10, $7); }
-	|	T_STATIC function returns_ref '(' parameter_list ')' lexical_vars
-		return_type backup_doc_comment '{' inner_statement_list '}'
-			{ $$ = zend_ast_create_decl(ZEND_AST_CLOSURE, $3 | ZEND_ACC_STATIC, $2, $9,
+			      $5, $7, $10, $8); }
+	|	T_STATIC function returns_ref backup_doc_comment '(' parameter_list ')' lexical_vars
+		return_type '{' inner_statement_list '}'
+			{ $$ = zend_ast_create_decl(ZEND_AST_CLOSURE, $3 | ZEND_ACC_STATIC, $2, $4,
 			      zend_string_init("{closure}", sizeof("{closure}") - 1, 0),
-			      $5, $7, $11, $8); }
+			      $6, $8, $11, $9); }
 ;
 
 function:
diff --git a/ext/reflection/tests/bug71767.phpt b/ext/reflection/tests/bug71767.phpt
new file mode 100644
index 000000000000..17f7ffecb6ce
--- /dev/null
+++ b/ext/reflection/tests/bug71767.phpt
@@ -0,0 +1,56 @@
+--TEST--
+Bug #71767 (ReflectionMethod::getDocComment returns the wrong)
+--FILE--
+<?php
+
+/**
+ * Correct docblock
+ */
+function foo(
+    /** wrong dockblock */
+    $arg
+) {
+}
+
+class Foo {
+    /**
+     * Correct docblock
+     */
+    public function bar(
+        /** wrong dockblock */
+        $arg
+    ) {
+        
+    }
+}
+
+/**
+ * Correct docblock
+ */
+$func = static function(
+    /** wrong dockblock */
+    $arg
+) {
+};
+
+$reflectionFunction = new ReflectionFunction('foo');
+$reflectionClass = new ReflectionClass(Foo::class);
+$reflectionClosure = new ReflectionFunction($func);
+
+echo $reflectionFunction->getDocComment() . PHP_EOL;
+echo $reflectionClass->getMethod('bar')->getDocComment() . PHP_EOL;
+echo $reflectionClosure->getDocComment() . PHP_EOL;
+
+echo "Done\n";
+?>
+--EXPECTF--
+/**
+ * Correct docblock
+ */
+/**
+     * Correct docblock
+     */
+/**
+ * Correct docblock
+ */
+Done
