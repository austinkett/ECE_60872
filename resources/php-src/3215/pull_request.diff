diff --git a/sapi/cli/php_cli_server.c b/sapi/cli/php_cli_server.c
index 17c854caad8f..15350c76e5bb 100644
--- a/sapi/cli/php_cli_server.c
+++ b/sapi/cli/php_cli_server.c
@@ -1373,7 +1373,7 @@ static void php_cli_server_request_translate_vpath(php_cli_server_request *reque
 	char *buf = safe_pemalloc(1, request->vpath_len, 1 + document_root_len + 1 + sizeof("index.html"), 1);
 	char *p = buf, *prev_path = NULL, *q, *vpath;
 	size_t prev_path_len = 0;
-	int  is_static_file = 0;
+	int is_php = 0;
 
 	if (!buf) {
 		return;
@@ -1385,11 +1385,12 @@ static void php_cli_server_request_translate_vpath(php_cli_server_request *reque
 	if (request->vpath_len > 0 && request->vpath[0] != '/') {
 		*p++ = DEFAULT_SLASH;
 	}
-	q = request->vpath + request->vpath_len;
-	while (q > request->vpath) {
-		if (*q-- == '.') {
-			is_static_file = 1;
-			break;
+	q = request->vpath;
+	{
+		if (q) {
+			char *dot = strrchr(q, '.');
+			if (dot && !strcmp(dot, ".php"))
+				is_php = 1;
 		}
 	}
 	memmove(p, request->vpath, request->vpath_len);
@@ -1420,7 +1421,7 @@ static void php_cli_server_request_translate_vpath(php_cli_server_request *reque
 					}
 					file++;
 				}
-				if (!*file || is_static_file) {
+				if (!*file || is_php) {
 					if (prev_path) {
 						pefree(prev_path, 1);
 					}
diff --git a/sapi/cli/tests/bug61286.phpt b/sapi/cli/tests/bug61286.phpt
new file mode 100644
index 000000000000..218ee4e4ef9a
--- /dev/null
+++ b/sapi/cli/tests/bug61286.phpt
@@ -0,0 +1,66 @@
+--TEST--
+PATH_INFO (relevant to #60112)
+--DESCRIPTION--
+After this fix(#60112), previously 404 request like "localhost/foo/bar"
+now could serve correctly with request_uri "index.php" and PATH_INFO "/foo/bar/"
+--SKIPIF--
+<?php
+include "skipif.inc"; 
+?>
+--FILE--
+<?php
+include "php_cli_server.inc";
+php_cli_server_start('var_dump($_SERVER["PATH_INFO"]);', null);
+
+list($host, $port) = explode(':', PHP_CLI_SERVER_ADDRESS);
+$port = intval($port)?:80;
+
+$fp = fsockopen($host, $port, $errno, $errstr, 0.5);
+if (!$fp) {
+  die("connect failed");
+}
+
+if(fwrite($fp, <<<HEADER
+GET /foo/bar.anyext HTTP/1.1
+Host: {$host}
+
+
+HEADER
+)) {
+	while (!feof($fp)) {
+		echo fgets($fp);
+	}
+}
+
+fclose($fp);
+
+$fp = fsockopen($host, $port, $errno, $errstr, 0.5);
+if (!$fp) {
+  die("connect failed");
+}
+
+if(fwrite($fp, <<<HEADER
+GET /foo/bar.php HTTP/1.1
+Host: {$host}
+
+
+HEADER
+)) {
+	while (!feof($fp)) {
+		echo fgets($fp);
+    break;
+	}
+}
+
+fclose($fp);
+?>
+--EXPECTF--
+HTTP/1.1 200 OK
+Host: %s
+Date: %s
+Connection: close
+X-Powered-By: PHP/%s
+Content-type: text/html; charset=UTF-8
+
+string(15) "/foo/bar.anyext"
+HTTP/1.1 404 Not Found
diff --git a/sapi/cli/tests/php_cli_server_009.phpt b/sapi/cli/tests/php_cli_server_009.phpt
index d63c6abf28eb..b883a96ffb65 100644
--- a/sapi/cli/tests/php_cli_server_009.phpt
+++ b/sapi/cli/tests/php_cli_server_009.phpt
@@ -69,7 +69,6 @@ HEADER
 )) {
 	while (!feof($fp)) {
 		echo fgets($fp);
-		break;
 	}
 }
 
@@ -92,4 +91,11 @@ X-Powered-By: PHP/%s
 Content-type: text/html; charset=UTF-8
 
 string(9) "/foo/bar/"
-HTTP/1.0 404 Not Found
+HTTP/1.0 200 OK
+Host: %s
+Date: %s
+Connection: close
+X-Powered-By: PHP/%s
+Content-type: text/html; charset=UTF-8
+
+string(11) "/foo/bar.js"
diff --git a/sapi/cli/tests/php_cli_server_016.phpt b/sapi/cli/tests/php_cli_server_016.phpt
index f15aff1240bf..0c26a3f16b87 100644
--- a/sapi/cli/tests/php_cli_server_016.phpt
+++ b/sapi/cli/tests/php_cli_server_016.phpt
@@ -42,5 +42,5 @@ HEADER
 
 fclose($fp);
 ?>
---EXPECTF--
-HTTP/1.1 404 Not Found
+--EXPECT--
+HTTP/1.1 200 OK
