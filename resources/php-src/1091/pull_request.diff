diff --git a/ext/sqlite3/sqlite3.c b/ext/sqlite3/sqlite3.c
index 556f7861f60a..93a865ebfca3 100644
--- a/ext/sqlite3/sqlite3.c
+++ b/ext/sqlite3/sqlite3.c
@@ -860,18 +860,23 @@ static int php_sqlite3_callback_compare(void *coll, int a_len, const void *a, in
 
 	collation->fci.fci.params = zargs;
 
-	if ((ret = zend_call_function(&collation->fci.fci, &collation->fci.fcc)) == FAILURE) {
-		php_error_docref(NULL, E_WARNING, "An error occurred while invoking the compare callback");
+	if (!EG(exception)) {
+		//Exception occurred on previous callback. Don't attempt to call function
+		if ((ret = zend_call_function(&collation->fci.fci, &collation->fci.fcc)) == FAILURE) {
+			php_error_docref(NULL, E_WARNING, "An error occurred while invoking the compare callback");
+		}
 	}
 
 	zval_ptr_dtor(&zargs[0]);
 	zval_ptr_dtor(&zargs[1]);
 	efree(zargs);
 
-	//retval ought to contain a ZVAL_LONG by now
-	// (the result of a comparison, i.e. most likely -1, 0, or 1)
-	//I suppose we could accept any scalar return type, though.
-	if (Z_TYPE(retval) != IS_LONG){
+	if (EG(exception)) {
+		ret = 0;
+	} else if (Z_TYPE(retval) != IS_LONG){
+		//retval ought to contain a ZVAL_LONG by now
+		// (the result of a comparison, i.e. most likely -1, 0, or 1)
+		//I suppose we could accept any scalar return type, though.
 		php_error_docref(NULL, E_WARNING, "An error occurred while invoking the compare callback (invalid return type).  Collation behaviour is undefined.");
 	}else{
 		ret = Z_LVAL(retval);
diff --git a/ext/sqlite3/tests/bug68760.phpt b/ext/sqlite3/tests/bug68760.phpt
new file mode 100644
index 000000000000..562fa48c9cdb
--- /dev/null
+++ b/ext/sqlite3/tests/bug68760.phpt
@@ -0,0 +1,31 @@
+--TEST--
+Bug #68760 (Callback throws exception behaviour.)
+--FILE--
+<?php
+function oopsFunction($a, $b) {
+	echo "callback".PHP_EOL;
+	throw new \Exception("oops");
+}
+
+$db = new SQLite3(":memory:");
+$db->exec("CREATE TABLE test (col1 string)");
+$db->exec("INSERT INTO test VALUES ('a1')");
+$db->exec("INSERT INTO test VALUES ('a10')");
+$db->exec("INSERT INTO test VALUES ('a2')");
+
+try {
+    $db->createCollation('NATURAL_CMP', 'oopsFunction');
+    $naturalSort = $db->query("SELECT col1 FROM test ORDER BY col1 COLLATE NATURAL_CMP");
+    while ($row = $naturalSort->fetchArray()) {
+        echo $row['col1'], "\n";
+    }
+    $db->close();
+}
+catch(\Exception $e) {
+    echo "Exception: ".$e->getMessage();
+}
+?>
+--EXPECTF--
+callback
+Exception: oops
+
