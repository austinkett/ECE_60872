diff --git a/ext/intl/formatter/formatter_attr.c b/ext/intl/formatter/formatter_attr.c
index 8e4a18be415c..950608bfc486 100644
--- a/ext/intl/formatter/formatter_attr.c
+++ b/ext/intl/formatter/formatter_attr.c
@@ -415,6 +415,10 @@ PHP_FUNCTION( numfmt_set_pattern )
 	}
 	INTL_METHOD_CHECK_STATUS( nfo, "Error setting pattern value" );
 
+	if (value) {
+        zend_update_property_string(NumberFormatter_ce_ptr, object, "pattern", sizeof("pattern") - 1, value);
+    }
+
 	RETURN_TRUE;
 }
 /* }}} */
diff --git a/ext/intl/formatter/formatter_class.c b/ext/intl/formatter/formatter_class.c
index 287d19aaa92a..048550763428 100644
--- a/ext/intl/formatter/formatter_class.c
+++ b/ext/intl/formatter/formatter_class.c
@@ -159,6 +159,7 @@ ZEND_END_ARG_INFO()
  */
 static zend_function_entry NumberFormatter_class_functions[] = {
 	PHP_ME( NumberFormatter, __construct, arginfo_numberformatter___construct, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR )
+	PHP_ME( NumberFormatter, __wakeup, NULL, ZEND_ACC_PUBLIC )
 	ZEND_FENTRY( create, ZEND_FN( numfmt_create ), arginfo_numberformatter___construct, ZEND_ACC_PUBLIC|ZEND_ACC_STATIC )
 	PHP_NAMED_FE( format, ZEND_FN( numfmt_format ), arginfo_numberformatter_format )
 	PHP_NAMED_FE( parse, ZEND_FN( numfmt_parse ), number_parse_arginfo )
@@ -198,12 +199,15 @@ void formatter_register_class( void )
 	NumberFormatter_handlers.dtor_obj = NumberFormatter_object_dtor;
 	NumberFormatter_handlers.free_obj = NumberFormatter_object_free;
 
-	/* Declare 'NumberFormatter' class properties. */
 	if( !NumberFormatter_ce_ptr )
 	{
 		zend_error(E_ERROR, "Failed to register NumberFormatter class");
 		return;
 	}
+	/* Declare 'NumberFormatter' class properties. */
+	zend_declare_property_string(NumberFormatter_ce_ptr, "locale", sizeof( "locale" ) - 1, "", ZEND_ACC_PRIVATE );
+	zend_declare_property_long(NumberFormatter_ce_ptr, "style", sizeof( "style" ) - 1, 0, ZEND_ACC_PRIVATE );
+	zend_declare_property_string(NumberFormatter_ce_ptr, "pattern", sizeof( "pattern" ) - 1, "", ZEND_ACC_PRIVATE );
 }
 /* }}} */
 
diff --git a/ext/intl/formatter/formatter_main.c b/ext/intl/formatter/formatter_main.c
index bf0d2a80b7dd..df601c0e8132 100644
--- a/ext/intl/formatter/formatter_main.c
+++ b/ext/intl/formatter/formatter_main.c
@@ -62,6 +62,12 @@ static int numfmt_ctor(INTERNAL_FUNCTION_PARAMETERS, zend_bool is_constructor)
 	/* Create an ICU number formatter. */
 	FORMATTER_OBJECT(nfo) = unum_open(style, spattern, spattern_len, locale, NULL, &INTL_DATA_ERROR_CODE(nfo));
 
+	zend_update_property_string(NumberFormatter_ce_ptr, object, "locale", sizeof("locale") - 1, locale);
+	zend_update_property_long(NumberFormatter_ce_ptr, object, "style", sizeof("style") - 1, style);
+	if (pattern) {
+		zend_update_property_string(NumberFormatter_ce_ptr, object, "pattern", sizeof("pattern") - 1, pattern);
+	}
+
 	if(spattern) {
 		efree(spattern);
 	}
@@ -104,6 +110,82 @@ PHP_METHOD( NumberFormatter, __construct )
 }
 /* }}} */
 
+/* {{{ proto void NumberFormatter::__wakeup()
+ * NumberFormatter object unserializer.
+ */
+PHP_METHOD( NumberFormatter, __wakeup )
+{
+		const char* locale = NULL;
+		size_t      pattern_len = 0;
+		char*       pattern = NULL;
+		zend_long   style = 0;
+		UChar*      spattern     = NULL;
+		int32_t     spattern_len = 0;
+		zval        rv;
+		zval        *z_locale, *z_style, *z_pattern;
+		zend_string *zstr_locale, *zstr_pattern = NULL;
+
+		return_value = getThis();
+
+		z_locale = zend_read_property(Z_OBJCE_P(return_value), return_value, "locale", sizeof("locale") - 1, 0, &rv);
+		if (z_locale == NULL || Z_TYPE_P(z_locale) != IS_STRING) {
+			return;
+		}
+
+		zstr_locale = zval_get_string(z_locale);
+		locale = ZSTR_VAL(zstr_locale);
+
+
+		z_style = zend_read_property(Z_OBJCE_P(return_value), return_value, "style", sizeof("style") - 1, 0, &rv);
+		if (z_style != NULL && Z_TYPE_P(z_style) == IS_LONG) {
+			style = zval_get_long(z_style);
+		}
+
+		z_pattern = zend_read_property(Z_OBJCE_P(return_value), return_value, "pattern", sizeof("pattern") - 1, 0, &rv);
+		if (z_pattern != NULL && Z_TYPE_P(z_pattern) == IS_STRING) {
+			zstr_pattern = zval_get_string(z_pattern);
+			pattern = ZSTR_VAL(zstr_pattern);
+			pattern_len = ZSTR_LEN(zstr_pattern);
+		}
+
+		FORMATTER_METHOD_INIT_VARS;
+
+		object = return_value;
+		nfo = Z_INTL_NUMBERFORMATTER_P(object);
+
+		/* Convert pattern (if specified) to UTF-16. */
+		if(pattern && pattern_len) {
+			intl_convert_utf8_to_utf16(&spattern, &spattern_len, pattern, pattern_len, &INTL_DATA_ERROR_CODE(nfo));
+			if (INTL_DATA_ERROR_CODE(nfo) != U_ZERO_ERROR) {
+					intl_errors_set(&nfo->nf_data.error, INTL_DATA_ERROR_CODE(nfo),
+						"Unserializing NumberFormatter failed", 0);
+					if(spattern) {
+						efree(spattern);
+					}
+					zend_string_release(zstr_locale);
+					if (zstr_pattern != NULL) {
+						zend_string_release(zstr_pattern);
+					}
+					return;
+			}
+		}
+
+		/* Create an ICU number formatter. */
+		FORMATTER_OBJECT(nfo) = unum_open(style, spattern, spattern_len, locale, NULL, &INTL_DATA_ERROR_CODE(nfo));
+
+		if(spattern) {
+			efree(spattern);
+		}
+
+		zend_string_release(zstr_locale);
+		if (zstr_pattern != NULL) {
+			zend_string_release(zstr_pattern);
+		}
+		intl_errors_set(&nfo->nf_data.error, INTL_DATA_ERROR_CODE(nfo),
+			"Unserializing NumberFormatter instance failed", 0);
+}
+/* }}} */
+
 /* {{{ proto int NumberFormatter::getErrorCode()
  * Get formatter's last error code. }}} */
 /* {{{ proto int numfmt_get_error_code( NumberFormatter $nf )
diff --git a/ext/intl/formatter/formatter_main.h b/ext/intl/formatter/formatter_main.h
index 66cf5c1b6b69..1267d0b21ed4 100644
--- a/ext/intl/formatter/formatter_main.h
+++ b/ext/intl/formatter/formatter_main.h
@@ -23,5 +23,6 @@ PHP_FUNCTION( numfmt_create );
 PHP_FUNCTION( numfmt_get_error_code );
 PHP_FUNCTION( numfmt_get_error_message );
 PHP_METHOD( NumberFormatter, __construct );
+PHP_METHOD( NumberFormatter, __wakeup );
 
 #endif // FORMATTER_FORMAT_H
diff --git a/ext/intl/tests/bug74063.phpt b/ext/intl/tests/bug74063.phpt
new file mode 100644
index 000000000000..dedbfd07b3b1
--- /dev/null
+++ b/ext/intl/tests/bug74063.phpt
@@ -0,0 +1,68 @@
+--TEST--
+Bug #74063: NumberFormatter fails after retrieval from session
+--SKIPIF--
+<?php include('skipif.inc'); ?>
+--FILE--
+<?php
+session_start();
+
+if(!isset($_SESSION["currencyFormatter"])) {
+    echo "no formatter on session\n";
+    $formatter = new NumberFormatter("en_GB", NumberFormatter::CURRENCY);
+    $_SESSION["currencyFormatter"] = $formatter;
+} else {
+    die();
+}
+
+var_dump($formatter->format(1234567, NumberFormatter::CURRENCY));
+
+session_write_close();
+@session_start();
+
+if(isset($_SESSION["currencyFormatter"])){
+    $formatter = $_SESSION["currencyFormatter"];
+    echo "loaded formatter from session\n";
+} else {
+    die();
+}
+
+var_dump($formatter->format(1234567, NumberFormatter::CURRENCY));
+$_SESSION["currencyFormatter"] = new NumberFormatter("en_GB", NumberFormatter::PATTERN_DECIMAL, "#0.# kg");
+
+session_write_close();
+@session_start();
+
+if(isset($_SESSION["currencyFormatter"])){
+    $formatter = $_SESSION["currencyFormatter"];
+    echo "loaded formatter from session\n";
+} else {
+    die();
+}
+
+var_dump($formatter->format(1234567));
+$formatter->setPattern("#,##0.###");
+
+session_write_close();
+@session_start();
+
+if(isset($_SESSION["currencyFormatter"])){
+    $formatter = $_SESSION["currencyFormatter"];
+    echo "loaded formatter from session\n";
+} else {
+    die();
+}
+
+var_dump($formatter->format(1234567));
+
+session_write_close();
+?>
+--EXPECT--
+no formatter on session
+string(14) "£1,234,567.00"
+loaded formatter from session
+string(14) "£1,234,567.00"
+loaded formatter from session
+string(10) "1234567 kg"
+loaded formatter from session
+string(9) "1,234,567"
+
diff --git a/ext/intl/tests/symfony_format_type_double_intl1.phpt b/ext/intl/tests/symfony_format_type_double_intl1.phpt
index 13a7ad761fa7..db181fb18f8d 100644
--- a/ext/intl/tests/symfony_format_type_double_intl1.phpt
+++ b/ext/intl/tests/symfony_format_type_double_intl1.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   int(1)
diff --git a/ext/intl/tests/symfony_format_type_double_intl2.phpt b/ext/intl/tests/symfony_format_type_double_intl2.phpt
index 6bff7cc3557c..c32a1f80f013 100644
--- a/ext/intl/tests/symfony_format_type_double_intl2.phpt
+++ b/ext/intl/tests/symfony_format_type_double_intl2.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(1.1)
diff --git a/ext/intl/tests/symfony_format_type_double_intl3.phpt b/ext/intl/tests/symfony_format_type_double_intl3.phpt
index 3b0d576df7d4..3ac9e7e532e1 100644
--- a/ext/intl/tests/symfony_format_type_double_intl3.phpt
+++ b/ext/intl/tests/symfony_format_type_double_intl3.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   int(1)
diff --git a/ext/intl/tests/symfony_format_type_double_intl4.phpt b/ext/intl/tests/symfony_format_type_double_intl4.phpt
index 3476e108923d..7110f1a45439 100644
--- a/ext/intl/tests/symfony_format_type_double_intl4.phpt
+++ b/ext/intl/tests/symfony_format_type_double_intl4.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(1.1)
diff --git a/ext/intl/tests/symfony_format_type_int32_intl1.phpt b/ext/intl/tests/symfony_format_type_int32_intl1.phpt
index 2867b35690b9..8f7cb694e89c 100644
--- a/ext/intl/tests/symfony_format_type_int32_intl1.phpt
+++ b/ext/intl/tests/symfony_format_type_int32_intl1.phpt
@@ -39,7 +39,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   int(1)
diff --git a/ext/intl/tests/symfony_format_type_int32_intl2.phpt b/ext/intl/tests/symfony_format_type_int32_intl2.phpt
index 6a65a0a80924..4f57fd96cd5b 100644
--- a/ext/intl/tests/symfony_format_type_int32_intl2.phpt
+++ b/ext/intl/tests/symfony_format_type_int32_intl2.phpt
@@ -23,7 +23,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(1.1)
diff --git a/ext/intl/tests/symfony_format_type_int32_intl3.phpt b/ext/intl/tests/symfony_format_type_int32_intl3.phpt
index 5e657db419b9..cc3509f4652f 100644
--- a/ext/intl/tests/symfony_format_type_int32_intl3.phpt
+++ b/ext/intl/tests/symfony_format_type_int32_intl3.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(4) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(2147483648)
diff --git a/ext/intl/tests/symfony_format_type_int32_intl4.phpt b/ext/intl/tests/symfony_format_type_int32_intl4.phpt
index 54043d92e921..3113812cf7ba 100644
--- a/ext/intl/tests/symfony_format_type_int32_intl4.phpt
+++ b/ext/intl/tests/symfony_format_type_int32_intl4.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   int(1)
diff --git a/ext/intl/tests/symfony_format_type_int32_intl5.phpt b/ext/intl/tests/symfony_format_type_int32_intl5.phpt
index d5f78d7119bc..d2a8483f94a9 100644
--- a/ext/intl/tests/symfony_format_type_int32_intl5.phpt
+++ b/ext/intl/tests/symfony_format_type_int32_intl5.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(1.1)
diff --git a/ext/intl/tests/symfony_format_type_int32_intl6.phpt b/ext/intl/tests/symfony_format_type_int32_intl6.phpt
index fa708799d131..6f644152955b 100644
--- a/ext/intl/tests/symfony_format_type_int32_intl6.phpt
+++ b/ext/intl/tests/symfony_format_type_int32_intl6.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(4) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(2147483648)
diff --git a/ext/intl/tests/symfony_format_type_int32_intl7.phpt b/ext/intl/tests/symfony_format_type_int32_intl7.phpt
index 5bbe4266770a..8ee7a60c0a08 100644
--- a/ext/intl/tests/symfony_format_type_int32_intl7.phpt
+++ b/ext/intl/tests/symfony_format_type_int32_intl7.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(4) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(-2147483649)
diff --git a/ext/intl/tests/symfony_format_type_int64_intl1.phpt b/ext/intl/tests/symfony_format_type_int64_intl1.phpt
index 01f582091174..061444eb208c 100644
--- a/ext/intl/tests/symfony_format_type_int64_intl1.phpt
+++ b/ext/intl/tests/symfony_format_type_int64_intl1.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   int(1)
diff --git a/ext/intl/tests/symfony_format_type_int64_intl2.phpt b/ext/intl/tests/symfony_format_type_int64_intl2.phpt
index 13d1cdaee7f3..42a036f71a74 100644
--- a/ext/intl/tests/symfony_format_type_int64_intl2.phpt
+++ b/ext/intl/tests/symfony_format_type_int64_intl2.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(1.1)
diff --git a/ext/intl/tests/symfony_format_type_int64_intl3.phpt b/ext/intl/tests/symfony_format_type_int64_intl3.phpt
index a7c80b34c3cf..3354bef359ae 100644
--- a/ext/intl/tests/symfony_format_type_int64_intl3.phpt
+++ b/ext/intl/tests/symfony_format_type_int64_intl3.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(2147483648)
diff --git a/ext/intl/tests/symfony_format_type_int64_intl4.phpt b/ext/intl/tests/symfony_format_type_int64_intl4.phpt
index f1a0801edfe9..5b109b43e10f 100644
--- a/ext/intl/tests/symfony_format_type_int64_intl4.phpt
+++ b/ext/intl/tests/symfony_format_type_int64_intl4.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(-2147483649)
diff --git a/ext/intl/tests/symfony_format_type_int64_intl5.phpt b/ext/intl/tests/symfony_format_type_int64_intl5.phpt
index dad8735b89a3..2c0d0677705a 100644
--- a/ext/intl/tests/symfony_format_type_int64_intl5.phpt
+++ b/ext/intl/tests/symfony_format_type_int64_intl5.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   int(1)
diff --git a/ext/intl/tests/symfony_format_type_int64_intl6.phpt b/ext/intl/tests/symfony_format_type_int64_intl6.phpt
index f038cbd0c3ca..077f27358fa1 100644
--- a/ext/intl/tests/symfony_format_type_int64_intl6.phpt
+++ b/ext/intl/tests/symfony_format_type_int64_intl6.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(1.1)
diff --git a/ext/intl/tests/symfony_format_type_int64_intl7.phpt b/ext/intl/tests/symfony_format_type_int64_intl7.phpt
index 9c8853cafc82..24b5f6675778 100644
--- a/ext/intl/tests/symfony_format_type_int64_intl7.phpt
+++ b/ext/intl/tests/symfony_format_type_int64_intl7.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(2147483648)
diff --git a/ext/intl/tests/symfony_format_type_int64_intl8.phpt b/ext/intl/tests/symfony_format_type_int64_intl8.phpt
index 50524976abf1..6448cd0868eb 100644
--- a/ext/intl/tests/symfony_format_type_int64_intl8.phpt
+++ b/ext/intl/tests/symfony_format_type_int64_intl8.phpt
@@ -20,7 +20,13 @@ echo "== didn't crash ==".PHP_EOL;
 --EXPECT--
 array(3) {
   [0]=>
-  object(NumberFormatter)#1 (0) {
+  object(NumberFormatter)#1 (3) {
+    ["locale":"NumberFormatter":private]=>
+    string(0) ""
+    ["style":"NumberFormatter":private]=>
+    int(0)
+    ["pattern":"NumberFormatter":private]=>
+    string(0) ""
   }
   [1]=>
   float(-2147483649)
