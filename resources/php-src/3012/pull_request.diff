diff --git a/ext/dom/element.c b/ext/dom/element.c
index 56499ea628fb..ee13d7cbea70 100644
--- a/ext/dom/element.c
+++ b/ext/dom/element.c
@@ -412,6 +412,10 @@ PHP_FUNCTION(dom_element_set_attribute)
 		if (xmlNewNs(nodep, (xmlChar *)value, NULL)) {
 			RETURN_TRUE;
 		}
+	} else if (xmlStrncmp((xmlChar *)name, (xmlChar *)"xmlns:", 6) == 0) {
+		if (xmlNewNs(nodep, (xmlChar *)value, (xmlChar *)(name + 6))) {
+			RETURN_TRUE;
+		}
 	} else {
 		attr = (xmlNodePtr)xmlSetProp(nodep, (xmlChar *) name, (xmlChar *)value);
 	}
diff --git a/ext/dom/tests/DOMElement_setAttribute-prefixed-namespace-decl.phpt b/ext/dom/tests/DOMElement_setAttribute-prefixed-namespace-decl.phpt
new file mode 100644
index 000000000000..c7a52cf55d45
--- /dev/null
+++ b/ext/dom/tests/DOMElement_setAttribute-prefixed-namespace-decl.phpt
@@ -0,0 +1,56 @@
+--TEST--
+DOMNode: setAttribute() with prefixed namespace declaration
+--SKIPIF--
+<?php require_once('skipif.inc'); ?>
+--FILE--
+<?php
+require_once("dom_test.inc");
+
+$dom = new DOMDocument;
+$dom->loadXML($xmlstr);
+if(!$dom) {
+  echo "Error while parsing the document\n";
+  exit;
+}
+
+$element = $dom->documentElement;
+
+echo "Verify that we have a DOMElement object:\n";
+echo get_class($element), "\n";
+
+echo "\nElement should not have xmlns attribute:\n";
+var_dump($element->hasAttribute('xmlns:php'));
+
+echo "\nElement should not have namespace:\n";
+var_dump($element->lookupPrefix('http://www.php.net/'), $element->lookupNamespaceURI('php'));
+
+echo "\nsetAttribute() call should succeed:\n";
+var_dump($element->setAttribute('xmlns:php', 'http://www.php.net/'));
+
+echo "\nElement should have xmlns attribute:\n";
+var_dump($element->hasAttribute('xmlns:php'));
+
+echo "\nElement should have namespace:\n";
+var_dump($element->lookupPrefix('http://www.php.net/'), $element->lookupNamespaceURI('php'));
+
+?>
+--EXPECTF--
+Verify that we have a DOMElement object:
+DOMElement
+
+Element should not have xmlns attribute:
+bool(false)
+
+Element should not have namespace:
+NULL
+NULL
+
+setAttribute() call should succeed:
+bool(true)
+
+Element should have xmlns attribute:
+bool(true)
+
+Element should have namespace:
+string(3) "php"
+string(19) "http://www.php.net/"
diff --git a/ext/dom/tests/DOMElement_setAttribute-unprefixed-namespace-decl.phpt b/ext/dom/tests/DOMElement_setAttribute-unprefixed-namespace-decl.phpt
new file mode 100644
index 000000000000..65c8863be952
--- /dev/null
+++ b/ext/dom/tests/DOMElement_setAttribute-unprefixed-namespace-decl.phpt
@@ -0,0 +1,56 @@
+--TEST--
+DOMNode: setAttribute() with unprefixed namespace declaration
+--SKIPIF--
+<?php require_once('skipif.inc'); ?>
+--FILE--
+<?php
+require_once("dom_test.inc");
+
+$dom = new DOMDocument;
+$dom->loadXML($xmlstr);
+if(!$dom) {
+  echo "Error while parsing the document\n";
+  exit;
+}
+
+$element = $dom->documentElement;
+
+echo "Verify that we have a DOMElement object:\n";
+echo get_class($element), "\n";
+
+echo "\nElement should not have xmlns attribute:\n";
+var_dump($element->hasAttribute('xmlns'));
+
+echo "\nElement should not have namespace:\n";
+var_dump($element->lookupPrefix('http://www.php.net/'), $element->lookupNamespaceURI(null));
+
+echo "\nsetAttribute() call should succeed:\n";
+var_dump($element->setAttribute('xmlns', 'http://www.php.net/'));
+
+echo "\nElement should have xmlns attribute:\n";
+var_dump($element->hasAttribute('xmlns'));
+
+echo "\nElement should have namespace:\n";
+var_dump($element->lookupPrefix('http://www.php.net/'), $element->lookupNamespaceURI(null));
+
+?>
+--EXPECTF--
+Verify that we have a DOMElement object:
+DOMElement
+
+Element should not have xmlns attribute:
+bool(false)
+
+Element should not have namespace:
+NULL
+NULL
+
+setAttribute() call should succeed:
+bool(true)
+
+Element should have xmlns attribute:
+bool(true)
+
+Element should have namespace:
+NULL
+string(19) "http://www.php.net/"
