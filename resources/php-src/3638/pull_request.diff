diff --git a/ext/pdo_sqlite/sqlite_statement.c b/ext/pdo_sqlite/sqlite_statement.c
index 186bf182b166..d32b4eda43fc 100644
--- a/ext/pdo_sqlite/sqlite_statement.c
+++ b/ext/pdo_sqlite/sqlite_statement.c
@@ -232,6 +232,7 @@ static int pdo_sqlite_stmt_fetch(pdo_stmt_t *stmt,
 static int pdo_sqlite_stmt_describe(pdo_stmt_t *stmt, int colno)
 {
 	pdo_sqlite_stmt *S = (pdo_sqlite_stmt*)stmt->driver_data;
+	struct pdo_bound_param_data *param;
 	const char *str;
 
 	if(colno >= sqlite3_column_count(S->stmt)) {
@@ -246,10 +247,19 @@ static int pdo_sqlite_stmt_describe(pdo_stmt_t *stmt, int colno)
 	stmt->columns[colno].precision = 0;
 
 	switch (sqlite3_column_type(S->stmt, colno)) {
+		case SQLITE_BLOB:
+			if (stmt->bound_columns && (
+					(param = zend_hash_index_find_ptr(stmt->bound_columns, colno)) != NULL ||
+					(param = zend_hash_find_ptr(stmt->bound_columns, stmt->columns[colno].name)) != NULL)) {
+
+				if (PDO_PARAM_TYPE(param->param_type) == PDO_PARAM_LOB) {
+					stmt->columns[colno].param_type = PDO_PARAM_LOB;
+					break;
+				}
+			}
 		case SQLITE_INTEGER:
 		case SQLITE_FLOAT:
 		case SQLITE3_TEXT:
-		case SQLITE_BLOB:
 		case SQLITE_NULL:
 		default:
 			stmt->columns[colno].param_type = PDO_PARAM_STR;
diff --git a/ext/pdo_sqlite/tests/bug40913.phpt b/ext/pdo_sqlite/tests/bug40913.phpt
new file mode 100644
index 000000000000..b512d5f3c073
--- /dev/null
+++ b/ext/pdo_sqlite/tests/bug40913.phpt
@@ -0,0 +1,53 @@
+--TEST--
+Bug #40913 (PDO::PARAM_LOB does not bind to a stream for fetching a BLOB)
+--SKIPIF--
+<?php if (!extension_loaded('pdo_sqlite')) print 'skip not loaded'; ?>
+--FILE--
+<?php
+
+$pdo = new PDO('sqlite::memory:');
+$pdo->exec('CREATE TABLE test (a INTEGER, b BLOB);');
+$pdo->exec('INSERT INTO test VALUES (42, zeroblob(5000));');
+
+$stmt = $pdo->prepare('SELECT a, b FROM test WHERE a = 42;');
+$stmt->bindColumn(1, $id, PDO::PARAM_INT);
+$stmt->bindColumn(2, $blob, PDO::PARAM_LOB);
+$stmt->execute();
+$stmt->fetch(PDO::FETCH_BOUND);
+
+var_dump($id);
+var_dump(is_resource($blob));
+var_dump(stream_get_meta_data($blob));
+var_dump(strlen(fread($blob, 6000)));
+
+// Try to seek and see if it works
+var_dump(fseek($blob, 1000));
+var_dump(strlen(fread($blob, 6000)));
+
+// Close
+var_dump(fclose($blob));
+
+?>
+--EXPECTF--
+int(42)
+bool(true)
+array(7) {
+  ["timed_out"]=>
+  bool(false)
+  ["blocked"]=>
+  bool(true)
+  ["eof"]=>
+  bool(false)
+  ["stream_type"]=>
+  string(6) "MEMORY"
+  ["mode"]=>
+  string(2) "rb"
+  ["unread_bytes"]=>
+  int(0)
+  ["seekable"]=>
+  bool(true)
+}
+int(5000)
+int(0)
+int(4000)
+bool(true)
\ No newline at end of file
