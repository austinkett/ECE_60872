diff --git a/ext/standard/tests/file/bug78386.phpt b/ext/standard/tests/file/bug78386.phpt
new file mode 100644
index 000000000000..9118761aab21
--- /dev/null
+++ b/ext/standard/tests/file/bug78386.phpt
@@ -0,0 +1,14 @@
+--TEST--
+Bug #78386 (fstat mode has unexpected value on PHP 7.4)
+--SKIPIF--
+<?php
+if (substr(PHP_OS, 0, 3) != 'WIN') die("skip this test is for Windows platforms only");
+?>
+--FILE--
+<?php
+$handle = popen('dir', 'r');
+$stat = fstat($handle);
+var_dump(decoct($stat['mode']));
+?>
+--EXPECT--
+string(5) "10666"
diff --git a/win32/ioutil.c b/win32/ioutil.c
index 669876da3854..f7db410dd2f5 100644
--- a/win32/ioutil.c
+++ b/win32/ioutil.c
@@ -942,7 +942,20 @@ static int php_win32_ioutil_fstat_int(HANDLE h, php_win32_ioutil_stat_t *buf, co
 	}
 
 	if ((data->dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT) == 0) {
-		buf->st_mode |= is_dir ? (S_IFDIR|S_IEXEC|(S_IEXEC>>3)|(S_IEXEC>>6)) : S_IFREG;
+		if (is_dir) {
+			buf->st_mode |= (S_IFDIR|S_IEXEC|(S_IEXEC>>3)|(S_IEXEC>>6));
+		} else {
+			switch (GetFileType(h)) {
+				case FILE_TYPE_CHAR:
+					buf->st_mode |= S_IFCHR;
+					break;
+				case FILE_TYPE_PIPE:
+					buf->st_mode |= S_IFIFO;
+					break;
+				default:
+					buf->st_mode |= S_IFREG;
+			}
+		}
 		buf->st_mode |= (data->dwFileAttributes & FILE_ATTRIBUTE_READONLY) ? (S_IREAD|(S_IREAD>>3)|(S_IREAD>>6)) : (S_IREAD|(S_IREAD>>3)|(S_IREAD>>6)|S_IWRITE|(S_IWRITE>>3)|(S_IWRITE>>6));
 	}
 
