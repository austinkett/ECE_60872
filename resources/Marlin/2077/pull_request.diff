diff --git a/Marlin/Configuration_adv.h b/Marlin/Configuration_adv.h
index 8818b1b665e..6ba8c2adca7 100644
--- a/Marlin/Configuration_adv.h
+++ b/Marlin/Configuration_adv.h
@@ -36,6 +36,17 @@
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
 #endif
 
+  /**
+   * Temperatures are inert. If the value of any thermometer jumps, there is something wrong with it.
+   * Reasons can be: shorted wires, broken wires, leaking water-cooling, ...
+   * but also: electronic noise, ...
+   * MAX THERMO_JUMP_AMOUNT is the maximum allowed temperature difference between two measurements of the raw temperatures, (an abstract number).
+   * The fastest expected change is about (full range of the ADC) / minute / (temp measurements / second). 
+   * This is well below the noise. So we have to adjust for the noise.
+   * If you get 'unreasoned' "error: Thermometer Jumped" messages increase the next value.
+   */
+#define MAX_THERMO_JUMP_AMOUNT 10
+
 #ifdef PIDTEMP
   // this adds an experimental additional term to the heating power, proportional to the extrusion speed.
   // if Kc is chosen well, the additional required power due to increased melting should be compensated.
diff --git a/Marlin/configurator/config/Configuration_adv.h b/Marlin/configurator/config/Configuration_adv.h
index 91d8c9dc010..b336b111d48 100644
--- a/Marlin/configurator/config/Configuration_adv.h
+++ b/Marlin/configurator/config/Configuration_adv.h
@@ -36,6 +36,17 @@
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
 #endif
 
+  /**
+   * Temperatures are inert. If the value of any thermometer jumps, there is something wrong with it.
+   * Reasons can be: shorted wires, broken wires, leaking water-cooling, ...
+   * but also: electronic noise, ...
+   * MAX THERMO_JUMP_AMOUNT is the maximum allowed temperature difference between two measurements of the raw temperatures, (an abstract number).
+   * The fastest expected change is about (full range of the ADC) / minute / (temp measurements / second). 
+   * This is well below the noise. So we have to adjust for the noise.
+   * If you get 'unreasoned' "error: Thermometer Jumped" messages increase the next value.
+   */
+#define MAX_THERMO_JUMP_AMOUNT 10
+
 /**
  * Automatic Temperature:
  * The hotend target temperature is calculated by all the buffered lines of gcode.
diff --git a/Marlin/example_configurations/Felix/Configuration_adv.h b/Marlin/example_configurations/Felix/Configuration_adv.h
index 24b0b93ebf6..7ab8732805b 100644
--- a/Marlin/example_configurations/Felix/Configuration_adv.h
+++ b/Marlin/example_configurations/Felix/Configuration_adv.h
@@ -36,6 +36,17 @@
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
 #endif
 
+  /**
+   * Temperatures are inert. If the value of any thermometer jumps, there is something wrong with it.
+   * Reasons can be: shorted wires, broken wires, leaking water-cooling, ...
+   * but also: electronic noise, ...
+   * MAX THERMO_JUMP_AMOUNT is the maximum allowed temperature difference between two measurements of the raw temperatures, (an abstract number).
+   * The fastest expected change is about (full range of the ADC) / minute / (temp measurements / second). 
+   * This is well below the noise. So we have to adjust for the noise.
+   * If you get 'unreasoned' "error: Thermometer Jumped" messages increase the next value.
+   */
+#define MAX_THERMO_JUMP_AMOUNT 10
+
 /**
  * Automatic Temperature:
  * The hotend target temperature is calculated by all the buffered lines of gcode.
diff --git a/Marlin/example_configurations/Hephestos/Configuration_adv.h b/Marlin/example_configurations/Hephestos/Configuration_adv.h
index 485afd15b55..3053a42f179 100644
--- a/Marlin/example_configurations/Hephestos/Configuration_adv.h
+++ b/Marlin/example_configurations/Hephestos/Configuration_adv.h
@@ -36,6 +36,17 @@
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
 #endif
 
+  /**
+   * Temperatures are inert. If the value of any thermometer jumps, there is something wrong with it.
+   * Reasons can be: shorted wires, broken wires, leaking water-cooling, ...
+   * but also: electronic noise, ...
+   * MAX THERMO_JUMP_AMOUNT is the maximum allowed temperature difference between two measurements of the raw temperatures, (an abstract number).
+   * The fastest expected change is about (full range of the ADC) / minute / (temp measurements / second). 
+   * This is well below the noise. So we have to adjust for the noise.
+   * If you get 'unreasoned' "error: Thermometer Jumped" messages increase the next value.
+   */
+#define MAX_THERMO_JUMP_AMOUNT 10
+
 /**
  * Automatic Temperature:
  * The hotend target temperature is calculated by all the buffered lines of gcode.
diff --git a/Marlin/example_configurations/K8200/Configuration_adv.h b/Marlin/example_configurations/K8200/Configuration_adv.h
index 24b0b93ebf6..7ab8732805b 100644
--- a/Marlin/example_configurations/K8200/Configuration_adv.h
+++ b/Marlin/example_configurations/K8200/Configuration_adv.h
@@ -36,6 +36,17 @@
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
 #endif
 
+  /**
+   * Temperatures are inert. If the value of any thermometer jumps, there is something wrong with it.
+   * Reasons can be: shorted wires, broken wires, leaking water-cooling, ...
+   * but also: electronic noise, ...
+   * MAX THERMO_JUMP_AMOUNT is the maximum allowed temperature difference between two measurements of the raw temperatures, (an abstract number).
+   * The fastest expected change is about (full range of the ADC) / minute / (temp measurements / second). 
+   * This is well below the noise. So we have to adjust for the noise.
+   * If you get 'unreasoned' "error: Thermometer Jumped" messages increase the next value.
+   */
+#define MAX_THERMO_JUMP_AMOUNT 10
+
 /**
  * Automatic Temperature:
  * The hotend target temperature is calculated by all the buffered lines of gcode.
diff --git a/Marlin/example_configurations/SCARA/Configuration_adv.h b/Marlin/example_configurations/SCARA/Configuration_adv.h
index b2e05ef373f..739dff54875 100644
--- a/Marlin/example_configurations/SCARA/Configuration_adv.h
+++ b/Marlin/example_configurations/SCARA/Configuration_adv.h
@@ -36,6 +36,17 @@
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
 #endif
 
+  /**
+   * Temperatures are inert. If the value of any thermometer jumps, there is something wrong with it.
+   * Reasons can be: shorted wires, broken wires, leaking water-cooling, ...
+   * but also: electronic noise, ...
+   * MAX THERMO_JUMP_AMOUNT is the maximum allowed temperature difference between two measurements of the raw temperatures, (an abstract number).
+   * The fastest expected change is about (full range of the ADC) / minute / (temp measurements / second). 
+   * This is well below the noise. So we have to adjust for the noise.
+   * If you get 'unreasoned' "error: Thermometer Jumped" messages increase the next value.
+   */
+#define MAX_THERMO_JUMP_AMOUNT 10
+
 /**
  * Automatic Temperature:
  * The hotend target temperature is calculated by all the buffered lines of gcode.
diff --git a/Marlin/example_configurations/WITBOX/Configuration_adv.h b/Marlin/example_configurations/WITBOX/Configuration_adv.h
index 2d187ae45f4..aad54c6a38d 100644
--- a/Marlin/example_configurations/WITBOX/Configuration_adv.h
+++ b/Marlin/example_configurations/WITBOX/Configuration_adv.h
@@ -36,6 +36,17 @@
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
 #endif
 
+  /**
+   * Temperatures are inert. If the value of any thermometer jumps, there is something wrong with it.
+   * Reasons can be: shorted wires, broken wires, leaking water-cooling, ...
+   * but also: electronic noise, ...
+   * MAX THERMO_JUMP_AMOUNT is the maximum allowed temperature difference between two measurements of the raw temperatures, (an abstract number).
+   * The fastest expected change is about (full range of the ADC) / minute / (temp measurements / second). 
+   * This is well below the noise. So we have to adjust for the noise.
+   * If you get 'unreasoned' "error: Thermometer Jumped" messages increase the next value.
+   */
+#define MAX_THERMO_JUMP_AMOUNT 10
+
 /**
  * Automatic Temperature:
  * The hotend target temperature is calculated by all the buffered lines of gcode.
diff --git a/Marlin/example_configurations/delta/biv2.5/Configuration_adv.h b/Marlin/example_configurations/delta/biv2.5/Configuration_adv.h
index 9a9104e60c4..7ea1e79bd1d 100644
--- a/Marlin/example_configurations/delta/biv2.5/Configuration_adv.h
+++ b/Marlin/example_configurations/delta/biv2.5/Configuration_adv.h
@@ -36,6 +36,17 @@
   #define THERMAL_PROTECTION_BED_HYSTERESIS 4 // Degrees Celsius
 #endif
 
+  /**
+   * Temperatures are inert. If the value of any thermometer jumps, there is something wrong with it.
+   * Reasons can be: shorted wires, broken wires, leaking water-cooling, ...
+   * but also: electronic noise, ...
+   * MAX THERMO_JUMP_AMOUNT is the maximum allowed temperature difference between two measurements of the raw temperatures, (an abstract number).
+   * The fastest expected change is about (full range of the ADC) / minute / (temp measurements / second). 
+   * This is well below the noise. So we have to adjust for the noise.
+   * If you get 'unreasoned' "error: Thermometer Jumped" messages increase the next value.
+   */
+#define MAX_THERMO_JUMP_AMOUNT 10
+
 /**
  * Automatic Temperature:
  * The hotend target temperature is calculated by all the buffered lines of gcode.
diff --git a/Marlin/example_configurations/delta/generic/Configuration_adv.h b/Marlin/example_configurations/delta/generic/Configuration_adv.h
index 9a86fc83fff..0b423d2bb4d 100644
--- a/Marlin/example_configurations/delta/generic/Configuration_adv.h
+++ b/Marlin/example_configurations/delta/generic/Configuration_adv.h
@@ -36,6 +36,17 @@
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
 #endif
 
+  /**
+   * Temperatures are inert. If the value of any thermometer jumps, there is something wrong with it.
+   * Reasons can be: shorted wires, broken wires, leaking water-cooling, ...
+   * but also: electronic noise, ...
+   * MAX THERMO_JUMP_AMOUNT is the maximum allowed temperature difference between two measurements of the raw temperatures, (an abstract number).
+   * The fastest expected change is about (full range of the ADC) / minute / (temp measurements / second). 
+   * This is well below the noise. So we have to adjust for the noise.
+   * If you get 'unreasoned' "error: Thermometer Jumped" messages increase the next value.
+   */
+#define MAX_THERMO_JUMP_AMOUNT 10
+
 /**
  * Automatic Temperature:
  * The hotend target temperature is calculated by all the buffered lines of gcode.
diff --git a/Marlin/example_configurations/delta/kossel_mini/Configuration_adv.h b/Marlin/example_configurations/delta/kossel_mini/Configuration_adv.h
index 8cd7786172d..81b3b02a57e 100644
--- a/Marlin/example_configurations/delta/kossel_mini/Configuration_adv.h
+++ b/Marlin/example_configurations/delta/kossel_mini/Configuration_adv.h
@@ -36,6 +36,17 @@
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
 #endif
 
+  /**
+   * Temperatures are inert. If the value of any thermometer jumps, there is something wrong with it.
+   * Reasons can be: shorted wires, broken wires, leaking water-cooling, ...
+   * but also: electronic noise, ...
+   * MAX THERMO_JUMP_AMOUNT is the maximum allowed temperature difference between two measurements of the raw temperatures, (an abstract number).
+   * The fastest expected change is about (full range of the ADC) / minute / (temp measurements / second). 
+   * This is well below the noise. So we have to adjust for the noise.
+   * If you get 'unreasoned' "error: Thermometer Jumped" messages increase the next value.
+   */
+#define MAX_THERMO_JUMP_AMOUNT 10
+
 /**
  * Automatic Temperature:
  * The hotend target temperature is calculated by all the buffered lines of gcode.
diff --git a/Marlin/example_configurations/makibox/Configuration_adv.h b/Marlin/example_configurations/makibox/Configuration_adv.h
index d502852d44f..40b97ff062d 100644
--- a/Marlin/example_configurations/makibox/Configuration_adv.h
+++ b/Marlin/example_configurations/makibox/Configuration_adv.h
@@ -36,6 +36,17 @@
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
 #endif
 
+  /**
+   * Temperatures are inert. If the value of any thermometer jumps, there is something wrong with it.
+   * Reasons can be: shorted wires, broken wires, leaking water-cooling, ...
+   * but also: electronic noise, ...
+   * MAX THERMO_JUMP_AMOUNT is the maximum allowed temperature difference between two measurements of the raw temperatures, (an abstract number).
+   * The fastest expected change is about (full range of the ADC) / minute / (temp measurements / second). 
+   * This is well below the noise. So we have to adjust for the noise.
+   * If you get 'unreasoned' "error: Thermometer Jumped" messages increase the next value.
+   */
+#define MAX_THERMO_JUMP_AMOUNT 10
+
 /**
  * Automatic Temperature:
  * The hotend target temperature is calculated by all the buffered lines of gcode.
diff --git a/Marlin/example_configurations/tvrrug/Round2/Configuration_adv.h b/Marlin/example_configurations/tvrrug/Round2/Configuration_adv.h
index 85b75e1a11c..f2348c24913 100644
--- a/Marlin/example_configurations/tvrrug/Round2/Configuration_adv.h
+++ b/Marlin/example_configurations/tvrrug/Round2/Configuration_adv.h
@@ -36,6 +36,17 @@
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
 #endif
 
+  /**
+   * Temperatures are inert. If the value of any thermometer jumps, there is something wrong with it.
+   * Reasons can be: shorted wires, broken wires, leaking water-cooling, ...
+   * but also: electronic noise, ...
+   * MAX THERMO_JUMP_AMOUNT is the maximum allowed temperature difference between two measurements of the raw temperatures, (an abstract number).
+   * The fastest expected change is about (full range of the ADC) / minute / (temp measurements / second). 
+   * This is well below the noise. So we have to adjust for the noise.
+   * If you get 'unreasoned' "error: Thermometer Jumped" messages increase the next value.
+   */
+#define MAX_THERMO_JUMP_AMOUNT 10
+
 /**
  * Automatic Temperature:
  * The hotend target temperature is calculated by all the buffered lines of gcode.
diff --git a/Marlin/language.h b/Marlin/language.h
index 6e078d1dbc4..e1c96f9aade 100644
--- a/Marlin/language.h
+++ b/Marlin/language.h
@@ -232,7 +232,7 @@
 #define MSG_T_THERMAL_RUNAWAY               "Thermal Runaway"
 #define MSG_T_MAXTEMP                       "MAXTEMP triggered"
 #define MSG_T_MINTEMP                       "MINTEMP triggered"
-
+#define MSG_T_JUMP                          "Thermal jump"
 
 // LCD Menu Messages
 
diff --git a/Marlin/language_en.h b/Marlin/language_en.h
index 94e0614748d..65fea77c0d0 100644
--- a/Marlin/language_en.h
+++ b/Marlin/language_en.h
@@ -408,6 +408,9 @@
 #ifndef MSG_THERMAL_RUNAWAY
 #define MSG_THERMAL_RUNAWAY                 "THERMAL RUNAWAY"
 #endif
+#ifndef MSG_ERR_THERMAL_JUMP
+#define MSG_ERR_THERMAL_JUMP                "Err: THER. JUMP"
+#endif
 #ifndef MSG_ERR_MAXTEMP
 #define MSG_ERR_MAXTEMP                     "Err: MAXTEMP"
 #endif
diff --git a/Marlin/temperature.cpp b/Marlin/temperature.cpp
index 9fdcb785cdb..6108f24f518 100644
--- a/Marlin/temperature.cpp
+++ b/Marlin/temperature.cpp
@@ -779,6 +779,27 @@ static float analog2tempBed(int raw) {
   #endif
 }
 
+#if MAX_THERMO_JUMP_AMOUNT > 0
+  static void check_max_thermo_jump(int8_t e) {
+    static bool init_jump[5] = {true, true, true, true, true};
+    static int last_temperature_raw[5] = { 0 };
+#ifdef HEATER_0_USES_MAX6675
+    if ((abs(((e < 0) ? current_temperature_bed_raw : current_temperature_raw[e]) - last_temperature_raw[e+1]) < (MAX_THERMO_JUMP_AMOUNT * ((e) ? OVERSAMPLENR : 1))) || init_jump[e+1]) {
+#else
+    if ((abs(((e < 0) ? current_temperature_bed_raw : current_temperature_raw[e]) - last_temperature_raw[e+1]) < MAX_THERMO_JUMP_AMOUNT * OVERSAMPLENR) || init_jump[e+1]) {
+#endif
+//      SERIAL_PROTOCOLPGM("jumptest: "); SERIAL_PROTOCOL(last_temperature_raw[e+1]); SERIAL_PROTOCOLPGM(":"); SERIAL_PROTOCOLLN(((e < 0) ? current_temperature_bed_raw : current_temperature_raw[e]));
+      last_temperature_raw[e+1] = ((e < 0) ? current_temperature_bed_raw : current_temperature_raw[e]);
+      init_jump[e+1] = false;
+      return;
+    }
+    else {
+//      SERIAL_PROTOCOLPGM("jumptest: "); SERIAL_PROTOCOL(last_temperature_raw[e+1]); SERIAL_PROTOCOLPGM(":"); SERIAL_PROTOCOLLN(((e < 0) ? current_temperature_bed_raw : current_temperature_raw[e]));
+      _temp_error(e, PSTR(MSG_T_JUMP), PSTR(MSG_ERR_THERMAL_JUMP));
+    }
+  }
+#endif
+
 /* Called to get the raw values into the the actual temperatures. The raw values are created in interrupt context,
     and this function is called from normal context as it is too slow to run in interrupts and will block the stepper routine otherwise */
 static void updateTemperaturesFromRawValues() {
@@ -789,6 +810,11 @@ static void updateTemperaturesFromRawValues() {
     current_temperature[e] = analog2temp(current_temperature_raw[e], e);
   }
   current_temperature_bed = analog2tempBed(current_temperature_bed_raw);
+  #if MAX_THERMO_JUMP_AMOUNT > 0
+    for (int8_t e = -1; e < EXTRUDERS; e++) {
+      check_max_thermo_jump(e);
+    }
+  #endif
   #ifdef TEMP_SENSOR_1_AS_REDUNDANT
     redundant_temperature = analog2temp(redundant_temperature_raw, 1);
   #endif
