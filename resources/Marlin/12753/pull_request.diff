diff --git a/Marlin/src/HAL/HAL_STM32F1/watchdog_STM32F1.cpp b/Marlin/src/HAL/HAL_STM32F1/watchdog_STM32F1.cpp
index 7ecf3fd3f50..7a6ff7d020c 100644
--- a/Marlin/src/HAL/HAL_STM32F1/watchdog_STM32F1.cpp
+++ b/Marlin/src/HAL/HAL_STM32F1/watchdog_STM32F1.cpp
@@ -33,6 +33,13 @@
 #include <libmaple/iwdg.h>
 #include "watchdog_STM32F1.h"
 
+void watchdog_reset() {
+  #if PIN_EXISTS(LED)
+    TOGGLE(LED_PIN);  // heartbeat indicator
+  #endif
+  iwdg_feed();
+}
+
 void watchdogSetup(void) {
   // do whatever. don't remove this function.
 }
diff --git a/Marlin/src/HAL/HAL_STM32F1/watchdog_STM32F1.h b/Marlin/src/HAL/HAL_STM32F1/watchdog_STM32F1.h
index d34efdc0a2b..3d37cefc96a 100644
--- a/Marlin/src/HAL/HAL_STM32F1/watchdog_STM32F1.h
+++ b/Marlin/src/HAL/HAL_STM32F1/watchdog_STM32F1.h
@@ -27,8 +27,6 @@
 
 #include <libmaple/iwdg.h>
 
-#include "../../inc/MarlinConfig.h"
-
 /**
  *  The watchdog clock is 40Khz. We need a 4 seconds interval, so use a /256 preescaler and
  *  625 reload value (counts down to 0)
@@ -43,9 +41,4 @@ void watchdog_init();
 
 // Reset watchdog. MUST be called at least every 4 seconds after the
 // first watchdog_init or STM32F1 will reset.
-inline void watchdog_reset() {
-  #if PIN_EXISTS(LED)
-    TOGGLE(LED_PIN);  // heart beat indicator
-  #endif
-  iwdg_feed();
-}
+void watchdog_reset();
