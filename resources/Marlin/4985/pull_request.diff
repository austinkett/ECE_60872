diff --git a/Marlin/dac_mcp4728.cpp b/Marlin/dac_mcp4728.cpp
index 76ca7defdae..473b1414f8c 100644
--- a/Marlin/dac_mcp4728.cpp
+++ b/Marlin/dac_mcp4728.cpp
@@ -31,6 +31,7 @@
  */
 
 #include "dac_mcp4728.h"
+#include "Marlin.h"
 
 #if ENABLED(DAC_STEPPER_CURRENT)
 
@@ -68,7 +69,7 @@ uint8_t mcp4728_analogWrite(uint8_t channel, uint16_t value) {
 uint8_t mcp4728_eepromWrite() {
   Wire.beginTransmission(DAC_DEV_ADDRESS);
   Wire.write(SEQWRITE);
-  for (uint8_t channel = 0; channel < COUNT(channel); channel++) {
+  for (uint8_t channel = 0; channel < 4; channel++) {
     Wire.write(DAC_STEPPER_VREF << 7 | DAC_STEPPER_GAIN << 4 | highByte(mcp4728_values[channel]));
     Wire.write(lowByte(mcp4728_values[channel]));
   }
@@ -125,7 +126,7 @@ void mcp4728_setDrvPct(int16_t pct[XYZE]) {
  */
 uint8_t mcp4728_fastWrite() {
   Wire.beginTransmission(DAC_DEV_ADDRESS);
-  for (uint8_t channel = 0; channel < COUNT(channel); channel++) {
+  for (uint8_t channel = 0; channel < 4; channel++) {
     Wire.write(highByte(mcp4728_values[channel]));
     Wire.write(lowByte(mcp4728_values[channel]));
   }
diff --git a/Marlin/stepper_dac.cpp b/Marlin/stepper_dac.cpp
index 5443abcd848..7f2dc14609d 100644
--- a/Marlin/stepper_dac.cpp
+++ b/Marlin/stepper_dac.cpp
@@ -87,7 +87,7 @@
   }
 
   static float dac_perc(int8_t n) { return 100.0 * mcp4728_getValue(dac_order[n]) * (1.0 / (DAC_STEPPER_MAX)); }
-  static float dac_amps(int8_t n) { return mcp4728_getDrvPct(dac_order[n]) * (DAC_STEPPER_MAX) * (0.125 * (DAC_STEPPER_SENSE)); }
+  static float dac_amps(int8_t n) { return mcp4728_getDrvPct(dac_order[n]) * (DAC_STEPPER_MAX) * 0.125 * (1.0 / DAC_STEPPER_SENSE); }
   
   int16_t dac_current_get_percent(AxisEnum axis) { return mcp4728_getDrvPct(dac_order[axis]); }
   void dac_current_set_percents(int16_t pct[XYZE]) {
