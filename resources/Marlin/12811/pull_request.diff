diff --git a/Marlin/src/feature/runout.h b/Marlin/src/feature/runout.h
index 463f99d40b3..55991074cbd 100644
--- a/Marlin/src/feature/runout.h
+++ b/Marlin/src/feature/runout.h
@@ -84,13 +84,13 @@ class TFilamentMonitor : public FilamentMonitorBase {
     static inline void run() {
       if (enabled && !filament_ran_out && (IS_SD_PRINTING() || print_job_timer.isRunning())) {
         #if FILAMENT_RUNOUT_DISTANCE_MM > 0
-          cli(); // Prevent RunoutResponseDelayed::block_completed from accumulating here
+          DISABLE_ISRS(); // Prevent RunoutResponseDelayed::block_completed from accumulating here
         #endif
         response.run();
         sensor.run();
         const bool ran_out = response.has_run_out();
         #if FILAMENT_RUNOUT_DISTANCE_MM > 0
-          sei();
+          ENABLE_ISRS();
         #endif
         if (ran_out) {
           filament_ran_out = true;
diff --git a/Marlin/src/module/stepper.cpp b/Marlin/src/module/stepper.cpp
index ef2098feeea..b4250855986 100644
--- a/Marlin/src/module/stepper.cpp
+++ b/Marlin/src/module/stepper.cpp
@@ -2306,7 +2306,7 @@ void Stepper::report_positions() {
   // MUST ONLY BE CALLED BY AN ISR,
   // No other ISR should ever interrupt this!
   void Stepper::babystep(const AxisEnum axis, const bool direction) {
-    cli();
+    DISABLE_ISRS();
 
     switch (axis) {
 
@@ -2394,7 +2394,7 @@ void Stepper::report_positions() {
 
       default: break;
     }
-    sei();
+    ENABLE_ISRS();
   }
 
 #endif // BABYSTEPPING
