diff --git a/Marlin/planner.cpp b/Marlin/planner.cpp
index 0beae326748..36c3a262e60 100644
--- a/Marlin/planner.cpp
+++ b/Marlin/planner.cpp
@@ -421,13 +421,13 @@ void Planner::check_axes_activity() {
 
     #if ENABLED(FAN_SOFT_PWM)
       #if HAS_FAN0
-        fanSpeedSoftPwm[0] = CALC_FAN_SPEED(0);
+        thermalManager.fanSpeedSoftPwm[0] = CALC_FAN_SPEED(0);
       #endif
       #if HAS_FAN1
-        fanSpeedSoftPwm[1] = CALC_FAN_SPEED(1);
+        thermalManager.fanSpeedSoftPwm[1] = CALC_FAN_SPEED(1);
       #endif
       #if HAS_FAN2
-        fanSpeedSoftPwm[2] = CALC_FAN_SPEED(2);
+        thermalManager.fanSpeedSoftPwm[2] = CALC_FAN_SPEED(2);
       #endif
     #else
       #if HAS_FAN0
diff --git a/Marlin/temperature.h b/Marlin/temperature.h
index 2e404ba8053..80681c039ba 100644
--- a/Marlin/temperature.h
+++ b/Marlin/temperature.h
@@ -313,7 +313,6 @@ class Temperature {
       int read_max6675();
     #endif
 
-    void setExtruderAutoFanState(int pin, bool state);
     void checkExtruderAutoFans();
 
     float get_pid_output(int e);
diff --git a/Marlin/ultralcd.cpp b/Marlin/ultralcd.cpp
index 7b247fa1779..004aaef82e6 100644
--- a/Marlin/ultralcd.cpp
+++ b/Marlin/ultralcd.cpp
@@ -562,25 +562,25 @@ void lcd_set_home_offsets() {
         #if ENABLED(BABYSTEP_XY)
           switch(axis) {
             case X_AXIS: // X on CoreXY and CoreXZ
-              babystepsTodo[A_AXIS] += distance * 2;
-              babystepsTodo[CORE_AXIS_2] += distance * 2;
+              thermalManager.babystepsTodo[A_AXIS] += distance * 2;
+              thermalManager.babystepsTodo[CORE_AXIS_2] += distance * 2;
               break;
             case CORE_AXIS_2: // Y on CoreXY, Z on CoreXZ
-              babystepsTodo[A_AXIS] += distance * 2;
-              babystepsTodo[CORE_AXIS_2] -= distance * 2;
+              thermalManager.babystepsTodo[A_AXIS] += distance * 2;
+              thermalManager.babystepsTodo[CORE_AXIS_2] -= distance * 2;
               break;
             case CORE_AXIS_3: // Z on CoreXY, Y on CoreXZ
-              babystepsTodo[CORE_AXIS_3] += distance;
+              thermalManager.babystepsTodo[CORE_AXIS_3] += distance;
               break;
           }
         #elif ENABLED(COREXZ)
-          babystepsTodo[A_AXIS] += distance * 2;
-          babystepsTodo[C_AXIS] -= distance * 2;
+          thermalManager.babystepsTodo[A_AXIS] += distance * 2;
+          thermalManager.babystepsTodo[C_AXIS] -= distance * 2;
         #else
-          babystepsTodo[Z_AXIS] += distance;
+          thermalManager.babystepsTodo[Z_AXIS] += distance;
         #endif
       #else
-        babystepsTodo[axis] += distance;
+        thermalManager.babystepsTodo[axis] += distance;
       #endif
 
       babysteps_done += distance;
