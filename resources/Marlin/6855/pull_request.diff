diff --git a/Marlin/ultralcd_impl_DOGM.h b/Marlin/ultralcd_impl_DOGM.h
index b4ee92c5f1b..cdc6c6b2273 100644
--- a/Marlin/ultralcd_impl_DOGM.h
+++ b/Marlin/ultralcd_impl_DOGM.h
@@ -234,13 +234,19 @@ char lcd_print_and_count(const char c) {
   else return charset_mapper(c);
 }
 
-void lcd_print(const char* const str) {
-  for (uint8_t i = 0; char c = str[i]; ++i) lcd_print(c);
+void lcd_print(const char* const str, const int maxLength = LCD_WIDTH) {
+  char c;
+  for (uint8_t i = 0, len = 0; len < maxLength && (c = str[i]); ++i) {
+    if (charset_mapper(c)) ++len;
+  }
 }
 
 /* Arduino < 1.0.0 is missing a function to print PROGMEM strings, so we need to implement our own */
-void lcd_printPGM(const char* str) {
-  for (; char c = pgm_read_byte(str); ++str) lcd_print(c);
+void lcd_printPGM(const char* str, const int maxLength = LCD_WIDTH) {
+  char c;
+  for (uint8_t len = 0; len < maxLength && (c = pgm_read_byte(str)); ++str) {
+    if (charset_mapper(c)) ++len;
+  }
 }
 
 // Initialize or re-initialize the LCD
@@ -634,10 +640,7 @@ static void lcd_implementation_status_screen() {
 
     #if ENABLED(FILAMENT_LCD_DISPLAY) && ENABLED(SDSUPPORT)
       if (PENDING(millis(), previous_lcd_status_ms + 5000UL)) {  //Display both Status message line and Filament display on the last line
-        const char *str = lcd_status_message;
-        uint8_t i = LCD_WIDTH;
-        char c;
-        while (i-- && (c = *str++)) lcd_print(c);
+        lcd_print(lcd_status_message);
       }
       else {
         lcd_printPGM(PSTR(LCD_STR_FILAM_DIA));
@@ -649,10 +652,7 @@ static void lcd_implementation_status_screen() {
         u8g.print('%');
       }
     #else
-      const char *str = lcd_status_message;
-      uint8_t i = LCD_WIDTH;
-      char c;
-      while (i-- && (c = *str++)) lcd_print(c);
+      lcd_print(lcd_status_message);
     #endif
   }
 }
diff --git a/Marlin/ultralcd_impl_HD44780.h b/Marlin/ultralcd_impl_HD44780.h
index cbad9698e26..d11e0186aa7 100644
--- a/Marlin/ultralcd_impl_HD44780.h
+++ b/Marlin/ultralcd_impl_HD44780.h
@@ -381,12 +381,18 @@ static void lcd_implementation_init(
 void lcd_implementation_clear() { lcd.clear(); }
 
 /* Arduino < 1.0.0 is missing a function to print PROGMEM strings, so we need to implement our own */
-void lcd_printPGM(const char *str) {
-  for (; char c = pgm_read_byte(str); ++str) charset_mapper(c);
+void lcd_printPGM(const char* str, const int maxLength = LCD_WIDTH) {
+  char c;
+  for (uint8_t len = 0; len < maxLength && (c = pgm_read_byte(str)); ++str) {
+    if (charset_mapper(c)) ++len;
+  }
 }
 
-void lcd_print(const char* const str) {
-  for (uint8_t i = 0; const char c = str[i]; ++i) charset_mapper(c);
+void lcd_print(const char* const str, const int maxLength = LCD_WIDTH) {
+  char c;
+  for (uint8_t i = 0, len = 0; len < maxLength && (c = str[i]); ++i) {
+    if (charset_mapper(c)) ++len;
+  }
 }
 
 void lcd_print(const char c) { charset_mapper(c); }
@@ -795,10 +801,7 @@ static void lcd_implementation_status_screen() {
 
   #endif // FILAMENT_LCD_DISPLAY && SDSUPPORT
 
-  const char *str = lcd_status_message;
-  uint8_t i = LCD_WIDTH;
-  char c;
-  while (i-- && (c = *str++)) lcd_print(c);
+  lcd_print(lcd_status_message);
 }
 
 #if ENABLED(ULTIPANEL)
