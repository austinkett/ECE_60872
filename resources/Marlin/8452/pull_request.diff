diff --git a/.gitignore b/.gitignore
index 8c7053826c2..9b811c6a9b4 100755
--- a/.gitignore
+++ b/.gitignore
@@ -118,6 +118,8 @@ tags
 
 # PlatformIO files/dirs
 .pio*
+.pioenvs
+.piolibdeps
 lib/readme.txt
 
 #Visual Studio
@@ -131,6 +133,7 @@ Marlin/.vs/
 
 #VScode
 .vscode
+.vscode/c_cpp_properties.json
 
 #cmake
 CMakeLists.txt
diff --git a/Marlin/spi.h b/Marlin/MarlinSPI.h
similarity index 95%
rename from Marlin/spi.h
rename to Marlin/MarlinSPI.h
index c4b86005add..93f9fb2b089 100644
--- a/Marlin/spi.h
+++ b/Marlin/MarlinSPI.h
@@ -20,8 +20,8 @@
  *
  */
 
-#ifndef __SPI_H__
-#define __SPI_H__
+#ifndef __MARLIN_SPI_H__
+#define __MARLIN_SPI_H__
 
 #include <stdint.h>
 #include "softspi.h"
@@ -54,4 +54,4 @@ class SPI<MISO_PIN, MOSI_PIN, SCK_PIN> {
 
 };
 
-#endif // __SPI_H__
+#endif // __MARLIN_SPI_H__
diff --git a/Marlin/Marlin_main.cpp b/Marlin/Marlin_main.cpp
index 2d9977ca521..84c313fa74a 100644
--- a/Marlin/Marlin_main.cpp
+++ b/Marlin/Marlin_main.cpp
@@ -10325,25 +10325,30 @@ inline void gcode_M502() {
     SERIAL_ECHOLNPGM(" prewarn flag cleared");
   }
 
-  static void tmc2130_get_pwmthrs(TMC2130Stepper &st, const char name, const uint16_t spmm) {
-    SERIAL_CHAR(name);
-    SERIAL_ECHOPGM(" stealthChop max speed set to ");
-    SERIAL_ECHOLN(12650000UL * st.microsteps() / (256 * st.stealth_max_speed() * spmm));
-  }
-  static void tmc2130_set_pwmthrs(TMC2130Stepper &st, const char name, const int32_t thrs, const uint32_t spmm) {
-    st.stealth_max_speed(12650000UL * st.microsteps() / (256 * thrs * spmm));
-    tmc2130_get_pwmthrs(st, name, spmm);
-  }
+  #if ENABLED(HYBRID_THRESHOLD)
+    static void tmc2130_get_pwmthrs(TMC2130Stepper &st, const char name, const uint16_t spmm) {
+      SERIAL_CHAR(name);
+      SERIAL_ECHOPGM(" stealthChop max speed set to ");
+      SERIAL_ECHOLN(12650000UL * st.microsteps() / (256 * st.stealth_max_speed() * spmm));
+    }
 
-  static void tmc2130_get_sgt(TMC2130Stepper &st, const char name) {
-    SERIAL_CHAR(name);
-    SERIAL_ECHOPGM(" driver homing sensitivity set to ");
-    SERIAL_ECHOLN(st.sgt());
-  }
-  static void tmc2130_set_sgt(TMC2130Stepper &st, const char name, const int8_t sgt_val) {
-    st.sgt(sgt_val);
-    tmc2130_get_sgt(st, name);
-  }
+    static void tmc2130_set_pwmthrs(TMC2130Stepper &st, const char name, const int32_t thrs, const uint32_t spmm) {
+      st.stealth_max_speed(12650000UL * st.microsteps() / (256 * thrs * spmm));
+      tmc2130_get_pwmthrs(st, name, spmm);
+    }
+  #endif
+
+  #if ENABLED(SENSORLESS_HOMING)
+    static void tmc2130_get_sgt(TMC2130Stepper &st, const char name) {
+      SERIAL_CHAR(name);
+      SERIAL_ECHOPGM(" driver homing sensitivity set to ");
+      SERIAL_ECHOLN(st.sgt());
+    }
+    static void tmc2130_set_sgt(TMC2130Stepper &st, const char name, const int8_t sgt_val) {
+      st.sgt(sgt_val);
+      tmc2130_get_sgt(st, name);
+    }
+  #endif
 
   /**
    * M906: Set motor current in milliamps using axis codes X, Y, Z, E
diff --git a/Marlin/temperature.cpp b/Marlin/temperature.cpp
index c73c9187a28..1ab024d8682 100644
--- a/Marlin/temperature.cpp
+++ b/Marlin/temperature.cpp
@@ -32,7 +32,7 @@
 #include "language.h"
 
 #if ENABLED(HEATER_0_USES_MAX6675)
-  #include "spi.h"
+  #include "MarlinSPI.h"
 #endif
 
 #if ENABLED(BABYSTEPPING)
diff --git a/platformio.ini b/platformio.ini
index 3d7cff483e9..b9f3b364650 100644
--- a/platformio.ini
+++ b/platformio.ini
@@ -19,7 +19,12 @@ libdeps_dir = .piolibdeps
 env_default = megaatmega2560
 
 [common]
-lib_deps = U8glib@1.19.1
+lib_deps =
+  U8glib@1.19.1
+  TMC2130Stepper
+  Adafruit NeoPixel
+  https://github.com/lincomatic/LiquidTWI2.git
+  https://github.com/trinamic/TMC26XStepper.git
 
 [env:megaatmega2560]
 platform = atmelavr
