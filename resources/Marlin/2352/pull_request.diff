diff --git a/Marlin/Configuration_adv.h b/Marlin/Configuration_adv.h
index f00f1ebb458..f9cd3e0ca03 100644
--- a/Marlin/Configuration_adv.h
+++ b/Marlin/Configuration_adv.h
@@ -34,6 +34,10 @@
 #ifdef THERMAL_PROTECTION_BED
   #define THERMAL_PROTECTION_BED_PERIOD 20    // Seconds
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
+
+  #define WATCH_TEMP_BED_PERIOD 30            // Seconds
+  #define WATCH_TEMP_BED_INCREASE 1           // Degrees Celsius
+  #define WATCH_TEMP_BED_MAX_TEMP 70          // Maximum temperature the bead heater is tested (may heat to slow above this temperature)
 #endif
 
 #ifdef PIDTEMP
diff --git a/Marlin/cardreader.cpp b/Marlin/cardreader.cpp
index b8a940f4ba4..12d2a5da3ba 100644
--- a/Marlin/cardreader.cpp
+++ b/Marlin/cardreader.cpp
@@ -56,22 +56,21 @@ void CardReader::lsDive(const char *prepend, SdFile parent, const char * const m
     // If the entry is a directory and the action is LS_SerialPrint
     if (DIR_IS_SUBDIR(&p) && lsAction != LS_Count && lsAction != LS_GetFilename) {
 
-      // Allocate enough stack space for the full path to a folder, trailing slash, and nul
-      int len = strlen(prepend) + FILENAME_LENGTH + 1 + 1;
-      char path[len];
-
       // Get the short name for the item, which we know is a folder
       char lfilename[FILENAME_LENGTH];
       createFilename(lfilename, p);
 
+      // Allocate enough stack space for the full path to a folder, trailing slash, and nul
+      boolean prepend_is_empty = (prepend[0] == '\0');
+      int len = (prepend_is_empty ? 1 : strlen(prepend)) + strlen(lfilename) + 1 + 1;
+      char path[len];
+
       // Append the FOLDERNAME12/ to the passed string.
       // It contains the full path to the "parent" argument.
       // We now have the full path to the item in this folder.
-      path[0] = '\0';
-      if (prepend[0] == '\0') strcat(path, "/"); // a root slash if prepend is empty
-      strcat(path, prepend);
-      strcat(path, lfilename);
-      strcat(path, "/");
+      strcpy(path, prepend_is_empty ? "/" : prepend); // root slash if prepend is empty
+      strcat(path, lfilename); // FILENAME_LENGTH-1 characters maximum
+      strcat(path, "/");       // 1 character
 
       // Serial.print(path);
 
diff --git a/Marlin/configurator/config/Configuration_adv.h b/Marlin/configurator/config/Configuration_adv.h
index a04dba84785..b87bb42bcd8 100644
--- a/Marlin/configurator/config/Configuration_adv.h
+++ b/Marlin/configurator/config/Configuration_adv.h
@@ -34,6 +34,10 @@
 #ifdef THERMAL_PROTECTION_BED
   #define THERMAL_PROTECTION_BED_PERIOD 20    // Seconds
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
+
+  #define WATCH_TEMP_BED_PERIOD 30            // Seconds
+  #define WATCH_TEMP_BED_INCREASE 1           // Degrees Celsius
+  #define WATCH_TEMP_BED_MAX_TEMP 70          // Maximum temperature the bead heater is tested (may heat to slow above this temperature)
 #endif
 
 #ifdef PIDTEMP
diff --git a/Marlin/example_configurations/Felix/Configuration_adv.h b/Marlin/example_configurations/Felix/Configuration_adv.h
index ec101fb2782..fd199303259 100644
--- a/Marlin/example_configurations/Felix/Configuration_adv.h
+++ b/Marlin/example_configurations/Felix/Configuration_adv.h
@@ -34,6 +34,10 @@
 #ifdef THERMAL_PROTECTION_BED
   #define THERMAL_PROTECTION_BED_PERIOD 20    // Seconds
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
+
+  #define WATCH_TEMP_BED_PERIOD 30            // Seconds
+  #define WATCH_TEMP_BED_INCREASE 1           // Degrees Celsius
+  #define WATCH_TEMP_BED_MAX_TEMP 70          // Maximum temperature the bead heater is tested (may heat to slow above this temperature)
 #endif
 
 /**
diff --git a/Marlin/example_configurations/Hephestos/Configuration_adv.h b/Marlin/example_configurations/Hephestos/Configuration_adv.h
index e1bf689892b..ad4fe4fd3cf 100644
--- a/Marlin/example_configurations/Hephestos/Configuration_adv.h
+++ b/Marlin/example_configurations/Hephestos/Configuration_adv.h
@@ -34,6 +34,10 @@
 #ifdef THERMAL_PROTECTION_BED
   #define THERMAL_PROTECTION_BED_PERIOD 20    // Seconds
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
+
+  #define WATCH_TEMP_BED_PERIOD 30            // Seconds
+  #define WATCH_TEMP_BED_INCREASE 1           // Degrees Celsius
+  #define WATCH_TEMP_BED_MAX_TEMP 70          // Maximum temperature the bead heater is tested (may heat to slow above this temperature)
 #endif
 
 /**
diff --git a/Marlin/example_configurations/K8200/Configuration_adv.h b/Marlin/example_configurations/K8200/Configuration_adv.h
index 3be446fad48..dd164d3e926 100644
--- a/Marlin/example_configurations/K8200/Configuration_adv.h
+++ b/Marlin/example_configurations/K8200/Configuration_adv.h
@@ -34,6 +34,10 @@
 #ifdef THERMAL_PROTECTION_BED
   #define THERMAL_PROTECTION_BED_PERIOD 20    // Seconds
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
+
+  #define WATCH_TEMP_BED_PERIOD 30            // Seconds
+  #define WATCH_TEMP_BED_INCREASE 1           // Degrees Celsius
+  #define WATCH_TEMP_BED_MAX_TEMP 70          // Maximum temperature the bead heater is tested (may heat to slow above this temperature)
 #endif
 
 /**
diff --git a/Marlin/example_configurations/SCARA/Configuration_adv.h b/Marlin/example_configurations/SCARA/Configuration_adv.h
index ced71139017..02dc67d23de 100644
--- a/Marlin/example_configurations/SCARA/Configuration_adv.h
+++ b/Marlin/example_configurations/SCARA/Configuration_adv.h
@@ -34,6 +34,10 @@
 #ifdef THERMAL_PROTECTION_BED
   #define THERMAL_PROTECTION_BED_PERIOD 20    // Seconds
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
+
+  #define WATCH_TEMP_BED_PERIOD 30            // Seconds
+  #define WATCH_TEMP_BED_INCREASE 1           // Degrees Celsius
+  #define WATCH_TEMP_BED_MAX_TEMP 70          // Maximum temperature the bead heater is tested (may heat to slow above this temperature)
 #endif
 
 /**
diff --git a/Marlin/example_configurations/WITBOX/Configuration_adv.h b/Marlin/example_configurations/WITBOX/Configuration_adv.h
index dc77b22e700..da0dae84537 100644
--- a/Marlin/example_configurations/WITBOX/Configuration_adv.h
+++ b/Marlin/example_configurations/WITBOX/Configuration_adv.h
@@ -34,6 +34,10 @@
 #ifdef THERMAL_PROTECTION_BED
   #define THERMAL_PROTECTION_BED_PERIOD 20    // Seconds
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
+
+  #define WATCH_TEMP_BED_PERIOD 30            // Seconds
+  #define WATCH_TEMP_BED_INCREASE 1           // Degrees Celsius
+  #define WATCH_TEMP_BED_MAX_TEMP 70          // Maximum temperature the bead heater is tested (may heat to slow above this temperature)
 #endif
 
 /**
diff --git a/Marlin/example_configurations/delta/biv2.5/Configuration_adv.h b/Marlin/example_configurations/delta/biv2.5/Configuration_adv.h
index 9f2908e7e41..4a5f2538f47 100644
--- a/Marlin/example_configurations/delta/biv2.5/Configuration_adv.h
+++ b/Marlin/example_configurations/delta/biv2.5/Configuration_adv.h
@@ -34,6 +34,10 @@
 #ifdef THERMAL_PROTECTION_BED
   #define THERMAL_PROTECTION_BED_PERIOD 120   // Seconds
   #define THERMAL_PROTECTION_BED_HYSTERESIS 4 // Degrees Celsius
+
+  #define WATCH_TEMP_BED_PERIOD 30            // Seconds
+  #define WATCH_TEMP_BED_INCREASE 1           // Degrees Celsius
+  #define WATCH_TEMP_BED_MAX_TEMP 70          // Maximum temperature the bead heater is tested (may heat to slow above this temperature)
 #endif
 
 /**
diff --git a/Marlin/example_configurations/delta/generic/Configuration_adv.h b/Marlin/example_configurations/delta/generic/Configuration_adv.h
index 5a89463dd0c..f7799dd183a 100644
--- a/Marlin/example_configurations/delta/generic/Configuration_adv.h
+++ b/Marlin/example_configurations/delta/generic/Configuration_adv.h
@@ -34,6 +34,10 @@
 #ifdef THERMAL_PROTECTION_BED
   #define THERMAL_PROTECTION_BED_PERIOD 20    // Seconds
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
+
+  #define WATCH_TEMP_BED_PERIOD 30            // Seconds
+  #define WATCH_TEMP_BED_INCREASE 1           // Degrees Celsius
+  #define WATCH_TEMP_BED_MAX_TEMP 70          // Maximum temperature the bead heater is tested (may heat to slow above this temperature)
 #endif
 
 /**
diff --git a/Marlin/example_configurations/delta/kossel_mini/Configuration_adv.h b/Marlin/example_configurations/delta/kossel_mini/Configuration_adv.h
index b43f71f3694..8b2bd64b51b 100644
--- a/Marlin/example_configurations/delta/kossel_mini/Configuration_adv.h
+++ b/Marlin/example_configurations/delta/kossel_mini/Configuration_adv.h
@@ -34,6 +34,10 @@
 #ifdef THERMAL_PROTECTION_BED
   #define THERMAL_PROTECTION_BED_PERIOD 20    // Seconds
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
+
+  #define WATCH_TEMP_BED_PERIOD 30            // Seconds
+  #define WATCH_TEMP_BED_INCREASE 1           // Degrees Celsius
+  #define WATCH_TEMP_BED_MAX_TEMP 70          // Maximum temperature the bead heater is tested (may heat to slow above this temperature)
 #endif
 
 /**
diff --git a/Marlin/example_configurations/makibox/Configuration_adv.h b/Marlin/example_configurations/makibox/Configuration_adv.h
index dcf45ea053a..d55fd7bb324 100644
--- a/Marlin/example_configurations/makibox/Configuration_adv.h
+++ b/Marlin/example_configurations/makibox/Configuration_adv.h
@@ -34,6 +34,10 @@
 #ifdef THERMAL_PROTECTION_BED
   #define THERMAL_PROTECTION_BED_PERIOD 20    // Seconds
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
+
+  #define WATCH_TEMP_BED_PERIOD 30            // Seconds
+  #define WATCH_TEMP_BED_INCREASE 1           // Degrees Celsius
+  #define WATCH_TEMP_BED_MAX_TEMP 70          // Maximum temperature the bead heater is tested (may heat to slow above this temperature)
 #endif
 
 /**
diff --git a/Marlin/example_configurations/tvrrug/Round2/Configuration_adv.h b/Marlin/example_configurations/tvrrug/Round2/Configuration_adv.h
index e238b45082b..9f619065b5a 100644
--- a/Marlin/example_configurations/tvrrug/Round2/Configuration_adv.h
+++ b/Marlin/example_configurations/tvrrug/Round2/Configuration_adv.h
@@ -34,6 +34,10 @@
 #ifdef THERMAL_PROTECTION_BED
   #define THERMAL_PROTECTION_BED_PERIOD 20    // Seconds
   #define THERMAL_PROTECTION_BED_HYSTERESIS 2 // Degrees Celsius
+
+  #define WATCH_TEMP_BED_PERIOD 30            // Seconds
+  #define WATCH_TEMP_BED_INCREASE 1           // Degrees Celsius
+  #define WATCH_TEMP_BED_MAX_TEMP 70          // Maximum temperature the bead heater is tested (may heat to slow above this temperature)
 #endif
 
 /**
diff --git a/Marlin/planner.cpp b/Marlin/planner.cpp
index 35753a7735e..d9a52c0bc00 100644
--- a/Marlin/planner.cpp
+++ b/Marlin/planner.cpp
@@ -502,12 +502,17 @@ float junction_deviation = 0.1;
 
   float dx = target[X_AXIS] - position[X_AXIS],
         dy = target[Y_AXIS] - position[Y_AXIS],
-        dz = target[Z_AXIS] - position[Z_AXIS],
-        de = target[E_AXIS] - position[E_AXIS];
+        dz = target[Z_AXIS] - position[Z_AXIS];
+
+  // DRYRUN ignores all temperature constraints and assures that the extruder is instantly satisfied
+  if (marlin_debug_flags & DEBUG_DRYRUN)
+    position[E_AXIS] = target[E_AXIS];
+
+  float de = target[E_AXIS] - position[E_AXIS];
 
   #ifdef PREVENT_DANGEROUS_EXTRUDE
     if (de) {
-      if (degHotend(extruder) < extrude_min_temp && !(marlin_debug_flags & DEBUG_DRYRUN)) {
+      if (degHotend(extruder) < extrude_min_temp) {
         position[E_AXIS] = target[E_AXIS]; // Behave as if the move really took place, but ignore E part
         de = 0; // no difference
         SERIAL_ECHO_START;
diff --git a/Marlin/temperature.cpp b/Marlin/temperature.cpp
index 25d891d23f4..21f1c51d5d4 100644
--- a/Marlin/temperature.cpp
+++ b/Marlin/temperature.cpp
@@ -175,6 +175,11 @@ static void updateTemperaturesFromRawValues();
   millis_t watch_heater_next_ms[EXTRUDERS] = { 0 };
 #endif
 
+#ifdef THERMAL_PROTECTION_BED
+  int watch_target_temp_bed = 0;
+  millis_t watch_heater_bed_next_ms = 0;
+#endif
+
 #ifndef SOFT_PWM_SCALE
   #define SOFT_PWM_SCALE 0
 #endif
@@ -620,7 +625,7 @@ void manage_heater() {
       // Is it time to check this extruder's heater?
       if (watch_heater_next_ms[e] && ms > watch_heater_next_ms[e]) {
         // Has it failed to increase enough?
-        if (degHotend(e) < watch_target_temp[e]) {
+        if (current_temperature[e] < watch_target_temp[e]) {
           // Stop!
           _temp_error(e, PSTR(MSG_T_HEATING_FAILED), PSTR(MSG_HEATING_FAILED_LCD));
         }
@@ -670,6 +675,19 @@ void manage_heater() {
   #if TEMP_SENSOR_BED != 0
   
     #ifdef THERMAL_PROTECTION_BED
+      // Is it time to check this extruder's heater?
+      if (watch_heater_bed_next_ms && ms > watch_heater_bed_next_ms) {
+        // Has it failed to increase enough?
+        if (current_temperature_bed < watch_target_temp_bed) {
+          // Stop!
+          _temp_error(-1, PSTR(MSG_T_HEATING_FAILED), PSTR(MSG_HEATING_FAILED_LCD));
+        }
+        else {
+          // Start again if the target is still far off
+          start_watching_heater_bed();
+        }
+      }
+
       thermal_runaway_protection(&thermal_runaway_bed_state_machine, &thermal_runaway_bed_timer, current_temperature_bed, target_temperature_bed, -1, THERMAL_PROTECTION_BED_PERIOD, THERMAL_PROTECTION_BED_HYSTERESIS);
     #endif
 
@@ -1011,8 +1029,8 @@ void tp_init() {
    * This is called when the temperature is set. (M104, M109)
    */
   void start_watching_heater(int e) {
-    if (degHotend(e) < degTargetHotend(e) - (WATCH_TEMP_INCREASE + TEMP_HYSTERESIS + 1)) {
-      watch_target_temp[e] = degHotend(e) + WATCH_TEMP_INCREASE;
+    if (current_temperature[e] < target_temperature[e] - (WATCH_TEMP_INCREASE + TEMP_HYSTERESIS + 1)) {
+      watch_target_temp[e] = current_temperature[e] + WATCH_TEMP_INCREASE;
       watch_heater_next_ms[e] = millis() + WATCH_TEMP_PERIOD * 1000;
     }
     else
@@ -1020,6 +1038,22 @@ void tp_init() {
   }
 #endif
 
+#ifdef THERMAL_PROTECTION_BED
+  /**
+   * Start Heating Sanity Check for bed that is below
+   * its target temperature by a configurable margin.
+   * This is called when the temperature is set. (M140, M190)
+   */
+  void start_watching_heater_bed() {
+    if ((current_temperature_bed < WATCH_TEMP_BED_MAX_TEMP) && (current_temperature_bed < target_temperature_bed - (WATCH_TEMP_BED_INCREASE + TEMP_HYSTERESIS + 1))) {
+      watch_target_temp_bed = current_temperature_bed + WATCH_TEMP_BED_INCREASE;
+      watch_heater_bed_next_ms = millis() + WATCH_TEMP_BED_PERIOD * 1000;
+    }
+    else
+      watch_heater_bed_next_ms = 0;
+  }
+#endif
+
 #if defined(THERMAL_PROTECTION_HOTENDS) || defined(THERMAL_PROTECTION_BED)
 
   void thermal_runaway_protection(TRState *state, millis_t *timer, float temperature, float target_temperature, int heater_id, int period_seconds, int hysteresis_degc) {
diff --git a/Marlin/temperature.h b/Marlin/temperature.h
index 6ab35d52e9c..6ccb16bb89e 100644
--- a/Marlin/temperature.h
+++ b/Marlin/temperature.h
@@ -99,6 +99,9 @@ FORCE_INLINE float degTargetBed() { return target_temperature_bed; }
 #ifdef THERMAL_PROTECTION_HOTENDS
   void start_watching_heater(int e=0);
 #endif
+#ifdef THERMAL_PROTECTION_BED
+  void start_watching_heater_bed();
+#endif
 
 FORCE_INLINE void setTargetHotend(const float &celsius, uint8_t extruder) {
   target_temperature[extruder] = celsius;
@@ -106,7 +109,12 @@ FORCE_INLINE void setTargetHotend(const float &celsius, uint8_t extruder) {
     start_watching_heater(extruder);
   #endif
 }
-FORCE_INLINE void setTargetBed(const float &celsius) { target_temperature_bed = celsius; }
+FORCE_INLINE void setTargetBed(const float &celsius) {
+  target_temperature_bed = celsius;
+  #ifdef THERMAL_PROTECTION_BED
+    start_watching_heater_bed();
+  #endif
+}
 
 FORCE_INLINE bool isHeatingHotend(uint8_t extruder) { return target_temperature[extruder] > current_temperature[extruder]; }
 FORCE_INLINE bool isHeatingBed() { return target_temperature_bed > current_temperature_bed; }
