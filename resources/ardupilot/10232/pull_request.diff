diff --git a/ArduPlane/ArduPlane.cpp b/ArduPlane/ArduPlane.cpp
index 914051174dd2..148044f518ec 100644
--- a/ArduPlane/ArduPlane.cpp
+++ b/ArduPlane/ArduPlane.cpp
@@ -166,6 +166,9 @@ void Plane::ahrs_update()
     steer_state.locked_course_err += ahrs.get_yaw_rate_earth() * G_Dt;
     steer_state.locked_course_err = wrap_PI(steer_state.locked_course_err);
 
+    // check if we have had a yaw reset from the EKF
+    quadplane.check_yaw_reset();
+
     // update inertial_nav for quadplane
     quadplane.inertial_nav.update(G_Dt);
 }
diff --git a/ArduPlane/quadplane.cpp b/ArduPlane/quadplane.cpp
index 8d2cae30e9bc..e0f7c90a94d4 100644
--- a/ArduPlane/quadplane.cpp
+++ b/ArduPlane/quadplane.cpp
@@ -829,6 +829,9 @@ void QuadPlane::init_hover(void)
  */
 void QuadPlane::check_yaw_reset(void)
 {
+    if (!initialised) {
+        return;
+    }
     float yaw_angle_change_rad = 0.0f;
     uint32_t new_ekfYawReset_ms = ahrs.getLastYawResetAngle(yaw_angle_change_rad);
     if (new_ekfYawReset_ms != ekfYawReset_ms) {
@@ -1485,8 +1488,6 @@ void QuadPlane::update(void)
         pos_control->relax_alt_hold_controllers(0);
     }
     
-    check_yaw_reset();
-    
     if (!in_vtol_mode()) {
         update_transition();
     } else {
diff --git a/libraries/DataFlash/LogFile.cpp b/libraries/DataFlash/LogFile.cpp
index 18efbbc31aa5..d05f5f21e613 100644
--- a/libraries/DataFlash/LogFile.cpp
+++ b/libraries/DataFlash/LogFile.cpp
@@ -1362,8 +1362,8 @@ void DataFlash_Class::Log_Write_Attitude(AP_AHRS &ahrs, const Vector3f &targets)
         roll            : (int16_t)ahrs.roll_sensor,
         control_pitch   : (int16_t)targets.y,
         pitch           : (int16_t)ahrs.pitch_sensor,
-        control_yaw     : (uint16_t)targets.z,
-        yaw             : (uint16_t)ahrs.yaw_sensor,
+        control_yaw     : (uint16_t)wrap_360_cd(targets.z),
+        yaw             : (uint16_t)wrap_360_cd(ahrs.yaw_sensor),
         error_rp        : (uint16_t)(ahrs.get_error_rp() * 100),
         error_yaw       : (uint16_t)(ahrs.get_error_yaw() * 100)
     };
