diff --git a/libraries/AP_Notify/ToneAlarm_Linux.cpp b/libraries/AP_Notify/ToneAlarm_Linux.cpp
index f26c38c029e1..11142a1e4aae 100644
--- a/libraries/AP_Notify/ToneAlarm_Linux.cpp
+++ b/libraries/AP_Notify/ToneAlarm_Linux.cpp
@@ -36,12 +36,12 @@ extern const AP_HAL::HAL& hal;
 bool ToneAlarm_Linux::init()
 {
     // open the tone alarm device
-    err = !hal.util->toneAlarm_init();
-    if (err) {
+    _initialized = hal.util->toneAlarm_init();
+    if (!_initialized) {
         hal.console->printf("AP_Notify: Failed to initialise ToneAlarm");
         return false;
     }
-    
+
     // set initial boot states. This prevents us issueing a arming
     // warning in plane and rover on every boot
     flags.armed = AP_Notify::flags.armed;
@@ -61,7 +61,7 @@ bool ToneAlarm_Linux::play_tune(uint8_t tune_number)
 void ToneAlarm_Linux::update()
 {
     // exit immediately if we haven't initialised successfully
-    if (err == -1) {
+    if (!_initialized) {
         return;
     }
 
diff --git a/libraries/AP_Notify/ToneAlarm_Linux.h b/libraries/AP_Notify/ToneAlarm_Linux.h
index 072c0803dda6..a002375c0af7 100644
--- a/libraries/AP_Notify/ToneAlarm_Linux.h
+++ b/libraries/AP_Notify/ToneAlarm_Linux.h
@@ -23,9 +23,6 @@
 class ToneAlarm_Linux: public NotifyDevice
 {
 public:
-    ToneAlarm_Linux():
-    err(-1)
-    {}
     /// init - initialised the tone alarm
     bool init(void);
 
@@ -36,7 +33,7 @@ class ToneAlarm_Linux: public NotifyDevice
     /// play_tune - play one of the pre-defined tunes
     bool play_tune(uint8_t tune_number);
 
-    bool err;
+    bool _initialized = false;
 
     /// tonealarm_type - bitmask of states we track
     struct tonealarm_type {
