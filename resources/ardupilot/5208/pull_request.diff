diff --git a/Tools/ardupilotwaf/cxx_checks.py b/Tools/ardupilotwaf/cxx_checks.py
index ca9fe7951abd..d758f3729e7f 100644
--- a/Tools/ardupilotwaf/cxx_checks.py
+++ b/Tools/ardupilotwaf/cxx_checks.py
@@ -170,6 +170,10 @@ def check_package(cfg, env, libname):
 
 @conf
 def check_lttng(cfg, env):
+    if cfg.env.STATIC_LINKING:
+        # lttng-ust depends on libdl which means it can't be used in a static build
+        cfg.msg("Checking for 'lttng-ust':", 'disabled for static build', color='YELLOW')
+        return False
     if cfg.options.disable_lttng:
         cfg.msg("Checking for 'lttng-ust':", 'disabled', color='YELLOW')
         return False
diff --git a/libraries/AP_OpticalFlow/OpticalFlow.cpp b/libraries/AP_OpticalFlow/OpticalFlow.cpp
index a0040d86e804..0cf50e46262c 100644
--- a/libraries/AP_OpticalFlow/OpticalFlow.cpp
+++ b/libraries/AP_OpticalFlow/OpticalFlow.cpp
@@ -67,12 +67,6 @@ OpticalFlow::OpticalFlow(AP_AHRS_NavEKF &ahrs)
 
     // healthy flag will be overwritten on update
     _flags.healthy = false;
-
-#if CONFIG_HAL_BOARD_SUBTYPE == HAL_BOARD_SUBTYPE_LINUX_BEBOP ||\
-    CONFIG_HAL_BOARD_SUBTYPE == HAL_BOARD_SUBTYPE_LINUX_MINLURE ||\
-    CONFIG_HAL_BOARD_SUBTYPE == HAL_BOARD_SUBTYPE_LINUX_BBBMINI
-    backend = new AP_OpticalFlow_Onboard(*this, ahrs);
-#endif
 }
 
 void OpticalFlow::init(void)
@@ -84,6 +78,10 @@ void OpticalFlow::init(void)
         backend = new AP_OpticalFlow_HIL(*this);
 #elif CONFIG_HAL_BOARD == HAL_BOARD_LINUX
         backend = new AP_OpticalFlow_Linux(*this, hal.i2c_mgr->get_device(HAL_OPTFLOW_PX4FLOW_I2C_BUS, HAL_OPTFLOW_PX4FLOW_I2C_ADDRESS));
+#elif CONFIG_HAL_BOARD_SUBTYPE == HAL_BOARD_SUBTYPE_LINUX_BEBOP ||\
+    CONFIG_HAL_BOARD_SUBTYPE == HAL_BOARD_SUBTYPE_LINUX_MINLURE ||\
+    CONFIG_HAL_BOARD_SUBTYPE == HAL_BOARD_SUBTYPE_LINUX_BBBMINI
+        backend = new AP_OpticalFlow_Onboard(*this, ahrs);
 #endif
     }
 
