diff --git a/ArduSub/ArduSub.cpp b/ArduSub/ArduSub.cpp
index a18ceaf5a37a..e92615fa7f4b 100644
--- a/ArduSub/ArduSub.cpp
+++ b/ArduSub/ArduSub.cpp
@@ -40,7 +40,7 @@ const AP_Scheduler::Task Sub::scheduler_tasks[] = {
     SCHED_TASK(one_hz_loop,            1,    100),
     SCHED_TASK_CLASS(GCS,                 (GCS*)&sub._gcs,   update_receive,     400, 180),
     SCHED_TASK(gcs_send_heartbeat,     1,    110),
-    SCHED_TASK_CLASS(GCS,                 (GCS*)&sub._gcs,   update_send,        4000, 550),
+    SCHED_TASK_CLASS(GCS,                 (GCS*)&sub._gcs,   update_send,        400, 550),
 #if MOUNT == ENABLED
     SCHED_TASK_CLASS(AP_Mount,            &sub.camera_mount, update,              50,  75),
 #endif
diff --git a/libraries/GCS_MAVLink/GCS_Common.cpp b/libraries/GCS_MAVLink/GCS_Common.cpp
index 46612883413f..4171f09cab3e 100644
--- a/libraries/GCS_MAVLink/GCS_Common.cpp
+++ b/libraries/GCS_MAVLink/GCS_Common.cpp
@@ -1236,6 +1236,11 @@ void GCS_MAVLINK::update_send()
 void GCS_MAVLINK::remove_message_from_bucket(int8_t bucket, ap_message id)
 {
     deferred_message_bucket[bucket].ap_message_ids.clear(id);
+
+    if (bucket == sending_bucket_id) {
+        bucket_message_ids_to_send.clear(id);
+    }
+
     if (deferred_message_bucket[bucket].ap_message_ids.count() == 0) {
         // bucket empty.  Free it:
         deferred_message_bucket[bucket].interval_ms = 0;
@@ -1244,10 +1249,6 @@ void GCS_MAVLINK::remove_message_from_bucket(int8_t bucket, ap_message id)
             find_next_bucket_to_send();
         }
     }
-
-    if (bucket == sending_bucket_id) {
-        bucket_message_ids_to_send.clear(id);
-    }
 }
 
 bool GCS_MAVLINK::set_ap_message_interval(enum ap_message id, uint16_t interval_ms)
