diff --git a/src/main/java/org/elasticsearch/index/query/MultiMatchQueryParser.java b/src/main/java/org/elasticsearch/index/query/MultiMatchQueryParser.java
index 4c25ce17101e..3fbd43651dec 100644
--- a/src/main/java/org/elasticsearch/index/query/MultiMatchQueryParser.java
+++ b/src/main/java/org/elasticsearch/index/query/MultiMatchQueryParser.java
@@ -34,7 +34,7 @@
 import java.util.Map;
 
 /**
- * Same ad {@link MatchQueryParser} but has support for multiple fields.
+ * Same as {@link MatchQueryParser} but has support for multiple fields.
  */
 public class MultiMatchQueryParser implements QueryParser {
 
@@ -142,11 +142,11 @@ public Query parse(QueryParseContext parseContext) throws IOException, QueryPars
         }
 
         if (value == null) {
-            throw new QueryParsingException(parseContext.index(), "No text specified for match_all query");
+            throw new QueryParsingException(parseContext.index(), "No text specified for multi_match query");
         }
 
         if (fieldNameWithBoosts.isEmpty()) {
-            throw new QueryParsingException(parseContext.index(), "No fields specified for match_all query");
+            throw new QueryParsingException(parseContext.index(), "No fields specified for multi_match query");
         }
         if (type == null) {
             type = MultiMatchQueryBuilder.Type.BEST_FIELDS;
@@ -198,4 +198,4 @@ private void extractFieldAndBoost(QueryParseContext parseContext, XContentParser
             fieldNameWithBoosts.put(fField, fBoost);
         }
     }
-}
\ No newline at end of file
+}
