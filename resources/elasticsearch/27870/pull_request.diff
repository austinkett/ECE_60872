diff --git a/core/src/main/java/org/elasticsearch/index/engine/LiveVersionMap.java b/core/src/main/java/org/elasticsearch/index/engine/LiveVersionMap.java
index 5d58081b624d..ae533bf08cd0 100644
--- a/core/src/main/java/org/elasticsearch/index/engine/LiveVersionMap.java
+++ b/core/src/main/java/org/elasticsearch/index/engine/LiveVersionMap.java
@@ -39,11 +39,8 @@
      * This must be called under write lock in the engine
      */
     void adjustMapSizeUnderLock() {
-        if (maps.current.isEmpty() == false || maps.old.isEmpty() == false) {
-            assert false : "map must be empty"; // fail hard if not empty and fail with assertion in tests to ensure we never swallow it
-            throw new IllegalStateException("map must be empty");
-        }
-        maps = new Maps();
+        // we have to make a copy since we might have some empty deletes in here see https://github.com/elastic/elasticsearch/issues/27852
+        maps = maps.getSizeAdjustedCopy();
     }
 
     private static final class VersionLookup {
@@ -79,7 +76,6 @@ boolean isEmpty() {
             return map.isEmpty();
         }
 
-
         int size() {
             return map.size();
         }
@@ -116,6 +112,13 @@ void markAsUnsafe() {
             this(new VersionLookup(ConcurrentCollections.newConcurrentMapWithAggressiveConcurrency()), VersionLookup.EMPTY, false);
         }
 
+        Maps getSizeAdjustedCopy() {
+            Maps newMaps = new Maps(new VersionLookup(ConcurrentCollections.newConcurrentMapWithAggressiveConcurrency()),
+                old, previousMapsNeededSafeAccess);
+            newMaps.current.map.putAll(current.map);
+            return newMaps;
+        }
+
         boolean isSafeAccessMode() {
             return needsSafeAccess || previousMapsNeededSafeAccess;
         }
diff --git a/core/src/test/java/org/elasticsearch/index/engine/LiveVersionMapTests.java b/core/src/test/java/org/elasticsearch/index/engine/LiveVersionMapTests.java
index f3613f72cd64..b2fe4b6e839a 100644
--- a/core/src/test/java/org/elasticsearch/index/engine/LiveVersionMapTests.java
+++ b/core/src/test/java/org/elasticsearch/index/engine/LiveVersionMapTests.java
@@ -106,13 +106,7 @@ public void testAdjustMapSizeUnderLock() throws IOException {
             map.beforeRefresh();
         }
         assertEquals(new VersionValue(1,1,1), map.getUnderLock(uid("test")));
-        final String msg;
-        if (Assertions.ENABLED) {
-            msg = expectThrows(AssertionError.class, map::adjustMapSizeUnderLock).getMessage();
-        } else {
-            msg = expectThrows(IllegalStateException.class, map::adjustMapSizeUnderLock).getMessage();
-        }
-        assertEquals("map must be empty", msg);
+        map.adjustMapSizeUnderLock();
         assertEquals(new VersionValue(1,1,1), map.getUnderLock(uid("test")));
         if (withinRefresh == false) {
             map.beforeRefresh();
