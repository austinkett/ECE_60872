diff --git a/core/src/main/java/org/elasticsearch/common/geo/GeoUtils.java b/core/src/main/java/org/elasticsearch/common/geo/GeoUtils.java
index 4ed4a2860a3b..b4aaf5830cad 100644
--- a/core/src/main/java/org/elasticsearch/common/geo/GeoUtils.java
+++ b/core/src/main/java/org/elasticsearch/common/geo/GeoUtils.java
@@ -384,7 +384,7 @@ public static GeoPoint parseGeoPoint(XContentParser parser, GeoPoint point) thro
         if(parser.currentToken() == Token.START_OBJECT) {
             while(parser.nextToken() != Token.END_OBJECT) {
                 if(parser.currentToken() == Token.FIELD_NAME) {
-                    String field = parser.text();
+                    String field = parser.currentName();
                     if(LATITUDE.equals(field)) {
                         parser.nextToken();
                         switch (parser.currentToken()) {
diff --git a/core/src/main/java/org/elasticsearch/common/xcontent/XContentLocation.java b/core/src/main/java/org/elasticsearch/common/xcontent/XContentLocation.java
index ade2a4577974..43ab7503cd1d 100644
--- a/core/src/main/java/org/elasticsearch/common/xcontent/XContentLocation.java
+++ b/core/src/main/java/org/elasticsearch/common/xcontent/XContentLocation.java
@@ -34,4 +34,9 @@ public XContentLocation(int lineNumber, int columnNumber) {
         this.lineNumber = lineNumber;
         this.columnNumber = columnNumber;
     }
+
+    @Override
+    public String toString() {
+        return lineNumber + ":" + columnNumber;
+    }
 }
diff --git a/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentParser.java b/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentParser.java
index 2e759367a77f..fbdf66e73ee3 100644
--- a/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentParser.java
+++ b/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentParser.java
@@ -79,7 +79,10 @@ protected boolean doBooleanValue() throws IOException {
 
     @Override
     public String text() throws IOException {
-        return parser.getText();
+        if (currentToken().isValue()) {
+            return parser.getText();
+        }
+        throw new IllegalStateException("Can't get text on a " + currentToken() + " at " + getTokenLocation());
     }
 
     @Override
diff --git a/core/src/main/java/org/elasticsearch/common/xcontent/support/AbstractXContentParser.java b/core/src/main/java/org/elasticsearch/common/xcontent/support/AbstractXContentParser.java
index 88dffcf33955..d8216be4ad7a 100644
--- a/core/src/main/java/org/elasticsearch/common/xcontent/support/AbstractXContentParser.java
+++ b/core/src/main/java/org/elasticsearch/common/xcontent/support/AbstractXContentParser.java
@@ -194,7 +194,7 @@ public double doubleValue(boolean coerce) throws IOException {
     protected abstract double doDoubleValue() throws IOException;
 
     @Override
-    public String textOrNull() throws IOException {
+    public final String textOrNull() throws IOException {
         if (currentToken() == Token.VALUE_NULL) {
             return null;
         }
diff --git a/core/src/main/java/org/elasticsearch/index/query/GeohashCellQuery.java b/core/src/main/java/org/elasticsearch/index/query/GeohashCellQuery.java
index 1649d12f186e..07e92a6dc16d 100644
--- a/core/src/main/java/org/elasticsearch/index/query/GeohashCellQuery.java
+++ b/core/src/main/java/org/elasticsearch/index/query/GeohashCellQuery.java
@@ -297,7 +297,7 @@ public Builder fromXContent(QueryParseContext parseContext) throws IOException {
 
             while ((token = parser.nextToken()) != Token.END_OBJECT) {
                 if (token == Token.FIELD_NAME) {
-                    String field = parser.text();
+                    String field = parser.currentName();
 
                     if (parseContext.isDeprecatedSetting(field)) {
                         // skip
diff --git a/core/src/test/java/org/elasticsearch/index/mapper/multifield/MultiFieldTests.java b/core/src/test/java/org/elasticsearch/index/mapper/multifield/MultiFieldTests.java
index 3c301e93fa50..016c3b58144b 100644
--- a/core/src/test/java/org/elasticsearch/index/mapper/multifield/MultiFieldTests.java
+++ b/core/src/test/java/org/elasticsearch/index/mapper/multifield/MultiFieldTests.java
@@ -335,43 +335,6 @@ public void testConvertMultiFieldGeoPoint() throws Exception {
         assertThat(f.stringValue(), equalTo("-1,-1"));
         assertThat(f.fieldType().stored(), equalTo(false));
         assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions());
-
-        json = jsonBuilder().startObject()
-                .startArray("b").startArray().value(-1).value(-1).endArray().startArray().value(-2).value(-2).endArray().endArray()
-                .endObject().bytes();
-        doc = docMapper.parse("test", "type", "1", json).rootDoc();
-
-        f = doc.getFields("b")[0];
-        assertThat(f, notNullValue());
-        assertThat(f.name(), equalTo("b"));
-        if (indexCreatedBefore22 == true) {
-            assertThat(f.stringValue(), equalTo("-1.0,-1.0"));
-        } else {
-            assertThat(Long.parseLong(f.stringValue()), equalTo(GeoUtils.mortonHash(-1.0, -1.0)));
-        }
-        assertThat(f.fieldType().stored(), equalTo(stored));
-        assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions());
-
-        f = doc.getFields("b")[1];
-        assertThat(f, notNullValue());
-        assertThat(f.name(), equalTo("b"));
-        if (indexCreatedBefore22 == true) {
-            assertThat(f.stringValue(), equalTo("-2.0,-2.0"));
-        } else {
-            assertThat(Long.parseLong(f.stringValue()), equalTo(GeoUtils.mortonHash(-2.0, -2.0)));
-        }
-        assertThat(f.fieldType().stored(), equalTo(stored));
-        assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions());
-
-        f = doc.getField("b.a");
-        assertThat(f, notNullValue());
-        assertThat(f.name(), equalTo("b.a"));
-        // NOTE: "]" B/c the lat,long aren't specified as a string, we miss the actual values when parsing the multi
-        // fields. We already skipped over the coordinates values and can't get to the coordinates.
-        // This happens if coordinates are specified as array and object.
-        assertThat(f.stringValue(), equalTo("]"));
-        assertThat(f.fieldType().stored(), equalTo(false));
-        assertNotSame(IndexOptions.NONE, f.fieldType().indexOptions());
     }
 
     public void testConvertMultiFieldCompletion() throws Exception {
diff --git a/plugins/lang-python/src/test/resources/rest-api-spec/test/lang_python/30_update.yaml b/plugins/lang-python/src/test/resources/rest-api-spec/test/lang_python/30_update.yaml
index 4f8926e0db64..6e6266ee9c99 100644
--- a/plugins/lang-python/src/test/resources/rest-api-spec/test/lang_python/30_update.yaml
+++ b/plugins/lang-python/src/test/resources/rest-api-spec/test/lang_python/30_update.yaml
@@ -18,9 +18,8 @@
             id: 1
             body:
                 script:
-                    script:
-                        inline: "ctx[\"_source\"][\"myfield\"]=\"bar\""
-                        lang: python
+                    inline: "ctx[\"_source\"][\"myfield\"]=\"bar\""
+                    lang: python
     - do:
         get:
             index: test
@@ -48,9 +47,8 @@
             id: 1
             body:
                 script:
-                    script:
-                        inline: "a=42; ctx[\"_source\"][\"myfield\"]=\"bar\""
-                        lang: python
+                    inline: "a=42; ctx[\"_source\"][\"myfield\"]=\"bar\""
+                    lang: python
     - do:
         get:
             index: test
