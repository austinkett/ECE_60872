diff --git a/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java b/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java
index 2e88c32a3421..2b94e872c5e1 100644
--- a/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java
+++ b/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/TransportAnalyzeAction.java
@@ -171,6 +171,7 @@ private static Analyzer getAnalyzer(AnalyzeAction.Request request, AnalysisRegis
             if (analyzer == null) {
                 throw new IllegalArgumentException("failed to find normalizer under [" + request.normalizer() + "]");
             }
+            return analyzer;
         }
         if (request.field() != null) {
             if (indexService == null) {
diff --git a/server/src/test/java/org/elasticsearch/action/admin/indices/TransportAnalyzeActionTests.java b/server/src/test/java/org/elasticsearch/action/admin/indices/TransportAnalyzeActionTests.java
index 6abff5f0a817..23129ae546fe 100644
--- a/server/src/test/java/org/elasticsearch/action/admin/indices/TransportAnalyzeActionTests.java
+++ b/server/src/test/java/org/elasticsearch/action/admin/indices/TransportAnalyzeActionTests.java
@@ -428,13 +428,14 @@ public void testCustomCharFilterWithParameters() throws IOException {
     public void testNormalizerWithIndex() throws IOException {
         AnalyzeAction.Request request = new AnalyzeAction.Request("index");
         request.normalizer("my_normalizer");
-        request.text("ABc");
+        // this should be lowercased and only emit a single token
+        request.text("Wi-fi");
         AnalyzeAction.Response analyze
             = TransportAnalyzeAction.analyze(request, registry, mockIndexService(), maxTokenCount);
         List<AnalyzeAction.AnalyzeToken> tokens = analyze.getTokens();
 
         assertEquals(1, tokens.size());
-        assertEquals("abc", tokens.get(0).getTerm());
+        assertEquals("wi-fi", tokens.get(0).getTerm());
     }
 
     /**
