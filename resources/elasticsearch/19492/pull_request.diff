diff --git a/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java
index 98a5b037f8bd..f31b1d373768 100644
--- a/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java
+++ b/core/src/main/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequest.java
@@ -175,6 +175,7 @@ public void readFrom(StreamInput in) throws IOException {
         this.shard = in.readOptionalVInt();
         this.primary = in.readOptionalBoolean();
         this.includeYesDecisions = in.readBoolean();
+        this.includeDiskInfo = in.readBoolean();
     }
 
     @Override
@@ -184,5 +185,6 @@ public void writeTo(StreamOutput out) throws IOException {
         out.writeOptionalVInt(shard);
         out.writeOptionalBoolean(primary);
         out.writeBoolean(includeYesDecisions);
+        out.writeBoolean(includeDiskInfo);
     }
 }
diff --git a/core/src/test/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequestTests.java b/core/src/test/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequestTests.java
new file mode 100644
index 000000000000..926de8b253e7
--- /dev/null
+++ b/core/src/test/java/org/elasticsearch/action/admin/cluster/allocation/ClusterAllocationExplainRequestTests.java
@@ -0,0 +1,44 @@
+/*
+ * Licensed to Elasticsearch under one or more contributor
+ * license agreements. See the NOTICE file distributed with
+ * this work for additional information regarding copyright
+ * ownership. Elasticsearch licenses this file to you under
+ * the Apache License, Version 2.0 (the "License"); you may
+ * not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *    http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing,
+ * software distributed under the License is distributed on an
+ * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+ * KIND, either express or implied.  See the License for the
+ * specific language governing permissions and limitations
+ * under the License.
+ */
+
+package org.elasticsearch.action.admin.cluster.allocation;
+
+import org.elasticsearch.common.io.stream.BytesStreamOutput;
+import org.elasticsearch.test.ESTestCase;
+
+public class ClusterAllocationExplainRequestTests extends ESTestCase {
+
+    public void testSerialization() throws Exception {
+        ClusterAllocationExplainRequest request =
+                new ClusterAllocationExplainRequest(randomAsciiOfLength(4), randomIntBetween(0, Integer.MAX_VALUE), randomBoolean());
+        request.includeYesDecisions(randomBoolean());
+        request.includeDiskInfo(randomBoolean());
+        BytesStreamOutput output = new BytesStreamOutput();
+        request.writeTo(output);
+
+        ClusterAllocationExplainRequest actual = new ClusterAllocationExplainRequest();
+        actual.readFrom(output.bytes().streamInput());
+        assertEquals(request.getIndex(), actual.getIndex());
+        assertEquals(request.getShard(), actual.getShard());
+        assertEquals(request.isPrimary(), actual.isPrimary());
+        assertEquals(request.includeYesDecisions(), actual.includeYesDecisions());
+        assertEquals(request.includeDiskInfo(), actual.includeDiskInfo());
+    }
+
+}
