diff --git a/src/main/java/org/elasticsearch/index/query/MatchQueryParser.java b/src/main/java/org/elasticsearch/index/query/MatchQueryParser.java
index ba8f8536154e..eff80a12a931 100644
--- a/src/main/java/org/elasticsearch/index/query/MatchQueryParser.java
+++ b/src/main/java/org/elasticsearch/index/query/MatchQueryParser.java
@@ -92,6 +92,8 @@ public Query parse(QueryParseContext parseContext) throws IOException, QueryPars
                             type = MatchQuery.Type.PHRASE;
                         } else if ("phrase_prefix".equals(tStr) || "phrasePrefix".equals(currentFieldName)) {
                             type = MatchQuery.Type.PHRASE_PREFIX;
+                        } else {
+                            throw new QueryParsingException(parseContext.index(), "[match] query does not support type " + tStr);
                         }
                     } else if ("analyzer".equals(currentFieldName)) {
                         String analyzer = parser.text();
diff --git a/src/main/java/org/elasticsearch/index/query/MultiMatchQueryParser.java b/src/main/java/org/elasticsearch/index/query/MultiMatchQueryParser.java
index 68cdedc7a1d1..885475d79844 100644
--- a/src/main/java/org/elasticsearch/index/query/MultiMatchQueryParser.java
+++ b/src/main/java/org/elasticsearch/index/query/MultiMatchQueryParser.java
@@ -76,7 +76,8 @@ public Query parse(QueryParseContext parseContext) throws IOException, QueryPars
                 } else if (token.isValue()) {
                     extractFieldAndBoost(parseContext, parser, fieldNameWithBoosts);
                 } else {
-                    throw new QueryParsingException(parseContext.index(), "[query_string] query does not support [" + currentFieldName + "]");
+                    throw new QueryParsingException(parseContext.index(), "[" + NAME + "] query does not support [" + currentFieldName
+                            + "]");
                 }
             } else if (token.isValue()) {
                 if ("query".equals(currentFieldName)) {
@@ -89,11 +90,13 @@ public Query parse(QueryParseContext parseContext) throws IOException, QueryPars
                         type = MatchQuery.Type.PHRASE;
                     } else if ("phrase_prefix".equals(tStr) || "phrasePrefix".equals(currentFieldName)) {
                         type = MatchQuery.Type.PHRASE_PREFIX;
+                    } else {
+                        throw new QueryParsingException(parseContext.index(), "[" + NAME + "] query does not support type " + tStr);
                     }
                 } else if ("analyzer".equals(currentFieldName)) {
                     String analyzer = parser.text();
                     if (parseContext.analysisService().analyzer(analyzer) == null) {
-                        throw new QueryParsingException(parseContext.index(), "[match] analyzer [" + parser.text() + "] not found");
+                        throw new QueryParsingException(parseContext.index(), "["+ NAME +"] analyzer [" + parser.text() + "] not found");
                     }
                     multiMatchQuery.setAnalyzer(analyzer);
                 } else if ("boost".equals(currentFieldName)) {
