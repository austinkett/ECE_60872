diff --git a/core/src/main/java/org/elasticsearch/search/SearchHit.java b/core/src/main/java/org/elasticsearch/search/SearchHit.java
index 9c7113c4685a..c4625a8e5d80 100644
--- a/core/src/main/java/org/elasticsearch/search/SearchHit.java
+++ b/core/src/main/java/org/elasticsearch/search/SearchHit.java
@@ -108,9 +108,10 @@
     byte[] source();
 
     /**
-     * Is the source empty (not available) or not.
+     * Is the source available or not. A source with no fields will return true. This will return false if {@code fields} doesn't contain
+     * {@code _source} or if source is disabled in the mapping.
      */
-    boolean isSourceEmpty();
+    boolean hasSource();
 
     /**
      * The source of the document as a map (can be <tt>null</tt>).
diff --git a/core/src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java b/core/src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java
index dcbcce503a42..4d232f507fad 100644
--- a/core/src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java
+++ b/core/src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java
@@ -240,7 +240,7 @@ public BytesReference internalSourceRef() {
     }
 
     @Override
-    public boolean isSourceEmpty() {
+    public boolean hasSource() {
         return source == null;
     }
 
diff --git a/docs/reference/mapping/fields/source-field.asciidoc b/docs/reference/mapping/fields/source-field.asciidoc
index ec40f665c5c6..9c509593b61b 100644
--- a/docs/reference/mapping/fields/source-field.asciidoc
+++ b/docs/reference/mapping/fields/source-field.asciidoc
@@ -34,7 +34,8 @@ Users often disable the `_source` field without thinking about the
 consequences, and then live to regret it.  If the `_source` field isn't
 available then a number of features are not supported:
 
-* The <<docs-update,`update` API>>.
+* The <<docs-update,`update`>>, <<docs-update-by-query,`update_by_query`>>,
+and <<docs-reindex,`reindex`>> APIs.
 
 * On the fly <<search-request-highlighting,highlighting>>.
 
@@ -133,4 +134,3 @@ GET logs/event/_search
 
 <1> These fields will be removed from the stored `_source` field.
 <2> We can still search on this field, even though it is not in the stored `_source`.
-
diff --git a/modules/lang-groovy/src/test/java/org/elasticsearch/messy/tests/SearchFieldsTests.java b/modules/lang-groovy/src/test/java/org/elasticsearch/messy/tests/SearchFieldsTests.java
index 7dca27454ab3..00710dc2b4d1 100644
--- a/modules/lang-groovy/src/test/java/org/elasticsearch/messy/tests/SearchFieldsTests.java
+++ b/modules/lang-groovy/src/test/java/org/elasticsearch/messy/tests/SearchFieldsTests.java
@@ -201,7 +201,7 @@ public void testScriptDocAndFields() throws Exception {
         assertNoFailures(response);
 
         assertThat(response.getHits().totalHits(), equalTo(3L));
-        assertThat(response.getHits().getAt(0).isSourceEmpty(), equalTo(true));
+        assertThat(response.getHits().getAt(0).hasSource(), equalTo(true));
         assertThat(response.getHits().getAt(0).id(), equalTo("1"));
         Set<String> fields = new HashSet<>(response.getHits().getAt(0).fields().keySet());
         fields.remove(TimestampFieldMapper.NAME); // randomly enabled via templates
diff --git a/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkIndexByScrollAction.java b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkIndexByScrollAction.java
index 3f39f8240097..bcc4b09b2e62 100644
--- a/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkIndexByScrollAction.java
+++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractAsyncBulkIndexByScrollAction.java
@@ -86,6 +86,14 @@ protected BulkRequest buildBulk(Iterable<SearchHit> docs) {
         Map<String, Object> scriptCtx = null;
 
         for (SearchHit doc : docs) {
+            if (doc.hasSource()) {
+                /*
+                 * Either the document didn't store _source or we didn't fetch it for some reason. Since we don't allow the user to
+                 * change the "fields" part of the search request it is unlikely that we got here because we didn't fetch _source.
+                 * Thus the error message assumes that it wasn't stored.
+                 */
+                throw new IllegalArgumentException("[" + doc.index() + "][" + doc.type() + "][" + doc.id() + "] didn't store _source");
+            }
             IndexRequest index = buildIndexRequest(doc);
             copyMetadata(index, doc);
             if (script != null) {
diff --git a/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequest.java b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequest.java
index def30d8aa00f..05235e83205a 100644
--- a/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequest.java
+++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/AbstractBulkByScrollRequest.java
@@ -117,6 +117,9 @@ public ActionRequestValidationException validate() {
         if (searchRequest.source().from() != -1) {
             e = addValidationError("from is not supported in this context", e);
         }
+        if (searchRequest.source().fields() != null) {
+            e = addValidationError("fields is not supported in this context", e);
+        }
         if (maxRetries < 0) {
             e = addValidationError("retries cannnot be negative", e);
         }
diff --git a/modules/reindex/src/test/resources/rest-api-spec/test/reindex/10_basic.yaml b/modules/reindex/src/test/resources/rest-api-spec/test/reindex/10_basic.yaml
index 00c0e8767c09..63d0edefe149 100644
--- a/modules/reindex/src/test/resources/rest-api-spec/test/reindex/10_basic.yaml
+++ b/modules/reindex/src/test/resources/rest-api-spec/test/reindex/10_basic.yaml
@@ -374,3 +374,30 @@
         index: new_twitter
         type: tweet
   - match: { hits.total: 1 }
+
+---
+"Source document without any fields works":
+  - do:
+      index:
+        index:   source
+        type:    foo
+        id:      1
+        body:    {}
+  - do:
+      indices.refresh: {}
+
+  - do:
+      reindex:
+        body:
+          source:
+            index: source
+          dest:
+            index: dest
+  - match: {created: 1}
+
+  - do:
+      get:
+        index:   dest
+        type:    foo
+        id:      1
+  - match: { _source: {} }
diff --git a/modules/reindex/src/test/resources/rest-api-spec/test/reindex/20_validation.yaml b/modules/reindex/src/test/resources/rest-api-spec/test/reindex/20_validation.yaml
index d3caf929aa07..542eb3bd932b 100644
--- a/modules/reindex/src/test/resources/rest-api-spec/test/reindex/20_validation.yaml
+++ b/modules/reindex/src/test/resources/rest-api-spec/test/reindex/20_validation.yaml
@@ -157,6 +157,46 @@
         requests_per_second: ""
         body:
           source:
-            from: 1
+            index: test
+          dest:
+            index: dest
+
+---
+"reindex without source gives useful error message":
+  - do:
+      indices.create:
+        index: test
+        body:
+          mappings:
+            test:
+              _source:
+                enabled: false
+  - do:
+      index:
+        index:  test
+        type:   test
+        id:     1
+        body:   { age: 23 }
+  - do:
+      indices.refresh: {}
+
+  - do:
+      catch: /\[test\]\[test\]\[1\] didn't store _source/
+      reindex:
+        body:
+          source:
+            index: test
+          dest:
+            index: dest
+
+---
+"source fields may not be modified":
+  - do:
+      catch: /fields is not supported in this context/
+      reindex:
+        body:
+          source:
+            index: test
+            fields: [_id]
           dest:
             index: dest
diff --git a/modules/reindex/src/test/resources/rest-api-spec/test/update_by_query/10_basic.yaml b/modules/reindex/src/test/resources/rest-api-spec/test/update_by_query/10_basic.yaml
index d67023642fa2..89266198f2c0 100644
--- a/modules/reindex/src/test/resources/rest-api-spec/test/update_by_query/10_basic.yaml
+++ b/modules/reindex/src/test/resources/rest-api-spec/test/update_by_query/10_basic.yaml
@@ -226,3 +226,27 @@
         index: test
         scroll_size: 1
   - match: {batches: 3}
+
+---
+"Source document without any fields works":
+  - do:
+      index:
+        index:   test
+        type:    foo
+        id:      1
+        body:    {}
+  - do:
+      indices.refresh: {}
+
+  - do:
+      update_by_query:
+        index: test
+  - match: {updated: 1}
+
+  - do:
+      get:
+        index:   test
+        type:    foo
+        id:      1
+  - match: { _source: {} }
+  - match: { _version: 2 }
diff --git a/modules/reindex/src/test/resources/rest-api-spec/test/update_by_query/20_validation.yaml b/modules/reindex/src/test/resources/rest-api-spec/test/update_by_query/20_validation.yaml
index a1780375b8c6..f237a711f41b 100644
--- a/modules/reindex/src/test/resources/rest-api-spec/test/update_by_query/20_validation.yaml
+++ b/modules/reindex/src/test/resources/rest-api-spec/test/update_by_query/20_validation.yaml
@@ -53,3 +53,36 @@
       update_by_query:
         index: test
         requests_per_second: ''
+
+---
+"update_by_query without source gives useful error message":
+  - do:
+      indices.create:
+        index: test
+        body:
+          mappings:
+            test:
+              _source:
+                enabled: false
+  - do:
+      index:
+        index:  test
+        type:   test
+        id:     1
+        body:   { age: 23 }
+  - do:
+      indices.refresh: {}
+
+  - do:
+      catch: /\[test\]\[test\]\[1\] didn't store _source/
+      update_by_query:
+        index: test
+
+---
+"source fields may not be modified":
+  - do:
+      catch: /fields is not supported in this context/
+      update_by_query:
+        index: test
+        body:
+          fields: [_id]
