diff --git a/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentGenerator.java b/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentGenerator.java
index a7946218e211..b4a39cc42af5 100644
--- a/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentGenerator.java
+++ b/core/src/main/java/org/elasticsearch/common/xcontent/json/JsonXContentGenerator.java
@@ -20,6 +20,8 @@
 package org.elasticsearch.common.xcontent.json;
 
 import com.fasterxml.jackson.core.io.SerializedString;
+import com.fasterxml.jackson.core.util.DefaultIndenter;
+import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
 import org.elasticsearch.common.bytes.BytesReference;
 import org.elasticsearch.common.xcontent.*;
 
@@ -34,6 +36,8 @@
 
     protected final BaseJsonGenerator generator;
     private boolean writeLineFeedAtEnd;
+    private static final SerializedString LF = new SerializedString("\n");
+    private  static final DefaultPrettyPrinter.Indenter INDENTER = new DefaultIndenter("  ", LF.getValue());
 
     public JsonXContentGenerator(BaseJsonGenerator generator) {
         this.generator = generator;
@@ -45,8 +49,8 @@ public XContentType contentType() {
     }
 
     @Override
-    public void usePrettyPrint() {
-        generator.useDefaultPrettyPrinter();
+    public final void usePrettyPrint() {
+        generator.setPrettyPrinter(new DefaultPrettyPrinter().withObjectIndenter(INDENTER));
     }
 
     @Override
@@ -326,6 +330,4 @@ public void close() throws IOException {
         }
         generator.close();
     }
-
-    private static final SerializedString LF = new SerializedString("\n");
 }
diff --git a/core/src/test/java/org/elasticsearch/common/xcontent/builder/XContentBuilderTests.java b/core/src/test/java/org/elasticsearch/common/xcontent/builder/XContentBuilderTests.java
index 9089ec51ba90..23cf83b0d1c7 100644
--- a/core/src/test/java/org/elasticsearch/common/xcontent/builder/XContentBuilderTests.java
+++ b/core/src/test/java/org/elasticsearch/common/xcontent/builder/XContentBuilderTests.java
@@ -331,4 +331,24 @@ public void testHandlingOfCollectionOfPaths() throws IOException {
         assertThat(pathBuilder.string(), equalTo(stringBuilder.string()));
     }
 
+    public void testIndentIsPlatformIndependent() throws IOException {
+        XContentBuilder builder = XContentFactory.contentBuilder(XContentType.JSON).prettyPrint();
+        builder.startObject().field("test","foo").startObject("foo").field("foobar", "boom").endObject().endObject();
+        String string = builder.string();
+        assertEquals("{\n" +
+                "  \"test\" : \"foo\",\n" +
+                "  \"foo\" : {\n" +
+                "    \"foobar\" : \"boom\"\n" +
+                "  }\n" +
+                "}", string);
+
+        builder = XContentFactory.contentBuilder(XContentType.YAML).prettyPrint();
+        builder.startObject().field("test","foo").startObject("foo").field("foobar", "boom").endObject().endObject();
+        string = builder.string();
+        assertEquals("---\n" +
+                "test: \"foo\"\n" +
+                "foo:\n" +
+                "  foobar: \"boom\"\n", string);
+    }
+
 }
diff --git a/core/src/test/java/org/elasticsearch/index/query/HasChildQueryBuilderTests.java b/core/src/test/java/org/elasticsearch/index/query/HasChildQueryBuilderTests.java
index bd738a1edff5..a307cf180c57 100644
--- a/core/src/test/java/org/elasticsearch/index/query/HasChildQueryBuilderTests.java
+++ b/core/src/test/java/org/elasticsearch/index/query/HasChildQueryBuilderTests.java
@@ -196,7 +196,7 @@ public void testParseFromJSON() throws IOException {
         // now assert that we actually generate the same JSON
         XContentBuilder builder = XContentFactory.jsonBuilder().prettyPrint();
         queryBuilder.toXContent(builder, ToXContent.EMPTY_PARAMS);
-        assertEquals(query, builder.string().replaceAll("\\r\\n", "\n")); // jackson uses system linefeed - will fail on windows otherwise
+        assertEquals(query, builder.string());
     }
 
 }
