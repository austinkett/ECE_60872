diff --git a/core/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java b/core/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java
index 537031ef7783..ede57d461a13 100644
--- a/core/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java
+++ b/core/src/main/java/org/elasticsearch/common/blobstore/url/URLBlobContainer.java
@@ -24,9 +24,11 @@
 import org.elasticsearch.common.blobstore.support.AbstractBlobContainer;
 
 import java.io.BufferedInputStream;
+import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.URL;
+import java.nio.file.NoSuchFileException;
 import java.util.Map;
 
 /**
@@ -99,7 +101,11 @@ public boolean blobExists(String blobName) {
 
     @Override
     public InputStream readBlob(String name) throws IOException {
-        return new BufferedInputStream(new URL(path, name).openStream(), blobStore.bufferSizeInBytes());
+        try {
+            return new BufferedInputStream(new URL(path, name).openStream(), blobStore.bufferSizeInBytes());
+        } catch (FileNotFoundException fnfe) {
+            throw new NoSuchFileException("[" + name + "] blob not found");
+        }
     }
 
     @Override
diff --git a/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
index 23807c844752..aa487056cc13 100644
--- a/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
+++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
@@ -100,7 +100,6 @@
 import org.elasticsearch.snapshots.SnapshotMissingException;
 import org.elasticsearch.snapshots.SnapshotShardFailure;
 
-import java.io.FileNotFoundException;
 import java.io.FilterInputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -488,7 +487,7 @@ public MetaData getSnapshotMetaData(SnapshotInfo snapshot, List<IndexId> indices
     public SnapshotInfo getSnapshotInfo(final SnapshotId snapshotId) {
         try {
             return snapshotFormat.read(snapshotsBlobContainer, snapshotId.getUUID());
-        } catch (FileNotFoundException | NoSuchFileException ex) {
+        } catch (NoSuchFileException ex) {
             throw new SnapshotMissingException(metadata.name(), snapshotId, ex);
         } catch (IOException | NotXContentException ex) {
             throw new SnapshotException(metadata.name(), snapshotId, "failed to get snapshots", ex);
@@ -509,7 +508,7 @@ private MetaData readSnapshotMetaData(SnapshotId snapshotId, Version snapshotVer
         }
         try {
             metaData = globalMetaDataFormat(snapshotVersion).read(snapshotsBlobContainer, snapshotId.getUUID());
-        } catch (FileNotFoundException | NoSuchFileException ex) {
+        } catch (NoSuchFileException ex) {
             throw new SnapshotMissingException(metadata.name(), snapshotId, ex);
         } catch (IOException ex) {
             throw new SnapshotException(metadata.name(), snapshotId, "failed to get snapshots", ex);
@@ -631,7 +630,7 @@ public RepositoryData getRepositoryData() {
                 }
             }
             return repositoryData;
-        } catch (NoSuchFileException nsfe) {
+        } catch (NoSuchFileException ex) {
             // repository doesn't have an index blob, its a new blank repo
             return RepositoryData.EMPTY;
         } catch (IOException ioe) {
diff --git a/core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java b/core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java
index edab9876d5b6..6d13d3cf418c 100644
--- a/core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java
+++ b/core/src/test/java/org/elasticsearch/bwcompat/RestoreBackwardsCompatIT.java
@@ -116,7 +116,6 @@ public void testRestoreOldSnapshots() throws Exception {
         }
     }
 
-    @AwaitsFix(bugUrl="https://github.com/elastic/elasticsearch/issues/22068")
     public void testRestoreUnsupportedSnapshots() throws Exception {
         String repo = "test_repo";
         String snapshot = "test_1";
@@ -209,8 +208,7 @@ private void assertUnsupportedIndexFailsToRestore(String repo, String snapshot)
             client().admin().cluster().prepareRestoreSnapshot(repo, snapshot).setRestoreGlobalState(true).setWaitForCompletion(true).get();
             fail("should have failed to restore - " + repo);
         } catch (SnapshotRestoreException ex) {
-            assertThat(ex.getMessage(), containsString("cannot restore index"));
-            assertThat(ex.getMessage(), containsString("because it cannot be upgraded"));
+            assertThat(ex.getMessage(), containsString("snapshot does not exist"));
         }
     }
 }
