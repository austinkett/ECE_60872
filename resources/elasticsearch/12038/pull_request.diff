diff --git a/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
index 3e2daa421ee7..a31f822c9a3a 100644
--- a/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
+++ b/core/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
@@ -116,6 +116,15 @@ public BulkRequest add(IndexRequest request, @Nullable Object payload) {
     }
 
     BulkRequest internalAdd(IndexRequest request, @Nullable Object payload) {
+        if (request == null) {
+            ActionRequestValidationException e = new ActionRequestValidationException();
+            e.addValidationError("request must not be null");
+            throw e;
+        }
+        ActionRequestValidationException validationException = request.validate();
+        if (validationException != null) {
+            throw validationException;
+        }
         requests.add(request);
         addPayload(payload);
         sizeInBytes += request.source().length() + REQUEST_OVERHEAD;
@@ -459,12 +468,16 @@ public ActionRequestValidationException validate() {
             validationException = addValidationError("no requests added", validationException);
         }
         for (int i = 0; i < requests.size(); i++) {
-            ActionRequestValidationException ex = requests.get(i).validate();
-            if (ex != null) {
-                if (validationException == null) {
-                    validationException = new ActionRequestValidationException();
+            if (requests.get(i) == null) {
+                validationException = addValidationError("request must not be null", null);
+            } else {
+                ActionRequestValidationException ex = requests.get(i).validate();
+                if (ex != null) {
+                    if (validationException == null) {
+                        validationException = new ActionRequestValidationException();
+                    }
+                    validationException.addValidationErrors(ex.validationErrors());
                 }
-                validationException.addValidationErrors(ex.validationErrors());
             }
         }
 
diff --git a/core/src/test/java/org/elasticsearch/action/bulk/BulkRequestTests.java b/core/src/test/java/org/elasticsearch/action/bulk/BulkRequestTests.java
index 6220958a0c6e..c919f22a7b68 100644
--- a/core/src/test/java/org/elasticsearch/action/bulk/BulkRequestTests.java
+++ b/core/src/test/java/org/elasticsearch/action/bulk/BulkRequestTests.java
@@ -23,6 +23,7 @@
 
 import org.apache.lucene.util.Constants;
 import org.elasticsearch.action.ActionRequest;
+import org.elasticsearch.action.ActionRequestValidationException;
 import org.elasticsearch.action.delete.DeleteRequest;
 import org.elasticsearch.action.index.IndexRequest;
 import org.elasticsearch.action.update.UpdateRequest;
@@ -63,7 +64,7 @@ public void testSimpleBulk1() throws Exception {
     public void testSimpleBulk2() throws Exception {
         String bulkAction = copyToStringFromClasspath("/org/elasticsearch/action/bulk/simple-bulk2.json");
         BulkRequest bulkRequest = new BulkRequest();
-        bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), null, null);
+        bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), "test", "test");
         assertThat(bulkRequest.numberOfActions(), equalTo(3));
     }
 
@@ -71,7 +72,7 @@ public void testSimpleBulk2() throws Exception {
     public void testSimpleBulk3() throws Exception {
         String bulkAction = copyToStringFromClasspath("/org/elasticsearch/action/bulk/simple-bulk3.json");
         BulkRequest bulkRequest = new BulkRequest();
-        bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), null, null);
+        bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), "test", "test");
         assertThat(bulkRequest.numberOfActions(), equalTo(3));
     }
 
@@ -79,7 +80,7 @@ public void testSimpleBulk3() throws Exception {
     public void testSimpleBulk4() throws Exception {
         String bulkAction = copyToStringFromClasspath("/org/elasticsearch/action/bulk/simple-bulk4.json");
         BulkRequest bulkRequest = new BulkRequest();
-        bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), null, null);
+        bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), "test", "test");
         assertThat(bulkRequest.numberOfActions(), equalTo(4));
         assertThat(((UpdateRequest) bulkRequest.requests().get(0)).id(), equalTo("1"));
         assertThat(((UpdateRequest) bulkRequest.requests().get(0)).retryOnConflict(), equalTo(2));
@@ -170,7 +171,7 @@ public void testSimpleBulk9() throws Exception {
         String bulkAction = copyToStringFromClasspath("/org/elasticsearch/action/bulk/simple-bulk9.json");
         BulkRequest bulkRequest = new BulkRequest();
         try {
-            bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), null, null);
+            bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), "test", "test");
             fail("should have thrown an exception about the wrong format of line 3");
         } catch (IllegalArgumentException e) {
             assertThat("message contains error about the wrong format of line 3: " + e.getMessage(),
@@ -182,7 +183,36 @@ public void testSimpleBulk9() throws Exception {
     public void testSimpleBulk10() throws Exception {
         String bulkAction = copyToStringFromClasspath("/org/elasticsearch/action/bulk/simple-bulk10.json");
         BulkRequest bulkRequest = new BulkRequest();
-        bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), null, null);
+        bulkRequest.add(bulkAction.getBytes(Charsets.UTF_8), 0, bulkAction.length(), "test", "test");
         assertThat(bulkRequest.numberOfActions(), equalTo(9));
     }
+
+    @Test(expected = ActionRequestValidationException.class)
+    public void testInvalidBulk1() {
+        IndexRequest r = null;
+        BulkRequest bulkRequest = new BulkRequest();
+        bulkRequest.add(r);
+    }
+
+    @Test(expected = ActionRequestValidationException.class)
+    public void testInvalidBulk2() {
+        IndexRequest r = Requests.indexRequest();
+        BulkRequest bulkRequest = new BulkRequest();
+        bulkRequest.add(r);
+    }
+
+    @Test(expected = ActionRequestValidationException.class)
+    public void testInvalidBulk3() {
+        IndexRequest r = Requests.indexRequest().index(null);
+        BulkRequest bulkRequest = new BulkRequest();
+        bulkRequest.add(r);
+    }
+
+    @Test(expected = ActionRequestValidationException.class)
+    public void testInvalidBulk4() {
+        IndexRequest r = Requests.indexRequest().source((String)null);
+        BulkRequest bulkRequest = new BulkRequest();
+        bulkRequest.add(r);
+    }
+
 }
