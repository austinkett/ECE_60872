diff --git a/server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java b/server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java
index c4a6f7fa6b7f..5fb977694632 100644
--- a/server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java
+++ b/server/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java
@@ -409,6 +409,7 @@ public void onResponse(GetResponse response) {
                                     parser.nextToken();
                                     if (++currentPathSlot == pathElements.length) {
                                         listener.onResponse(ShapeParser.parse(parser));
+                                        return;
                                     }
                                 } else {
                                     parser.nextToken();
diff --git a/server/src/test/java/org/elasticsearch/index/query/GeoShapeQueryBuilderTests.java b/server/src/test/java/org/elasticsearch/index/query/GeoShapeQueryBuilderTests.java
index 6ddcd671a40a..96d756f00836 100644
--- a/server/src/test/java/org/elasticsearch/index/query/GeoShapeQueryBuilderTests.java
+++ b/server/src/test/java/org/elasticsearch/index/query/GeoShapeQueryBuilderTests.java
@@ -119,6 +119,7 @@ protected GetResponse executeGet(GetRequest getRequest) {
             XContentBuilder builder = XContentFactory.jsonBuilder().prettyPrint();
             builder.startObject();
             builder.field(expectedShapePath, indexedShapeToReturn);
+            builder.field(randomAlphaOfLengthBetween(10, 20), "something");
             builder.endObject();
             json = builder.string();
         } catch (IOException ex) {
@@ -227,13 +228,7 @@ public void testFromJson() throws IOException {
 
     @Override
     public void testMustRewrite() throws IOException {
-        GeoShapeQueryBuilder sqb;
-        do {
-            sqb = doCreateTestQueryBuilder();
-            // do this until we get one without a shape
-        } while (sqb.shape() != null);
-
-        GeoShapeQueryBuilder query = sqb;
+        GeoShapeQueryBuilder query = doCreateTestQueryBuilder(true);
 
         UnsupportedOperationException e = expectThrows(UnsupportedOperationException.class, () -> query.toQuery(createShardContext()));
         assertEquals("query must be rewritten first", e.getMessage());
@@ -244,6 +239,23 @@ public void testMustRewrite() throws IOException {
         assertEquals(geoShapeQueryBuilder, rewrite);
     }
 
+    public void testMultipleRewrite() throws IOException {
+        GeoShapeQueryBuilder shape = doCreateTestQueryBuilder(true);
+        QueryBuilder builder = new BoolQueryBuilder()
+            .should(shape)
+            .should(shape);
+
+        builder = rewriteAndFetch(builder, createShardContext());
+
+        GeoShapeQueryBuilder expectedShape = new GeoShapeQueryBuilder(GEO_SHAPE_FIELD_NAME, indexedShapeToReturn);
+        expectedShape.strategy(shape.strategy());
+        expectedShape.relation(shape.relation());
+        QueryBuilder expected = new BoolQueryBuilder()
+            .should(expectedShape)
+            .should(expectedShape);
+        assertEquals(expected, builder);
+    }
+
     public void testIgnoreUnmapped() throws IOException {
         ShapeType shapeType = ShapeType.randomType(random());
         ShapeBuilder shape = RandomShapeGenerator.createShapeWithin(random(), null, shapeType);
