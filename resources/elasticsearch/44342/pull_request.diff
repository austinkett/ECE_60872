diff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java
index 35d54371df2b..6dc5a5530ec5 100644
--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java
+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/documentation/IndicesClientDocumentationIT.java
@@ -70,9 +70,9 @@
 import org.elasticsearch.client.indices.GetIndexRequest;
 import org.elasticsearch.client.indices.GetIndexResponse;
 import org.elasticsearch.client.indices.GetIndexTemplatesRequest;
+import org.elasticsearch.client.indices.GetIndexTemplatesResponse;
 import org.elasticsearch.client.indices.GetMappingsRequest;
 import org.elasticsearch.client.indices.GetMappingsResponse;
-import org.elasticsearch.client.indices.GetIndexTemplatesResponse;
 import org.elasticsearch.client.indices.IndexTemplateMetaData;
 import org.elasticsearch.client.indices.IndexTemplatesExistRequest;
 import org.elasticsearch.client.indices.PutIndexTemplateRequest;
@@ -2083,7 +2083,7 @@ public void testPutTemplate() throws Exception {
                     "      \"type\": \"text\"\n" +
                     "    }\n" +
                     "  }\n" +
-                    "}", 
+                    "}",
                 XContentType.JSON);
             // end::put-template-request-mappings-json
             assertTrue(client.indices().putTemplate(request, RequestOptions.DEFAULT).isAcknowledged());
@@ -2098,7 +2098,7 @@ public void testPutTemplate() throws Exception {
                     message.put("type", "text");
                     properties.put("message", message);
                 }
-                jsonMap.put("properties", properties);                
+                jsonMap.put("properties", properties);
             }
             request.mapping(jsonMap); // <1>
             //end::put-template-request-mappings-map
@@ -2455,7 +2455,7 @@ public void testAnalyze() throws IOException, InterruptedException {
             DetailAnalyzeResponse detail = response.detail();                   // <1>
             // end::analyze-response-detail
 
-            assertNull(tokens);
+            assertEquals(0, tokens.size());
             assertNotNull(detail.tokenizer());
         }
 
diff --git a/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeResponse.java b/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeResponse.java
index d45ab2682a5e..7eaf83d723d6 100644
--- a/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeResponse.java
+++ b/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/AnalyzeResponse.java
@@ -32,6 +32,7 @@
 
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.List;
@@ -233,7 +234,7 @@ public AnalyzeResponse(List<AnalyzeToken> tokens, DetailAnalyzeResponse detail)
     }
 
     public List<AnalyzeToken> getTokens() {
-        return this.tokens;
+        return this.tokens != null ? this.tokens : Collections.emptyList();
     }
 
     public DetailAnalyzeResponse detail() {
@@ -254,6 +255,10 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws
                 token.toXContent(builder, params);
             }
             builder.endArray();
+        } else if (detail == null) {
+            // at least write an empty list
+            builder.startArray(Fields.TOKENS);
+            builder.endArray();
         }
 
         if (detail != null) {
diff --git a/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/DetailAnalyzeResponse.java b/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/DetailAnalyzeResponse.java
index 1e0c4ed525ef..69027967c6fa 100644
--- a/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/DetailAnalyzeResponse.java
+++ b/server/src/main/java/org/elasticsearch/action/admin/indices/analyze/DetailAnalyzeResponse.java
@@ -20,6 +20,7 @@
 package org.elasticsearch.action.admin.indices.analyze;
 
 
+import org.elasticsearch.action.admin.indices.analyze.AnalyzeResponse.AnalyzeToken;
 import org.elasticsearch.common.ParseField;
 import org.elasticsearch.common.Strings;
 import org.elasticsearch.common.io.stream.StreamInput;
@@ -284,7 +285,7 @@ public String getName() {
         }
 
         public AnalyzeResponse.AnalyzeToken[] getTokens() {
-            return tokens;
+            return tokens != null ? tokens : new AnalyzeToken[0];
         }
 
         public static AnalyzeTokenList readAnalyzeTokenList(StreamInput in) throws IOException {
@@ -296,8 +297,10 @@ public static AnalyzeTokenList readAnalyzeTokenList(StreamInput in) throws IOExc
         XContentBuilder toXContentWithoutObject(XContentBuilder builder, Params params) throws IOException {
             builder.field(Fields.NAME, this.name);
             builder.startArray(AnalyzeResponse.Fields.TOKENS);
-            for (AnalyzeResponse.AnalyzeToken token : tokens) {
-                token.toXContent(builder, params);
+            if (tokens != null) {
+                for (AnalyzeResponse.AnalyzeToken token : tokens) {
+                    token.toXContent(builder, params);
+                }
             }
             builder.endArray();
             return builder;
diff --git a/server/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java b/server/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java
index a0ae03f69283..cbc56f81a1a9 100644
--- a/server/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java
+++ b/server/src/test/java/org/elasticsearch/indices/analyze/AnalyzeActionIT.java
@@ -21,6 +21,7 @@
 import org.elasticsearch.action.admin.indices.alias.Alias;
 import org.elasticsearch.action.admin.indices.analyze.AnalyzeRequestBuilder;
 import org.elasticsearch.action.admin.indices.analyze.AnalyzeResponse;
+import org.elasticsearch.common.Strings;
 import org.elasticsearch.common.settings.Settings;
 import org.elasticsearch.plugins.Plugin;
 import org.elasticsearch.test.ESIntegTestCase;
@@ -436,5 +437,24 @@ public void testAnalyzeNormalizedKeywordField() throws IOException {
         assertThat(token.getPositionLength(), equalTo(1));
     }
 
+    /**
+     * Input text that doesn't produce tokens should return an empty token list
+     */
+    public void testZeroTokenAnalysis() throws IOException {
+        assertAcked(prepareCreate("test"));
+        ensureGreen("test");
+
+        AnalyzeResponse analyzeResponse = client().admin().indices().prepareAnalyze("test", ".").get();
+        assertNotNull(analyzeResponse.getTokens());
+        assertThat(analyzeResponse.getTokens().size(), equalTo(0));
+        assertEquals("{\"tokens\":[]}", Strings.toString(analyzeResponse));
+
+        // also check detailed response
+        analyzeResponse = client().admin().indices().prepareAnalyze("test", ".").setExplain(true).get();
+        assertNotNull(analyzeResponse.detail().analyzer().getTokens());
+        assertThat(analyzeResponse.getTokens().size(), equalTo(0));
+        assertEquals("{\"detail\":{\"custom_analyzer\":false,\"analyzer\":{\"name\":\"default\",\"tokens\":[]}}}",
+                Strings.toString(analyzeResponse));
+    }
 
 }
