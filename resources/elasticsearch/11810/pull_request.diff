diff --git a/core/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java b/core/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java
index 4fe83a1a8908..3887874ee948 100644
--- a/core/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java
+++ b/core/src/main/java/org/elasticsearch/index/query/GeoShapeQueryBuilder.java
@@ -29,7 +29,7 @@
 /**
  * {@link QueryBuilder} that builds a GeoShape Filter
  */
-public class GeoShapeQueryBuilder extends QueryBuilder {
+public class GeoShapeQueryBuilder extends QueryBuilder implements BoostableQueryBuilder<GeoShapeQueryBuilder> {
 
     private final String name;
 
@@ -46,6 +46,8 @@
     private String indexedShapePath;
 
     private ShapeRelation relation = null;
+
+    private float boost = -1;
     
     /**
      * Creates a new GeoShapeQueryBuilder whose Filter will be against the
@@ -146,6 +148,12 @@ public GeoShapeQueryBuilder relation(ShapeRelation relation) {
         return this;
     }
 
+    @Override
+    public GeoShapeQueryBuilder boost(float boost) {
+        this.boost = boost;
+        return this;
+    }
+
     @Override
     protected void doXContent(XContentBuilder builder, Params params) throws IOException {
         builder.startObject(GeoShapeQueryParser.NAME);
@@ -177,6 +185,10 @@ protected void doXContent(XContentBuilder builder, Params params) throws IOExcep
 
         builder.endObject();
 
+        if (boost != -1) {
+            builder.field("boost", boost);
+        }
+
         if (name != null) {
             builder.field("_name", queryName);
         }
diff --git a/core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java b/core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java
index 63f9017ed8f8..5cc13c7f6ff6 100644
--- a/core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java
+++ b/core/src/main/java/org/elasticsearch/index/query/TermsQueryBuilder.java
@@ -26,7 +26,7 @@
 /**
  * A filer for a field based on several terms matching on any of them.
  */
-public class TermsQueryBuilder extends QueryBuilder {
+public class TermsQueryBuilder extends QueryBuilder implements BoostableQueryBuilder<TermsQueryBuilder> {
 
     private final String name;
 
@@ -36,6 +36,8 @@
 
     private String execution;
 
+    private float boost = -1;
+
     /**
      * A filer for a field based on several terms matching on any of them.
      *
@@ -131,6 +133,12 @@ public TermsQueryBuilder queryName(String queryName) {
         return this;
     }
 
+    @Override
+    public TermsQueryBuilder boost(float boost) {
+        this.boost = boost;
+        return this;
+    }
+
     @Override
     public void doXContent(XContentBuilder builder, Params params) throws IOException {
         builder.startObject(TermsQueryParser.NAME);
@@ -140,6 +148,10 @@ public void doXContent(XContentBuilder builder, Params params) throws IOExceptio
             builder.field("execution", execution);
         }
 
+        if (boost != -1) {
+            builder.field("boost", boost);
+        }
+
         if (queryName != null) {
             builder.field("_name", queryName);
         }
