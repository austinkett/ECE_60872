diff --git a/rest-api-spec/src/main/resources/rest-api-spec/test/indices.get_mapping/30_missing_index.yml b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.get_mapping/30_missing_index.yml
index cf4e5b56e786..4d3abb292f46 100644
--- a/rest-api-spec/src/main/resources/rest-api-spec/test/indices.get_mapping/30_missing_index.yml
+++ b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.get_mapping/30_missing_index.yml
@@ -13,3 +13,24 @@
       indices.get_mapping:
         index: test_index
 
+---
+"Index missing, ignore_unavailable=true":
+  - skip:
+      version: " - 6.99.99"
+      reason: ignore_unavailable was ignored in previous versions
+  - do:
+      indices.get_mapping:
+        index: test_index
+        ignore_unavailable: true
+
+  - match: { '':  {} }
+
+---
+"Index missing, ignore_unavailable=true, allow_no_indices=false":
+  - do:
+      catch: missing
+      indices.get_mapping:
+        index: test_index
+        ignore_unavailable: true
+        allow_no_indices: false
+
diff --git a/rest-api-spec/src/main/resources/rest-api-spec/test/indices.get_mapping/50_wildcard_expansion.yml b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.get_mapping/50_wildcard_expansion.yml
index a0552f395edb..d1a95b269074 100644
--- a/rest-api-spec/src/main/resources/rest-api-spec/test/indices.get_mapping/50_wildcard_expansion.yml
+++ b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.get_mapping/50_wildcard_expansion.yml
@@ -94,12 +94,26 @@ setup:
 
 ---
 "Get test-* with wildcard_expansion=none":
+ - skip:
+    version: " - 6.99.99"
+    reason: allow_no_indices (defaults to true) was ignored in previous versions
  - do:
-    catch: missing
     indices.get_mapping:
         index: test-x*
         expand_wildcards: none
 
+ - match: { '':  {} }
+---
+"Get test-* with wildcard_expansion=none allow_no_indices=false":
+ - skip:
+    version: " - 6.99.99"
+    reason: allow_no_indices was ignored in previous versions
+ - do:
+    catch: missing
+    indices.get_mapping:
+        index: test-x*
+        expand_wildcards: none
+        allow_no_indices: false
 ---
 "Get test-* with wildcard_expansion=open,closed":
 
diff --git a/server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetMappingAction.java b/server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetMappingAction.java
index 08f8449b7017..f5d99bbb46ca 100644
--- a/server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetMappingAction.java
+++ b/server/src/main/java/org/elasticsearch/rest/action/admin/indices/RestGetMappingAction.java
@@ -32,7 +32,6 @@
 import org.elasticsearch.common.util.set.Sets;
 import org.elasticsearch.common.xcontent.ToXContent;
 import org.elasticsearch.common.xcontent.XContentBuilder;
-import org.elasticsearch.index.IndexNotFoundException;
 import org.elasticsearch.indices.TypeMissingException;
 import org.elasticsearch.rest.BaseRestHandler;
 import org.elasticsearch.rest.BytesRestResponse;
@@ -89,14 +88,9 @@ public RestChannelConsumer prepareRequest(final RestRequest request, final NodeC
             @Override
             public RestResponse buildResponse(final GetMappingsResponse response, final XContentBuilder builder) throws Exception {
                 final ImmutableOpenMap<String, ImmutableOpenMap<String, MappingMetaData>> mappingsByIndex = response.getMappings();
-                if (mappingsByIndex.isEmpty() && (indices.length != 0 || types.length != 0)) {
-                    if (indices.length != 0 && types.length == 0) {
-                        builder.close();
-                        return new BytesRestResponse(channel, new IndexNotFoundException(String.join(",", indices)));
-                    } else {
-                        builder.close();
-                        return new BytesRestResponse(channel, new TypeMissingException("_all", String.join(",", types)));
-                    }
+                if (mappingsByIndex.isEmpty() && types.length != 0) {
+                    builder.close();
+                    return new BytesRestResponse(channel, new TypeMissingException("_all", String.join(",", types)));
                 }
 
                 final Set<String> typeNames = new HashSet<>();
