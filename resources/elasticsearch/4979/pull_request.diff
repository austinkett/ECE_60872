diff --git a/src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java b/src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java
index fb2fbc412166..8060f42cca78 100644
--- a/src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java
+++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenConstantScoreQuery.java
@@ -96,6 +96,7 @@ public Weight createWeight(IndexSearcher searcher) throws IOException {
             childQuery = rewrittenChildQuery;
         }
         IndexSearcher indexSearcher = new IndexSearcher(searcher.getIndexReader());
+        indexSearcher.setSimilarity(searcher.getSimilarity());
         indexSearcher.search(childQuery, collector);
 
         int remaining = collectedUids.v().size();
diff --git a/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
index 4cfd77a88da2..b9639661a78c 100644
--- a/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
+++ b/src/main/java/org/elasticsearch/index/search/child/ChildrenQuery.java
@@ -154,6 +154,7 @@ public Weight createWeight(IndexSearcher searcher) throws IOException {
             childQuery = rewrittenChildQuery;
         }
         IndexSearcher indexSearcher = new IndexSearcher(searcher.getIndexReader());
+        indexSearcher.setSimilarity(searcher.getSimilarity());
         indexSearcher.search(childQuery, collector);
 
         int size = uidToScore.v().size();
diff --git a/src/main/java/org/elasticsearch/index/search/child/DeleteByQueryWrappingFilter.java b/src/main/java/org/elasticsearch/index/search/child/DeleteByQueryWrappingFilter.java
index 7f1f1d849da3..647faa903058 100644
--- a/src/main/java/org/elasticsearch/index/search/child/DeleteByQueryWrappingFilter.java
+++ b/src/main/java/org/elasticsearch/index/search/child/DeleteByQueryWrappingFilter.java
@@ -23,6 +23,7 @@
 import org.apache.lucene.index.IndexReader;
 import org.apache.lucene.index.MultiReader;
 import org.apache.lucene.search.*;
+import org.apache.lucene.search.similarities.Similarity;
 import org.apache.lucene.util.Bits;
 import org.elasticsearch.search.internal.SearchContext;
 
@@ -66,7 +67,9 @@ public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits accept
             try {
                 if (!contains(indexReader, context)) {
                     multiReader = new MultiReader(new IndexReader[]{indexReader, context.reader()}, false);
+                    Similarity similarity = searcher.getSimilarity();
                     searcher = new IndexSearcher(new MultiReader(indexReader, context.reader()));
+                    searcher.setSimilarity(similarity);
                 }
                 weight = searcher.createNormalizedWeight(query);
             } finally {
@@ -79,7 +82,9 @@ public DocIdSet getDocIdSet(final AtomicReaderContext context, final Bits accept
             if (!contains(indexReader, context)) {
                 IndexReader multiReader = new MultiReader(new IndexReader[]{indexReader, context.reader()}, false);
                 try {
+                    Similarity similarity = searcher.getSimilarity();
                     searcher = new IndexSearcher(multiReader);
+                    searcher.setSimilarity(similarity);
                     weight = searcher.createNormalizedWeight(query);
                 } finally {
                     multiReader.close();
diff --git a/src/main/java/org/elasticsearch/index/search/child/ParentConstantScoreQuery.java b/src/main/java/org/elasticsearch/index/search/child/ParentConstantScoreQuery.java
index 4faf34481897..a42a89223253 100644
--- a/src/main/java/org/elasticsearch/index/search/child/ParentConstantScoreQuery.java
+++ b/src/main/java/org/elasticsearch/index/search/child/ParentConstantScoreQuery.java
@@ -88,6 +88,7 @@ public Weight createWeight(IndexSearcher searcher) throws IOException {
             parentQuery = rewrittenParentQuery = originalParentQuery.rewrite(searcher.getIndexReader());
         }
         IndexSearcher indexSearcher = new IndexSearcher(searcher.getIndexReader());
+        indexSearcher.setSimilarity(searcher.getSimilarity());
         indexSearcher.search(parentQuery, collector);
 
         if (parents.v().isEmpty()) {
diff --git a/src/main/java/org/elasticsearch/index/search/child/ParentQuery.java b/src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
index f417cda68a1b..cff3849d4d36 100644
--- a/src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
+++ b/src/main/java/org/elasticsearch/index/search/child/ParentQuery.java
@@ -126,6 +126,7 @@ public Weight createWeight(IndexSearcher searcher) throws IOException {
             parentQuery = rewrittenParentQuery;
         }
         IndexSearcher indexSearcher = new IndexSearcher(searcher.getIndexReader());
+        indexSearcher.setSimilarity(searcher.getSimilarity());
         indexSearcher.search(parentQuery, collector);
 
         if (uidToScore.v().isEmpty()) {
diff --git a/src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java b/src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java
index bf38dd4bbe44..447ae6917250 100644
--- a/src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java
+++ b/src/main/java/org/elasticsearch/index/search/child/TopChildrenQuery.java
@@ -125,6 +125,7 @@ public Weight createWeight(IndexSearcher searcher) throws IOException {
         }
 
         IndexSearcher indexSearcher = new IndexSearcher(searcher.getIndexReader());
+        indexSearcher.setSimilarity(searcher.getSimilarity());
         while (true) {
             parentDocs.v().clear();
             TopDocs topChildDocs = indexSearcher.search(childQuery, numChildDocs);
