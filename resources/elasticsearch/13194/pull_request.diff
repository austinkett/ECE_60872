diff --git a/core/src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java b/core/src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java
index 7a349cfbbb92..116457b837bd 100644
--- a/core/src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java
+++ b/core/src/main/java/org/elasticsearch/search/internal/InternalSearchHit.java
@@ -23,6 +23,7 @@
 import org.apache.lucene.search.Explanation;
 import org.apache.lucene.util.BytesRef;
 import org.elasticsearch.ElasticsearchParseException;
+import org.elasticsearch.cluster.metadata.MetaData;
 import org.elasticsearch.common.Nullable;
 import org.elasticsearch.common.Strings;
 import org.elasticsearch.common.bytes.BytesArray;
@@ -470,7 +471,16 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws
             builder.field(Fields._SCORE, score);
         }
         for (SearchHitField field : metaFields) {
-            builder.field(field.name(), field.value());
+            // "_all" should be treated as an ordinary field, issue 13178
+            if (field.name().equals(MetaData.ALL)){
+                builder.startArray(field.name());
+                for (Object value : field.getValues()) {
+                    builder.value(value);
+                }
+                builder.endArray();
+            }else {
+                builder.field(field.name(), field.value());
+            }
         }
         if (source != null) {
             XContentHelper.writeRawField("_source", source, builder, params);
diff --git a/core/src/test/java/org/elasticsearch/search/fields/SearchFieldsIT.java b/core/src/test/java/org/elasticsearch/search/fields/SearchFieldsIT.java
index 107534765b6e..b94d8ab8f445 100644
--- a/core/src/test/java/org/elasticsearch/search/fields/SearchFieldsIT.java
+++ b/core/src/test/java/org/elasticsearch/search/fields/SearchFieldsIT.java
@@ -33,6 +33,8 @@
 import org.elasticsearch.common.collect.MapBuilder;
 import org.elasticsearch.common.joda.Joda;
 import org.elasticsearch.common.settings.Settings;
+import org.elasticsearch.common.xcontent.ToXContent;
+import org.elasticsearch.common.xcontent.XContentBuilder;
 import org.elasticsearch.common.xcontent.XContentFactory;
 import org.elasticsearch.index.mapper.internal.TimestampFieldMapper;
 import org.elasticsearch.rest.RestStatus;
@@ -670,4 +672,41 @@ public void testLoadMetadata() throws Exception {
         assertThat(fields.get("_parent").isMetadataField(), equalTo(true));
         assertThat(fields.get("_parent").getValue().toString(), equalTo("parent_1"));
     }
+
+    // issue 13178
+    public void testMetaAllFieldPulledFromFieldData() throws Exception {
+        createIndex("test");
+        client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForYellowStatus().execute().actionGet();
+
+        String mapping = XContentFactory.jsonBuilder().startObject().startObject("type1").startObject("properties")
+                .startObject("_all").field("enabled", true).endObject()
+                .startObject("_source").field("enabled", false).endObject()
+                .startObject("string_field_1").field("type", "string").endObject()
+                .startObject("string_field_2").field("type", "string").endObject()
+                .startObject("string_field_3").field("type", "string").endObject()
+                .endObject().endObject().endObject().string();
+
+        client().admin().indices().preparePutMapping().setType("type1").setSource(mapping).execute().actionGet();
+
+        client().prepareIndex("test", "type1", "1").setSource(jsonBuilder().startObject()
+                .field("string_field1", "value1")
+                .field("string_field2", "value2")
+                .field("string_field3", "value3")
+                .endObject()).execute().actionGet();
+
+        client().admin().indices().prepareRefresh().execute().actionGet();
+
+        SearchRequestBuilder builder = client().prepareSearch().setQuery(matchAllQuery())
+                .addFieldDataField("_all");
+        SearchResponse searchResponse = builder.execute().actionGet();
+
+        assertThat(searchResponse.getHits().getAt(0).fields().get("_all").values().size(), equalTo(3));
+
+        XContentBuilder xContentBuilder = XContentFactory.jsonBuilder();
+        xContentBuilder.startObject();
+        searchResponse.getHits().toXContent(xContentBuilder, ToXContent.EMPTY_PARAMS);
+        xContentBuilder.endObject();
+        String expectedSubSequence = "\"_all\":[\"value1\",\"value2\",\"value3\"]";
+        assertTrue(xContentBuilder.string().contains(expectedSubSequence));
+    }
 }
