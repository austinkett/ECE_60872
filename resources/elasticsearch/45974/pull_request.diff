diff --git a/x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/search/ShapeQueryTests.java b/x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/search/ShapeQueryTests.java
index 7a9476aa5221..937790b56abe 100644
--- a/x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/search/ShapeQueryTests.java
+++ b/x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/search/ShapeQueryTests.java
@@ -62,6 +62,8 @@ public void setUp() throws Exception {
 
         // index random shapes
         numDocs = randomIntBetween(25, 50);
+        // reset query geometry to make sure we pick one from the indexed shapes
+        queryGeometry = null;
         Geometry geometry;
         for (int i = 0; i < numDocs; ++i) {
             geometry = ShapeTestUtils.randomGeometry(false);
@@ -77,6 +79,10 @@ public void setUp() throws Exception {
                 client().prepareIndex(IGNORE_MALFORMED_INDEX, FIELD_TYPE).setRefreshPolicy(IMMEDIATE).setSource(geoJson).get();
             } catch (Exception e) {
                 // sometimes GeoTestUtil will create invalid geometry; catch and continue:
+                if (queryGeometry == geometry) {
+                    // reset query geometry as it didn't get indexed
+                    queryGeometry = null;
+                }
                 --i;
                 continue;
             }
@@ -227,7 +233,6 @@ public void testExistsQuery() {
         assertHitCount(result, numDocs);
     }
 
-    @AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/45628")
     public void testFieldAlias() {
         SearchResponse response = client().prepareSearch(INDEX)
             .setQuery(new ShapeQueryBuilder("alias", queryGeometry).relation(ShapeRelation.INTERSECTS))
