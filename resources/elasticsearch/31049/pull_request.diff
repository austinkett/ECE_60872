diff --git a/server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java b/server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java
index de2aee326c7d..9c334f795511 100644
--- a/server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java
+++ b/server/src/main/java/org/elasticsearch/index/mapper/KeywordFieldMapper.java
@@ -198,7 +198,7 @@ public KeywordFieldType() {
         protected KeywordFieldType(KeywordFieldType ref) {
             super(ref);
             this.normalizer = ref.normalizer;
-            this.splitQueriesOnWhitespace = splitQueriesOnWhitespace;
+            this.splitQueriesOnWhitespace = ref.splitQueriesOnWhitespace;
         }
 
         public KeywordFieldType clone() {
diff --git a/server/src/test/java/org/elasticsearch/index/mapper/KeywordFieldTypeTests.java b/server/src/test/java/org/elasticsearch/index/mapper/KeywordFieldTypeTests.java
index 809ceb583100..a291062c7a5b 100644
--- a/server/src/test/java/org/elasticsearch/index/mapper/KeywordFieldTypeTests.java
+++ b/server/src/test/java/org/elasticsearch/index/mapper/KeywordFieldTypeTests.java
@@ -52,8 +52,15 @@
     public void setupProperties() {
         addModifier(new Modifier("normalizer", false) {
             @Override
-            public void modify(MappedFieldType ft) {
-                ((KeywordFieldType) ft).setNormalizer(Lucene.KEYWORD_ANALYZER);
+            public void modify(MappedFieldType type) {
+                ((KeywordFieldType) type).setNormalizer(Lucene.KEYWORD_ANALYZER);
+            }
+        });
+        addModifier(new Modifier("split_queries_on_whitespace", true) {
+            @Override
+            public void modify(MappedFieldType type) {
+                KeywordFieldType keywordType = (KeywordFieldType) type;
+                keywordType.setSplitQueriesOnWhitespace(!keywordType.splitQueriesOnWhitespace());
             }
         });
     }
