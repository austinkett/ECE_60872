diff --git a/docs/reference/docs/update.asciidoc b/docs/reference/docs/update.asciidoc
index fb8fc3e83934..4236e06754ad 100644
--- a/docs/reference/docs/update.asciidoc
+++ b/docs/reference/docs/update.asciidoc
@@ -197,8 +197,15 @@ The update operation supports similar parameters as the index API,
 including:
 
 [horizontal]
-`routing`::     Sets the routing that will be used to route the 
-                document to the relevant shard.
+`routing`::     Routing is used to route the update request to the right shard
+                and sets the routing for the upsert request if the document being
+                updated doesn't exist. Can't be used to update the routing of an
+                existing document.
+
+`parent`::      Parent is used to route the update request to the right shard
+                and sets the parent for the upsert request if the document being
+                updated doesn't exist. Can't be used to update the `parent` of an
+                existing document.
 
 `timeout`::     Timeout waiting for a shard to become available.
 
diff --git a/docs/reference/migration/migrate_2_0.asciidoc b/docs/reference/migration/migrate_2_0.asciidoc
index 5c76c79b8b11..c8d2b2ae920e 100644
--- a/docs/reference/migration/migrate_2_0.asciidoc
+++ b/docs/reference/migration/migrate_2_0.asciidoc
@@ -153,7 +153,7 @@ The `parent` parameter has been removed from the update request. Before 2.x it j
 `routing` setting should be used instead. The `parent` setting was confusing, because it had the impression that the parent
 a child documents points to can be changed but this is not true.
 
-=== Delete by query
+==== Delete by query
 
 The meaning of the `_shards` headers in the delete by query response has changed. Before version 2.0 the `total`,
 `successful` and `failed` fields in the header are based on the number of primary shards. The failures on replica
diff --git a/rest-api-spec/api/update.json b/rest-api-spec/api/update.json
index 34d117a30aad..20fc3524283e 100644
--- a/rest-api-spec/api/update.json
+++ b/rest-api-spec/api/update.json
@@ -36,6 +36,10 @@
           "type": "string",
           "description": "The script language (default: groovy)"
         },
+        "parent": {
+          "type": "string",
+          "description": "ID of the parent document. Is is only used for routing and when for the upsert request"
+        },
         "refresh": {
           "type": "boolean",
           "description": "Refresh the index after performing the operation"
diff --git a/rest-api-spec/test/update/50_parent.yaml b/rest-api-spec/test/update/50_parent.yaml
index 4b0bffd0ca83..3d15ea9f2a89 100644
--- a/rest-api-spec/test/update/50_parent.yaml
+++ b/rest-api-spec/test/update/50_parent.yaml
@@ -29,10 +29,10 @@ setup:
           index:   test_1
           type:    test
           id:      1
-          routing:  5
+          parent:  5
           body:
             doc:        { foo: baz }
-            upsert:     { foo: bar, _parent: 5 }
+            upsert:     { foo: bar }
 
  - do:
       get:
@@ -50,7 +50,7 @@ setup:
           index:   test_1
           type:    test
           id:      1
-          routing:  5
+          parent:  5
           fields:  foo
           body:
             doc:        { foo: baz }
diff --git a/rest-api-spec/test/update/55_parent_with_routing.yaml b/rest-api-spec/test/update/55_parent_with_routing.yaml
index 85d59599bc38..51dd91af3baa 100644
--- a/rest-api-spec/test/update/55_parent_with_routing.yaml
+++ b/rest-api-spec/test/update/55_parent_with_routing.yaml
@@ -21,10 +21,11 @@
           index:   test_1
           type:    test
           id:      1
+          parent:  5
           routing: 4
           body:
             doc:        { foo: baz }
-            upsert:     { foo: bar, _parent: 5 }
+            upsert:     { foo: bar }
 
  - do:
       get:
@@ -44,7 +45,7 @@
           index:   test_1
           type:    test
           id:      1
-          routing:  5
+          parent:  5
           body:
             doc:        { foo: baz }
 
@@ -53,6 +54,7 @@
           index:   test_1
           type:    test
           id:      1
+          parent:  5
           routing: 4
           fields:  foo
           body:
diff --git a/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java b/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
index cef4ca78f62b..a1b3a09508cc 100644
--- a/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
+++ b/src/main/java/org/elasticsearch/action/bulk/BulkRequest.java
@@ -351,13 +351,14 @@ public BulkRequest add(BytesReference data, boolean contentUnsafe, @Nullable Str
                                 .create(true)
                                 .source(data.slice(from, nextMarker - from), contentUnsafe), payload);
                     } else if ("update".equals(action)) {
-                        UpdateRequest updateRequest = new UpdateRequest(index, type, id).routing(routing).retryOnConflict(retryOnConflict)
+                        UpdateRequest updateRequest = new UpdateRequest(index, type, id).routing(routing).parent(parent).retryOnConflict(retryOnConflict)
                                 .version(version).versionType(versionType)
+                                .routing(routing)
+                                .parent(parent)
                                 .source(data.slice(from, nextMarker - from));
 
                         IndexRequest upsertRequest = updateRequest.upsertRequest();
                         if (upsertRequest != null) {
-                            upsertRequest.routing(routing);
                             upsertRequest.timestamp(timestamp);
                             upsertRequest.ttl(ttl);
                             upsertRequest.version(version);
@@ -365,7 +366,6 @@ public BulkRequest add(BytesReference data, boolean contentUnsafe, @Nullable Str
                         }
                         IndexRequest doc = updateRequest.doc();
                         if (doc != null) {
-                            doc.routing(routing);
                             doc.timestamp(timestamp);
                             doc.ttl(ttl);
                             doc.version(version);
diff --git a/src/main/java/org/elasticsearch/action/update/UpdateHelper.java b/src/main/java/org/elasticsearch/action/update/UpdateHelper.java
index 01ba10c566c6..a8e1de53374d 100644
--- a/src/main/java/org/elasticsearch/action/update/UpdateHelper.java
+++ b/src/main/java/org/elasticsearch/action/update/UpdateHelper.java
@@ -118,15 +118,16 @@ public Result prepare(UpdateRequest request, IndexShard indexShard) {
                     update.setGetResult(getResult);
                     return new Result(update, Operation.NONE, upsertDoc, XContentType.JSON);
                 }
-                indexRequest.source((Map)ctx.get("_source"));
+                indexRequest.source((Map) ctx.get("_source"));
             }
 
             indexRequest.index(request.index()).type(request.type()).id(request.id())
                     // it has to be a "create!"
                     .create(true)                    
-                    .routing(request.routing())
                     .ttl(ttl)
                     .refresh(request.refresh())
+                    .routing(request.routing())
+                    .parent(request.parent())
                     .consistencyLevel(request.consistencyLevel());
             indexRequest.operationThreaded(false);
             if (request.versionType() != VersionType.INTERNAL) {
diff --git a/src/main/java/org/elasticsearch/action/update/UpdateRequest.java b/src/main/java/org/elasticsearch/action/update/UpdateRequest.java
index 2d5cab0a9205..c3f03db7944a 100644
--- a/src/main/java/org/elasticsearch/action/update/UpdateRequest.java
+++ b/src/main/java/org/elasticsearch/action/update/UpdateRequest.java
@@ -55,6 +55,9 @@
     @Nullable
     private String routing;
 
+    @Nullable
+    private String parent;
+
     @Nullable
     String script;
     @Nullable
@@ -183,6 +186,21 @@ public String routing() {
         return this.routing;
     }
 
+    /**
+     * The parent id is used for the upsert request and also implicitely sets the routing if not already set.
+     */
+    public UpdateRequest parent(String parent) {
+        this.parent = parent;
+        if (routing == null) {
+            routing = parent;
+        }
+        return this;
+    }
+
+    public String parent() {
+        return parent;
+    }
+
     int shardId() {
         return this.shardId;
     }
@@ -620,6 +638,7 @@ public void readFrom(StreamInput in) throws IOException {
         type = in.readString();
         id = in.readString();
         routing = in.readOptionalString();
+        parent = in.readOptionalString();
         script = in.readOptionalString();
         if(Strings.hasLength(script)) {
             scriptType = ScriptService.ScriptType.readFrom(in);
@@ -657,6 +676,7 @@ public void writeTo(StreamOutput out) throws IOException {
         out.writeString(type);
         out.writeString(id);
         out.writeOptionalString(routing);
+        out.writeOptionalString(parent);
         out.writeOptionalString(script);
         if (Strings.hasLength(script)) {
             ScriptService.ScriptType.writeTo(scriptType, out);
diff --git a/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java
index 281689fcf7b3..c2986673204a 100644
--- a/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java
+++ b/src/main/java/org/elasticsearch/action/update/UpdateRequestBuilder.java
@@ -69,6 +69,11 @@ public UpdateRequestBuilder setRouting(String routing) {
         return this;
     }
 
+    public UpdateRequestBuilder setParent(String parent) {
+        request.parent(parent);
+        return this;
+    }
+
     /**
      * The script to execute. Note, make sure not to send different script each times and instead
      * use script params if possible with the same (automatically compiled) script.
diff --git a/src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java b/src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
index 46a65915aa5f..c884fe4267eb 100644
--- a/src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
+++ b/src/main/java/org/elasticsearch/rest/action/update/RestUpdateAction.java
@@ -57,6 +57,7 @@ public void handleRequest(final RestRequest request, final RestChannel channel,
         UpdateRequest updateRequest = new UpdateRequest(request.param("index"), request.param("type"), request.param("id"));
         updateRequest.listenerThreaded(false);
         updateRequest.routing(request.param("routing"));
+        updateRequest.parent(request.param("parent"));
         updateRequest.timeout(request.paramAsTime("timeout", updateRequest.timeout()));
         updateRequest.refresh(request.paramAsBoolean("refresh", updateRequest.refresh()));
         String consistencyLevel = request.param("consistency");
diff --git a/src/test/java/org/elasticsearch/document/BulkTests.java b/src/test/java/org/elasticsearch/document/BulkTests.java
index 1b26fb111d3d..aa1a63c1be45 100644
--- a/src/test/java/org/elasticsearch/document/BulkTests.java
+++ b/src/test/java/org/elasticsearch/document/BulkTests.java
@@ -427,8 +427,8 @@ public void testBulkUpdateDocAsUpsertWithParent() throws Exception {
         byte[] addParent = new BytesArray("{\"index\" : { \"_index\" : \"test\", \"_type\" : \"parent\", \"_id\" : \"parent1\"}}\n" +
                 "{\"field1\" : \"value1\"}\n").array();
 
-        byte[] addChild = new BytesArray("{ \"update\" : { \"_index\" : \"test\", \"_type\" : \"child\", \"_id\" : \"child1\", \"routing\" : \"parent1\"}}\n" +
-                "{\"doc\" : { \"field1\" : \"value1\", \"_parent\" : \"parent1\"}, \"doc_as_upsert\" : \"true\"}\n").array();
+        byte[] addChild = new BytesArray("{ \"update\" : { \"_index\" : \"test\", \"_type\" : \"child\", \"_id\" : \"child1\", \"parent\" : \"parent1\"}}\n" +
+                "{\"doc\" : { \"field1\" : \"value1\"}, \"doc_as_upsert\" : \"true\"}\n").array();
 
         builder.add(addParent, 0, addParent.length, false);
         builder.add(addChild, 0, addChild.length, false);
@@ -464,8 +464,8 @@ public void testBulkUpdateUpsertWithParent() throws Exception {
         byte[] addParent = new BytesArray("{\"index\" : { \"_index\" : \"test\", \"_type\" : \"parent\", \"_id\" : \"parent1\"}}\n" +
                 "{\"field1\" : \"value1\"}\n").array();
 
-        byte[] addChild = new BytesArray("{\"update\" : { \"_id\" : \"child1\", \"_type\" : \"child\", \"_index\" : \"test\", \"routing\" : \"parent1\"} }\n" +
-                "{ \"script\" : \"ctx._source.field2 = 'value2'\", \"upsert\" : {\"field1\" : \"value1\", \"_parent\" : \"parent1\"}}\n").array();
+        byte[] addChild = new BytesArray("{\"update\" : { \"_id\" : \"child1\", \"_type\" : \"child\", \"_index\" : \"test\", \"parent\" : \"parent1\"} }\n" +
+                "{ \"script\" : \"ctx._source.field2 = 'value2'\", \"upsert\" : {\"field1\" : \"value1\"}}\n").array();
 
         builder.add(addParent, 0, addParent.length, false);
         builder.add(addChild, 0, addChild.length, false);
diff --git a/src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java b/src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
index ce2e12e93765..91ed3d9eda21 100644
--- a/src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
+++ b/src/test/java/org/elasticsearch/search/aggregations/bucket/ChildrenTests.java
@@ -256,7 +256,7 @@ public void testWithDeletes() throws Exception {
 
             String idToUpdate = Integer.toString(randomInt(3));
             UpdateResponse updateResponse = client().prepareUpdate(indexName, "child", idToUpdate)
-                    .setRouting("1")
+                    .setParent("1")
                     .setDoc("count", 1)
                     .get();
             assertThat(updateResponse.getVersion(), greaterThan(1l));
