diff --git a/src/main/java/org/elasticsearch/common/path/PathTrie.java b/src/main/java/org/elasticsearch/common/path/PathTrie.java
index 0cc1d09c997f..0a05b6675729 100644
--- a/src/main/java/org/elasticsearch/common/path/PathTrie.java
+++ b/src/main/java/org/elasticsearch/common/path/PathTrie.java
@@ -24,6 +24,7 @@
 
 import java.util.Map;
 
+import static com.google.common.collect.Maps.newHashMap;
 import static org.elasticsearch.common.collect.MapBuilder.newMapBuilder;
 
 /**
@@ -181,15 +182,26 @@ public T retrieve(String[] path, int index, Map<String, String> params) {
                 return node.value;
             }
 
-            T res = node.retrieve(path, index + 1, params);
+            Map<String, String> nextParams = null;
+            if (params != null) {
+                nextParams = newHashMap();
+            }
+            T res = node.retrieve(path, index + 1, nextParams);
             if (res == null && !usedWildcard) {
                 node = children.get(wildcard);
+                if (nextParams != null) {
+                    nextParams.clear();
+                }
                 if (node != null) {
                     put(params, node, token);
-                    res = node.retrieve(path, index + 1, params);
+                    res = node.retrieve(path, index + 1, nextParams);
                 }
             }
 
+            if (res != null && nextParams != null) {
+                params.putAll(nextParams);
+            }
+
             return res;
         }
 
diff --git a/src/test/java/org/elasticsearch/common/path/PathTrieTests.java b/src/test/java/org/elasticsearch/common/path/PathTrieTests.java
index 3151352c1eea..254eda037811 100644
--- a/src/test/java/org/elasticsearch/common/path/PathTrieTests.java
+++ b/src/test/java/org/elasticsearch/common/path/PathTrieTests.java
@@ -26,6 +26,7 @@
 
 import static com.google.common.collect.Maps.newHashMap;
 import static org.hamcrest.Matchers.equalTo;
+import static org.hamcrest.Matchers.is;
 import static org.hamcrest.Matchers.nullValue;
 
 /**
@@ -161,4 +162,16 @@ public void testNamedWildcardAndLookupWithWildcard() {
         assertThat(trie.retrieve("a/*/_endpoint", params), equalTo("test5"));
         assertThat(params.get("test"), equalTo("*"));
     }
+
+    @Test
+    public void testNamedWildcardWithParams() {
+        PathTrie<String> trie = new PathTrie<>();
+        trie.insert("/a/{x}/b", "test1");
+        trie.insert("/{y}/c/d", "test2");
+
+        Map<String, String> params = newHashMap();
+        assertThat(trie.retrieve("/a/c/d", params), equalTo("test2"));
+        assertThat(params.size(), is(1));
+        assertThat(params.get("y"), equalTo("a"));
+    }
 }
