diff --git a/src/main/java/org/elasticsearch/index/search/MatchQuery.java b/src/main/java/org/elasticsearch/index/search/MatchQuery.java
index 2ab706671d14..1869a3776ff1 100644
--- a/src/main/java/org/elasticsearch/index/search/MatchQuery.java
+++ b/src/main/java/org/elasticsearch/index/search/MatchQuery.java
@@ -261,6 +261,7 @@ public Query createPhrasePrefixQuery(String field, String queryText, int phraseS
                 for (int i = 0; i < terms.length; i++) {
                     prefixQuery.add(new Term[] {terms[i]}, positions[i]);
                 }
+                prefixQuery.setSlop(phraseSlop);
                 return prefixQuery;
             } else if (query instanceof MultiPhraseQuery) {
                 MultiPhraseQuery pq = (MultiPhraseQuery)query;
@@ -271,6 +272,7 @@ public Query createPhrasePrefixQuery(String field, String queryText, int phraseS
                 for (int i = 0; i < terms.size(); i++) {
                     prefixQuery.add(terms.get(i), positions[i]);
                 }
+                prefixQuery.setSlop(phraseSlop);
                 return prefixQuery;
             }
             return query;
diff --git a/src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java b/src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
index 8bdc1e2c5e08..7e0f202340ef 100644
--- a/src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
+++ b/src/test/java/org/elasticsearch/search/query/SimpleQueryTests.java
@@ -2292,4 +2292,14 @@ public void testNGramCopyField() {
         assertHitCount(searchResponse, 1l);
     }
 
+    public void testMatchPhrasePrefixQuery() {
+        createIndex("test1");
+        client().prepareIndex("test1", "type1", "1").setSource("field", "Johnnie Walker Black Label").get();
+        refresh();
+
+        SearchResponse searchResponse = client().prepareSearch().setQuery(matchQuery("field", "Johnnie la").slop(between(2,5)).type(Type.PHRASE_PREFIX)).get();
+        assertHitCount(searchResponse, 1l);
+        assertSearchHits(searchResponse, "1");
+    }
+
 }
