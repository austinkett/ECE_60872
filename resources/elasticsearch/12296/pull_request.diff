diff --git a/core/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java b/core/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java
index 683ffc58f0f1..17c4284f714c 100644
--- a/core/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java
+++ b/core/src/main/java/org/elasticsearch/script/groovy/GroovyScriptEngineService.java
@@ -19,6 +19,8 @@
 
 package org.elasticsearch.script.groovy;
 
+import com.google.common.base.Charsets;
+import com.google.common.hash.Hashing;
 import groovy.lang.Binding;
 import groovy.lang.GroovyClassLoader;
 import groovy.lang.Script;
@@ -49,7 +51,6 @@
 import java.math.BigDecimal;
 import java.util.HashMap;
 import java.util.Map;
-import java.util.concurrent.atomic.AtomicLong;
 
 /**
  * Provides the infrastructure for Groovy as a scripting language for Elasticsearch
@@ -57,7 +58,6 @@
 public class GroovyScriptEngineService extends AbstractComponent implements ScriptEngineService {
 
     public static final String NAME = "groovy";
-    private final AtomicLong counter = new AtomicLong();
     private final GroovyClassLoader loader;
 
     @Inject
@@ -111,7 +111,7 @@ public boolean sandboxed() {
     @Override
     public Object compile(String script) {
         try {
-            return loader.parseClass(script, generateScriptName());
+            return loader.parseClass(script, Hashing.sha1().hashString(script, Charsets.UTF_8).toString());
         } catch (Throwable e) {
             if (logger.isTraceEnabled()) {
                 logger.trace("exception compiling Groovy script:", e);
@@ -190,10 +190,6 @@ public Object unwrap(Object value) {
         return value;
     }
 
-    private String generateScriptName() {
-        return "Script" + counter.incrementAndGet() + ".groovy";
-    }
-
     public static final class GroovyScript implements ExecutableScript, LeafSearchScript {
 
         private final CompiledScript compiledScript;
