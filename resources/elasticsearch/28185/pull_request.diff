diff --git a/server/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java b/server/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java
index 99bf9be683ee..80d8277f4cab 100644
--- a/server/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java
+++ b/server/src/main/java/org/elasticsearch/search/aggregations/AggregationBuilder.java
@@ -101,9 +101,7 @@ public final AggregationBuilder rewrite(QueryRewriteContext context) throws IOEx
         if (rewritten == this) {
             return rewritten;
         }
-        if (getMetaData() != null && rewritten.getMetaData() == null) {
-            rewritten.setMetaData(getMetaData());
-        }
+        rewritten.setMetaData(getMetaData());
         AggregatorFactories.Builder rewrittenSubAggs = factoriesBuilder.rewrite(context);
         rewritten.subAggregations(rewrittenSubAggs);
         return rewritten;
diff --git a/server/src/test/java/org/elasticsearch/search/aggregations/FiltersAggsRewriteIT.java b/server/src/test/java/org/elasticsearch/search/aggregations/FiltersAggsRewriteIT.java
index bb4c3a2a5eb0..ce5e4a694f27 100644
--- a/server/src/test/java/org/elasticsearch/search/aggregations/FiltersAggsRewriteIT.java
+++ b/server/src/test/java/org/elasticsearch/search/aggregations/FiltersAggsRewriteIT.java
@@ -32,6 +32,8 @@
 import org.elasticsearch.test.ESSingleNodeTestCase;
 
 import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
 
 public class FiltersAggsRewriteIT extends ESSingleNodeTestCase {
 
@@ -58,10 +60,14 @@ public void testWrapperQueryIsRewritten() throws IOException {
         }
         FiltersAggregationBuilder builder = new FiltersAggregationBuilder("titles", new FiltersAggregator.KeyedFilter("titleterms",
                 new WrapperQueryBuilder(bytesReference)));
+        Map<String, Object> metadata = new HashMap<>();
+        metadata.put(randomAlphaOfLengthBetween(1, 20), randomAlphaOfLengthBetween(1, 20));
+        builder.setMetaData(metadata);
         SearchResponse searchResponse = client().prepareSearch("test").setSize(0).addAggregation(builder).get();
         assertEquals(3, searchResponse.getHits().getTotalHits());
         InternalFilters filters = searchResponse.getAggregations().get("titles");
         assertEquals(1, filters.getBuckets().size());
         assertEquals(2, filters.getBuckets().get(0).getDocCount());
+        assertEquals(metadata, filters.getMetaData());
     }
 }
diff --git a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersTests.java b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersTests.java
index 7e63bbb6f385..e0cd490134f1 100644
--- a/server/src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersTests.java
+++ b/server/src/test/java/org/elasticsearch/search/aggregations/bucket/FiltersTests.java
@@ -35,6 +35,7 @@
 import org.elasticsearch.search.aggregations.bucket.filter.FiltersAggregator.KeyedFilter;
 
 import java.io.IOException;
+import java.util.Collections;
 
 import static org.hamcrest.Matchers.instanceOf;
 
@@ -123,6 +124,7 @@ public void testOtherBucket() throws IOException {
     public void testRewrite() throws IOException {
         // test non-keyed filter that doesn't rewrite
         AggregationBuilder original = new FiltersAggregationBuilder("my-agg", new MatchAllQueryBuilder());
+        original.setMetaData(Collections.singletonMap(randomAlphaOfLengthBetween(1, 20), randomAlphaOfLengthBetween(1, 20)));
         AggregationBuilder rewritten = original.rewrite(new QueryRewriteContext(xContentRegistry(), null, null, () -> 0L));
         assertSame(original, rewritten);
 
