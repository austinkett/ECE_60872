diff --git a/server/src/main/java/org/elasticsearch/transport/RemoteClusterConnection.java b/server/src/main/java/org/elasticsearch/transport/RemoteClusterConnection.java
index 73d9d09473e5..7574258c75b7 100644
--- a/server/src/main/java/org/elasticsearch/transport/RemoteClusterConnection.java
+++ b/server/src/main/java/org/elasticsearch/transport/RemoteClusterConnection.java
@@ -368,8 +368,10 @@ void connect(ActionListener<Void> connectListener) {
             boolean runConnect = false;
             final ActionListener<Void> listener =
                 ContextPreservingActionListener.wrapPreservingContext(connectListener, threadPool.getThreadContext());
+            boolean closed;
             synchronized (mutex) {
-                if (closed.get()) {
+                closed = this.closed.get();
+                if (closed) {
                     assert listeners.isEmpty();
                 } else {
                     if (listeners.size() >= MAX_LISTENERS) {
@@ -382,7 +384,7 @@ void connect(ActionListener<Void> connectListener) {
                     runConnect = listeners.size() == 1;
                 }
             }
-            if (closed.get()) {
+            if (closed) {
                 connectListener.onFailure(new AlreadyClosedException("connect handler is already closed"));
                 return;
             }
diff --git a/server/src/test/java/org/elasticsearch/transport/RemoteClusterConnectionTests.java b/server/src/test/java/org/elasticsearch/transport/RemoteClusterConnectionTests.java
index 08d162ceaf2e..2d0e1bb1aa2c 100644
--- a/server/src/test/java/org/elasticsearch/transport/RemoteClusterConnectionTests.java
+++ b/server/src/test/java/org/elasticsearch/transport/RemoteClusterConnectionTests.java
@@ -637,7 +637,6 @@ public void run() {
         }
     }
 
-    @AwaitsFix(bugUrl = "https://github.com/elastic/elasticsearch/issues/45845")
     public void testCloseWhileConcurrentlyConnecting() throws IOException, InterruptedException, BrokenBarrierException {
         List<DiscoveryNode> knownNodes = new CopyOnWriteArrayList<>();
         try (MockTransportService seedTransport = startTransport("seed_node", knownNodes, Version.CURRENT);
