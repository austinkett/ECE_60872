diff --git a/server/src/main/java/org/elasticsearch/action/search/ExpandSearchPhase.java b/server/src/main/java/org/elasticsearch/action/search/ExpandSearchPhase.java
index 10a85b723166..afc81b21da4d 100644
--- a/server/src/main/java/org/elasticsearch/action/search/ExpandSearchPhase.java
+++ b/server/src/main/java/org/elasticsearch/action/search/ExpandSearchPhase.java
@@ -129,7 +129,8 @@ private SearchSourceBuilder buildExpandSearchSourceBuilder(InnerHitBuilder optio
             options.getSorts().forEach(groupSource::sort);
         }
         if (options.getFetchSourceContext() != null) {
-            if (options.getFetchSourceContext().includes() == null && options.getFetchSourceContext().excludes() == null) {
+            if (options.getFetchSourceContext().includes().length == 0 &&
+                    options.getFetchSourceContext().excludes().length == 0) {
                 groupSource.fetchSource(options.getFetchSourceContext().fetchSource());
             } else {
                 groupSource.fetchSource(options.getFetchSourceContext().includes(),
diff --git a/server/src/test/java/org/elasticsearch/action/search/ExpandSearchPhaseTests.java b/server/src/test/java/org/elasticsearch/action/search/ExpandSearchPhaseTests.java
index 328950e4f356..d9de69a1c6c6 100644
--- a/server/src/test/java/org/elasticsearch/action/search/ExpandSearchPhaseTests.java
+++ b/server/src/test/java/org/elasticsearch/action/search/ExpandSearchPhaseTests.java
@@ -252,6 +252,9 @@ void sendExecuteMultiSearch(MultiSearchRequest request, SearchTask task, ActionL
                 assertTrue(request.requests().stream().allMatch((r) -> version == r.source().version()));
                 assertTrue(request.requests().stream().allMatch((r) -> seqNoAndTerm == r.source().seqNoAndPrimaryTerm()));
                 assertTrue(request.requests().stream().allMatch((r) -> postFilter.equals(r.source().postFilter())));
+                assertTrue(request.requests().stream().allMatch((r) -> r.source().fetchSource().fetchSource() == false));
+                assertTrue(request.requests().stream().allMatch((r) -> r.source().fetchSource().includes().length == 0));
+                assertTrue(request.requests().stream().allMatch((r) -> r.source().fetchSource().excludes().length == 0));
             }
         };
         mockSearchPhaseContext.getRequest().source(new SearchSourceBuilder()
@@ -259,6 +262,7 @@ void sendExecuteMultiSearch(MultiSearchRequest request, SearchTask task, ActionL
                 new CollapseBuilder("someField")
                     .setInnerHits(new InnerHitBuilder().setName("foobarbaz").setVersion(version).setSeqNoAndPrimaryTerm(seqNoAndTerm))
             )
+            .fetchSource(false)
             .postFilter(QueryBuilders.existsQuery("foo")))
             .preference("foobar")
             .routing("baz");
