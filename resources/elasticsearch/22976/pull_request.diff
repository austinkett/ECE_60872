diff --git a/modules/reindex/src/main/java/org/elasticsearch/index/reindex/TransportReindexAction.java b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/TransportReindexAction.java
index deee6ae1160e..c6278b76acdc 100644
--- a/modules/reindex/src/main/java/org/elasticsearch/index/reindex/TransportReindexAction.java
+++ b/modules/reindex/src/main/java/org/elasticsearch/index/reindex/TransportReindexAction.java
@@ -204,7 +204,7 @@ static RestClient buildRestClient(RemoteInfo remoteInfo, long taskId, List<Threa
         Header[] clientHeaders = new Header[remoteInfo.getHeaders().size()];
         int i = 0;
         for (Map.Entry<String, String> header : remoteInfo.getHeaders().entrySet()) {
-            clientHeaders[i] = new BasicHeader(header.getKey(), header.getValue());
+            clientHeaders[i++] = new BasicHeader(header.getKey(), header.getValue());
         }
         return RestClient.builder(new HttpHost(remoteInfo.getHost(), remoteInfo.getPort(), remoteInfo.getScheme()))
                 .setDefaultHeaders(clientHeaders)
diff --git a/modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexFromRemoteBuildRestClientTests.java b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexFromRemoteBuildRestClientTests.java
index 7f8a87c2dad9..2dc50c33a7f6 100644
--- a/modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexFromRemoteBuildRestClientTests.java
+++ b/modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexFromRemoteBuildRestClientTests.java
@@ -49,4 +49,28 @@ public void testBuildRestClient() throws Exception {
             client.close();
         }
     }
+    
+    public void testBuildRestClientWithHeader() throws Exception {
+        Map<String, String> headers = new HashMap<>();
+        int headerNumbers = randomIntBetween(2, 5);
+        for (int i = 0; i < headerNumbers; i++) {
+            headers.put("header" + i, Integer.toString(i));
+        }
+        assertEquals(headerNumbers, headers.size());
+        RemoteInfo remoteInfo = new RemoteInfo("https", "localhost", 9200, new BytesArray("ignored"), null, null, headers,
+            RemoteInfo.DEFAULT_SOCKET_TIMEOUT, RemoteInfo.DEFAULT_CONNECT_TIMEOUT);
+        long taskId = randomLong();
+        List<Thread> threads = synchronizedList(new ArrayList<>());
+        RestClient client = TransportReindexAction.buildRestClient(remoteInfo, taskId, threads);
+        try {
+            assertBusy(() -> assertThat(threads, hasSize(2)));
+            int i = 0;
+            for (Thread thread : threads) {
+                assertEquals("es-client-" + taskId + "-" + i, thread.getName());
+                i++;
+            }
+        } finally {
+            client.close();
+        }
+    }
 }
