diff --git a/docs/CHANGELOG.asciidoc b/docs/CHANGELOG.asciidoc
index 5f7ed63cdd8a..f606ae76aa07 100644
--- a/docs/CHANGELOG.asciidoc
+++ b/docs/CHANGELOG.asciidoc
@@ -115,6 +115,9 @@ Rollup::
 * Validate timezone in range queries to ensure they match the selected job when
 searching ({pull}30338[#30338])
 
+SQL::
+* Fix parsing of Dates containing milliseconds ({pull}30419[#30419])
+
 [float]
 === Regressions
 Fail snapshot operations early when creating or deleting a snapshot on a repository that has been
@@ -201,6 +204,8 @@ Rollup::
 * Validate timezone in range queries to ensure they match the selected job when
 searching ({pull}30338[#30338])
 
+SQL::
+* Fix parsing of Dates containing milliseconds ({pull}30419[#30419])
 
 Allocation::
 
@@ -241,6 +246,9 @@ Reduce the number of object allocations made by {security} when resolving the in
 
 Respect accept header on requests with no handler ({pull}30383[#30383])
 
+SQL::
+* Fix parsing of Dates containing milliseconds ({pull}30419[#30419])
+
 //[float]
 //=== Regressions
 
diff --git a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/DataTypeConversion.java b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/DataTypeConversion.java
index c0f4947bb88b..c0bc9b6e5290 100644
--- a/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/DataTypeConversion.java
+++ b/x-pack/plugin/sql/src/main/java/org/elasticsearch/xpack/sql/type/DataTypeConversion.java
@@ -31,7 +31,7 @@
  */
 public abstract class DataTypeConversion {
 
-    private static final DateTimeFormatter UTC_DATE_FORMATTER = ISODateTimeFormat.dateTimeNoMillis().withZoneUTC();
+    private static final DateTimeFormatter UTC_DATE_FORMATTER = ISODateTimeFormat.dateOptionalTimeParser().withZoneUTC();
 
     /**
      * Returns the type compatible with both left and right types
diff --git a/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/type/DataTypeConversionTests.java b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/type/DataTypeConversionTests.java
index a6a322b31838..8f5477f1951e 100644
--- a/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/type/DataTypeConversionTests.java
+++ b/x-pack/plugin/sql/src/test/java/org/elasticsearch/xpack/sql/type/DataTypeConversionTests.java
@@ -82,10 +82,15 @@ public void testConversionToDate() {
         Conversion conversion = DataTypeConversion.conversionFor(DataType.KEYWORD, to);
         assertNull(conversion.convert(null));
 
-        // TODO we'd like to be able to optionally parse millis here I think....
         assertEquals(new DateTime(1000L, DateTimeZone.UTC), conversion.convert("1970-01-01T00:00:01Z"));
         assertEquals(new DateTime(1483228800000L, DateTimeZone.UTC), conversion.convert("2017-01-01T00:00:00Z"));
         assertEquals(new DateTime(18000000L, DateTimeZone.UTC), conversion.convert("1970-01-01T00:00:00-05:00"));
+        
+        // double check back and forth conversion
+        DateTime dt = DateTime.now(DateTimeZone.UTC);
+        Conversion forward = DataTypeConversion.conversionFor(DataType.DATE, DataType.KEYWORD);
+        Conversion back = DataTypeConversion.conversionFor(DataType.KEYWORD, DataType.DATE);
+        assertEquals(dt, back.convert(forward.convert(dt)));
         Exception e = expectThrows(SqlIllegalArgumentException.class, () -> conversion.convert("0xff"));
         assertEquals("cannot cast [0xff] to [Date]:Invalid format: \"0xff\" is malformed at \"xff\"", e.getMessage());
     }
