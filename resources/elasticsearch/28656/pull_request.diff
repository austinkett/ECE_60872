diff --git a/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java b/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
index e3f4c456643e..93a0ae240635 100644
--- a/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
+++ b/server/src/main/java/org/elasticsearch/index/engine/InternalEngine.java
@@ -1359,18 +1359,25 @@ final void refresh(String source, SearcherScope scope) throws EngineException {
         writingBytes.addAndGet(bytes);
         try (ReleasableLock lock = readLock.acquire()) {
             ensureOpen();
-            switch (scope) {
-                case EXTERNAL:
-                    // even though we maintain 2 managers we really do the heavy-lifting only once.
-                    // the second refresh will only do the extra work we have to do for warming caches etc.
-                    externalSearcherManager.maybeRefreshBlocking();
-                    // the break here is intentional we never refresh both internal / external together
-                    break;
-                case INTERNAL:
-                    internalSearcherManager.maybeRefreshBlocking();
-                    break;
-                default:
-                    throw new IllegalArgumentException("unknown scope: " + scope);
+            if (store.tryIncRef()) {
+                // increment the ref just to ensure nobody closes the store during a refresh
+                try {
+                    switch (scope) {
+                        case EXTERNAL:
+                            // even though we maintain 2 managers we really do the heavy-lifting only once.
+                            // the second refresh will only do the extra work we have to do for warming caches etc.
+                            externalSearcherManager.maybeRefreshBlocking();
+                            // the break here is intentional we never refresh both internal / external together
+                            break;
+                        case INTERNAL:
+                            internalSearcherManager.maybeRefreshBlocking();
+                            break;
+                        default:
+                            throw new IllegalArgumentException("unknown scope: " + scope);
+                    }
+                } finally {
+                    store.decRef();
+                }
             }
         } catch (AlreadyClosedException e) {
             failOnTragicEvent(e);
