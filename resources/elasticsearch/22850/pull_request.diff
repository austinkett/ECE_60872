diff --git a/core/src/main/java/org/elasticsearch/common/settings/Settings.java b/core/src/main/java/org/elasticsearch/common/settings/Settings.java
index db1cf44db223..04fe413846a5 100644
--- a/core/src/main/java/org/elasticsearch/common/settings/Settings.java
+++ b/core/src/main/java/org/elasticsearch/common/settings/Settings.java
@@ -890,9 +890,17 @@ public Builder putArray(String setting, List<String> values) {
                     break;
                 }
             }
-            for (int i = 0; i < values.size(); i++) {
-                put(setting + "." + i, values.get(i));
+
+            if(values.size() <= 0)
+            {
+                put(setting, "[]");
+            }
+            else{
+                for (int i = 0; i < values.size(); i++) {
+                    put(setting + "." + i, values.get(i));
+                }
             }
+
             return this;
         }
 
diff --git a/core/src/test/java/org/elasticsearch/common/settings/SettingsTests.java b/core/src/test/java/org/elasticsearch/common/settings/SettingsTests.java
index 5deb774c2dfe..f27916502881 100644
--- a/core/src/test/java/org/elasticsearch/common/settings/SettingsTests.java
+++ b/core/src/test/java/org/elasticsearch/common/settings/SettingsTests.java
@@ -28,12 +28,7 @@
 import org.hamcrest.Matchers;
 
 import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.NoSuchElementException;
-import java.util.Set;
+import java.util.*;
 
 import static org.hamcrest.Matchers.allOf;
 import static org.hamcrest.Matchers.arrayContaining;
@@ -550,9 +545,16 @@ public void testEmptyFilterMap() {
         expectThrows(NoSuchElementException.class, () -> iterator.next());
     }
 
+    public void testEmptyArraySetting(){
+        Settings settings = Settings.builder().putArray("foo.bar", Collections.emptyList()).build();
+
+        assertThat(settings.get("foo.bar"), equalTo("[]"));
+    }
+  
     public void testEmpty() {
         assertTrue(Settings.EMPTY.isEmpty());
         MockSecureSettings secureSettings = new MockSecureSettings();
         assertTrue(Settings.builder().setSecureSettings(secureSettings).build().isEmpty());
+
     }
 }
