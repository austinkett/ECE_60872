diff --git a/core/src/main/java/org/elasticsearch/index/snapshots/IndexShardSnapshotStatus.java b/core/src/main/java/org/elasticsearch/index/snapshots/IndexShardSnapshotStatus.java
index 644caa7520be..4fc8935ad052 100644
--- a/core/src/main/java/org/elasticsearch/index/snapshots/IndexShardSnapshotStatus.java
+++ b/core/src/main/java/org/elasticsearch/index/snapshots/IndexShardSnapshotStatus.java
@@ -50,7 +50,7 @@
         FAILURE
     }
 
-    private Stage stage = Stage.INIT;
+    private volatile Stage stage = Stage.INIT;
 
     private long startTime;
 
@@ -68,14 +68,14 @@
 
     private volatile boolean aborted;
 
-    private String failure;
+    private volatile String failure;
 
     /**
      * Returns current snapshot stage
      *
      * @return current snapshot stage
      */
-    public Stage stage() {
+    public synchronized Stage stage() {
         return this.stage;
     }
 
@@ -84,8 +84,27 @@ public Stage stage() {
      *
      * @param stage new snapshot stage
      */
-    public void updateStage(Stage stage) {
+    public void updateStage(final Stage stage) {
+        updateStage(stage, null);
+    }
+
+    /**
+     * Sets new snapshot stage and the reason for the failure if the snapshot
+     * is in the {@link IndexShardSnapshotStatus.Stage#FAILURE} state
+     *
+     * @param stage   new snapshot stage
+     * @param failure the reason for the failure
+     */
+    public synchronized void updateStage(final Stage stage, final String failure) {
         this.stage = stage;
+        this.failure = failure;
+    }
+
+    /**
+     * Returns the reason for the failure if the snapshot is in the {@link IndexShardSnapshotStatus.Stage#FAILURE} state
+     */
+    public synchronized String failure() {
+        return failure;
     }
 
     /**
@@ -224,18 +243,4 @@ public void indexVersion(long indexVersion) {
     public long indexVersion() {
         return indexVersion;
     }
-
-    /**
-     * Sets the reason for the failure if the snapshot is in the {@link IndexShardSnapshotStatus.Stage#FAILURE} state
-     */
-    public void failure(String failure) {
-        this.failure = failure;
-    }
-
-    /**
-     * Returns the reason for the failure if the snapshot is in the {@link IndexShardSnapshotStatus.Stage#FAILURE} state
-     */
-    public String failure() {
-        return failure;
-    }
 }
diff --git a/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
index 84d3d743f640..b1f63295987e 100644
--- a/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
+++ b/core/src/main/java/org/elasticsearch/repositories/blobstore/BlobStoreRepository.java
@@ -825,8 +825,7 @@ public void snapshotShard(IndexShard shard, SnapshotId snapshotId, IndexId index
             snapshotStatus.updateStage(IndexShardSnapshotStatus.Stage.DONE);
         } catch (Exception e) {
             snapshotStatus.time(System.currentTimeMillis() - snapshotStatus.startTime());
-            snapshotStatus.updateStage(IndexShardSnapshotStatus.Stage.FAILURE);
-            snapshotStatus.failure(ExceptionsHelper.detailedMessage(e));
+            snapshotStatus.updateStage(IndexShardSnapshotStatus.Stage.FAILURE,ExceptionsHelper.detailedMessage(e));
             if (e instanceof IndexShardSnapshotFailedException) {
                 throw (IndexShardSnapshotFailedException) e;
             } else {
diff --git a/core/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java b/core/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java
index 15f70e8b2c6f..2290b6e4760c 100644
--- a/core/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java
+++ b/core/src/main/java/org/elasticsearch/snapshots/SnapshotShardsService.java
@@ -228,7 +228,8 @@ private void processIndexShardSnapshots(ClusterChangedEvent event) {
                 // running shards is missed, then the snapshot is removed is a subsequent cluster
                 // state update, which is being processed here
                 for (IndexShardSnapshotStatus snapshotStatus : entry.getValue().shards.values()) {
-                    if (snapshotStatus.stage() == Stage.INIT || snapshotStatus.stage() == Stage.STARTED) {
+                    Stage stage = snapshotStatus.stage();
+                    if (stage == Stage.INIT || stage == Stage.STARTED) {
                         snapshotStatus.abort();
                     }
                 }
diff --git a/core/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java b/core/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
index 0804e69e46e2..efd8de23fbf1 100644
--- a/core/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
+++ b/core/src/main/java/org/elasticsearch/snapshots/SnapshotsService.java
@@ -596,8 +596,7 @@ private SnapshotInfo inProgressSnapshot(SnapshotsInProgress.Entry entry) {
                     SnapshotShardFailure shardFailure = findShardFailure(snapshotInfo.shardFailures(), shardId);
                     if (shardFailure != null) {
                         IndexShardSnapshotStatus shardSnapshotStatus = new IndexShardSnapshotStatus();
-                        shardSnapshotStatus.updateStage(IndexShardSnapshotStatus.Stage.FAILURE);
-                        shardSnapshotStatus.failure(shardFailure.reason());
+                        shardSnapshotStatus.updateStage(IndexShardSnapshotStatus.Stage.FAILURE, shardFailure.reason());
                         shardStatus.put(shardId, shardSnapshotStatus);
                     } else {
                         final IndexShardSnapshotStatus shardSnapshotStatus;
@@ -610,8 +609,7 @@ private SnapshotInfo inProgressSnapshot(SnapshotsInProgress.Entry entry) {
                             // a status for the shard to indicate that the shard snapshot
                             // could not be taken due to partial being set to false.
                             shardSnapshotStatus = new IndexShardSnapshotStatus();
-                            shardSnapshotStatus.updateStage(IndexShardSnapshotStatus.Stage.FAILURE);
-                            shardSnapshotStatus.failure("skipped");
+                            shardSnapshotStatus.updateStage(IndexShardSnapshotStatus.Stage.FAILURE, "skipped");
                         } else {
                             shardSnapshotStatus = repository.getShardSnapshotStatus(
                                 snapshotInfo.snapshotId(),
