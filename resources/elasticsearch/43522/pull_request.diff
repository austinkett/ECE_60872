diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java
index 2931a80ee249..6adc287645c7 100644
--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java
+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java
@@ -1043,13 +1043,6 @@ Params withParentTaskId(TaskId parentTaskId) {
             return this;
         }
 
-        Params withVerify(boolean verify) {
-            if (verify) {
-                return putParam("verify", Boolean.TRUE.toString());
-            }
-            return this;
-        }
-
         Params withWaitForStatus(ClusterHealthStatus status) {
             if (status != null) {
                 return putParam("wait_for_status", status.name().toLowerCase(Locale.ROOT));
diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotRequestConverters.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotRequestConverters.java
index ac653a0dd97b..406470ea52cd 100644
--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotRequestConverters.java
+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/SnapshotRequestConverters.java
@@ -60,7 +60,9 @@ static Request createRepository(PutRepositoryRequest putRepositoryRequest) throw
         RequestConverters.Params parameters = new RequestConverters.Params();
         parameters.withMasterTimeout(putRepositoryRequest.masterNodeTimeout());
         parameters.withTimeout(putRepositoryRequest.timeout());
-        parameters.withVerify(putRepositoryRequest.verify());
+        if (putRepositoryRequest.verify() == false) {
+            parameters.putParam("verify", "false");
+        }
         request.addParameters(parameters.asMap());
         request.setEntity(RequestConverters.createEntity(putRepositoryRequest, RequestConverters.REQUEST_BODY_CONTENT_TYPE));
         return request;
diff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/SnapshotRequestConvertersTests.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/SnapshotRequestConvertersTests.java
index bea8835e093b..23789d390357 100644
--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/SnapshotRequestConvertersTests.java
+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/SnapshotRequestConvertersTests.java
@@ -77,7 +77,8 @@ public void testCreateRepository() throws IOException {
         Path repositoryLocation = PathUtils.get(".");
         PutRepositoryRequest putRepositoryRequest = new PutRepositoryRequest(repository);
         putRepositoryRequest.type(FsRepository.TYPE);
-        putRepositoryRequest.verify(randomBoolean());
+        final boolean verify = randomBoolean();
+        putRepositoryRequest.verify(verify);
 
         putRepositoryRequest.settings(
             Settings.builder()
@@ -89,6 +90,11 @@ public void testCreateRepository() throws IOException {
         Request request = SnapshotRequestConverters.createRepository(putRepositoryRequest);
         assertThat(request.getEndpoint(), equalTo(endpoint));
         assertThat(request.getMethod(), equalTo(HttpPut.METHOD_NAME));
+        if (verify) {
+            assertThat(request.getParameters().get("verify"), nullValue());
+        } else {
+            assertThat(request.getParameters().get("verify"), equalTo("false"));
+        }
         RequestConvertersTests.assertToXContentBody(putRepositoryRequest, request.getEntity());
     }
 
