diff --git a/distribution/build.gradle b/distribution/build.gradle
index 73ae1a756ffd..0e2254088e53 100644
--- a/distribution/build.gradle
+++ b/distribution/build.gradle
@@ -524,8 +524,8 @@ Map<String, String> expansionsForDistribution(distributionType) {
       'def': 'if [ -z "$CONF_DIR" ]; then CONF_DIR="$ES_HOME"/config; done',
     ],
     'source.path.env': [
-       'deb': 'source /etc/default/elasticsearch',
-       'rpm': 'source /etc/sysconfig/elasticsearch',
+       'deb': 'if [ -f /etc/default/elasticsearch ]; then source /etc/default/elasticsearch; fi',
+       'rpm': 'if [ -f /etc/sysconfig/elasticsearch ]; then source /etc/sysconfig/elasticsearch; fi',
        'def': 'if [ -z "$CONF_DIR" ]; then CONF_DIR="$ES_HOME"/config; fi',
     ],
     'path.logs': [
diff --git a/distribution/src/main/resources/bin/elasticsearch b/distribution/src/main/resources/bin/elasticsearch
index 7afa2cb93dab..e2da982687a7 100755
--- a/distribution/src/main/resources/bin/elasticsearch
+++ b/distribution/src/main/resources/bin/elasticsearch
@@ -14,21 +14,20 @@
 #
 #   ES_JAVA_OPTS="-Xms8g -Xmx8g" ./bin/elasticsearch
 
+source "`dirname "$0"`"/elasticsearch-env
+
 parse_jvm_options() {
   if [ -f "$1" ]; then
-    echo "$(grep "^-" "$1" | tr '\n' ' ')"
+    echo "`grep "^-" "$1" | tr '\n' ' '`"
   fi
 }
 
-source "`dirname "$0"`"/elasticsearch-env
-
 ES_JVM_OPTIONS="$CONF_DIR"/jvm.options
 
-ES_JAVA_OPTS="$(parse_jvm_options "$ES_JVM_OPTIONS") $ES_JAVA_OPTS"
+ES_JAVA_OPTS="`parse_jvm_options "$ES_JVM_OPTIONS"` $ES_JAVA_OPTS"
 
 # manual parsing to find out, if process should be detached
-daemonized=`echo $* | egrep -- '(^-d |-d$| -d |--daemonize$|--daemonize )'`
-if [ -z "$daemonized" ] ; then
+if [ ! `echo $* | grep -E '(^-d |-d$| -d |--daemonize$|--daemonize )'` ]; then
   exec \
     "$JAVA" \
     $ES_JAVA_OPTS \
diff --git a/distribution/src/main/resources/bin/elasticsearch-env b/distribution/src/main/resources/bin/elasticsearch-env
index e4be2625217a..c72d26970e94 100644
--- a/distribution/src/main/resources/bin/elasticsearch-env
+++ b/distribution/src/main/resources/bin/elasticsearch-env
@@ -1,5 +1,7 @@
 #!/bin/bash
 
+set -e -o pipefail
+
 CDPATH=""
 
 SCRIPT="$0"
@@ -37,7 +39,9 @@ ES_CLASSPATH="$ES_HOME/lib/*"
 if [ -x "$JAVA_HOME/bin/java" ]; then
   JAVA="$JAVA_HOME/bin/java"
 else
+  set +e
   JAVA=`which java`
+  set -e
 fi
 
 if [ ! -x "$JAVA" ]; then
@@ -46,14 +50,14 @@ if [ ! -x "$JAVA" ]; then
 fi
 
 # do not let JAVA_TOOL_OPTIONS slip in (as the JVM does by default)
-if [ "x$JAVA_TOOL_OPTIONS" != "x" ]; then
+if [ ! -z "$JAVA_TOOL_OPTIONS" ]; then
   echo "warning: ignoring JAVA_TOOL_OPTIONS=$JAVA_TOOL_OPTIONS"
   unset JAVA_TOOL_OPTIONS
 fi
 
 # JAVA_OPTS is not a built-in JVM mechanism but some people think it is so we
 # warn them that we are not observing the value of $JAVA_OPTS
-if [ "x$JAVA_OPTS" != "x" ]; then
+if [ ! -z "$JAVA_OPTS" ]; then
   echo -n "warning: ignoring JAVA_OPTS=$JAVA_OPTS; "
   echo "pass JVM parameters via ES_JAVA_OPTS"
 fi
@@ -61,12 +65,6 @@ fi
 # check the Java version
 "$JAVA" -cp "$ES_CLASSPATH" org.elasticsearch.tools.JavaVersionChecker
 
-if [ $? -ne 0 ]; then
-  echo -n "the minimum required Java version is 8; "
-  echo "your Java version from $JAVA does not meet this requirement"
-  exit 1
-fi
-
 ${source.path.env}
 
 if [ -z "$CONF_DIR" ]; then
diff --git a/distribution/src/main/resources/bin/elasticsearch-env.bat b/distribution/src/main/resources/bin/elasticsearch-env.bat
index 69bd697d28b1..8e2f1c3528b1 100644
--- a/distribution/src/main/resources/bin/elasticsearch-env.bat
+++ b/distribution/src/main/resources/bin/elasticsearch-env.bat
@@ -42,13 +42,7 @@ if not "%JAVA_OPTS%" == "" (
 )
 
 rem check the Java version
-%JAVA% -cp "%ES_CLASSPATH%" "org.elasticsearch.tools.JavaVersionChecker"
-
-if errorlevel 1 (
-  echo|set /p="the minimum required Java version is 8; "
-  echo your Java version from %JAVA% does not meet this requirement
-  exit /b 1
-)
+%JAVA% -cp "%ES_CLASSPATH%" "org.elasticsearch.tools.JavaVersionChecker" || exit /b 1
 
 if "%CONF_DIR%" == "" (
   set CONF_DIR=!ES_HOME!\config
diff --git a/distribution/tools/java-version-checker/src/main/java/org/elasticsearch/tools/JavaVersionChecker.java b/distribution/tools/java-version-checker/src/main/java/org/elasticsearch/tools/JavaVersionChecker.java
index f1c5828ff5f9..1b44132c55e0 100644
--- a/distribution/tools/java-version-checker/src/main/java/org/elasticsearch/tools/JavaVersionChecker.java
+++ b/distribution/tools/java-version-checker/src/main/java/org/elasticsearch/tools/JavaVersionChecker.java
@@ -22,6 +22,7 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
+import java.util.Locale;
 
 /**
  * Simple program that checks if the runtime Java version is at least 1.8.
@@ -46,6 +47,11 @@ public static void main(final String[] args) {
         final String javaSpecificationVersion = System.getProperty("java.specification.version");
         final List<Integer> current = parse(javaSpecificationVersion);
         if (compare(current, JAVA_8) < 0) {
+            final String message = String.format(
+                    Locale.ROOT,
+                    "the minimum required Java version is 8; your Java version from [%s] does not meet this requirement",
+                    System.getProperty("java.home"));
+            println(message);
             exit(1);
         }
         exit(0);
@@ -80,7 +86,12 @@ private static int compare(final List<Integer> left, final List<Integer> right)
         return 0;
     }
 
-    @SuppressForbidden(reason = "exit")
+    @SuppressForbidden(reason = "System#err")
+    private static void println(String message) {
+        System.err.println(message);
+    }
+
+    @SuppressForbidden(reason = "System#exit")
     private static void exit(final int status) {
         System.exit(status);
     }
