diff --git a/core/src/main/java/org/elasticsearch/Build.java b/core/src/main/java/org/elasticsearch/Build.java
index 7e46b340dfc0..cc162f35c2fc 100644
--- a/core/src/main/java/org/elasticsearch/Build.java
+++ b/core/src/main/java/org/elasticsearch/Build.java
@@ -26,6 +26,7 @@
 
 import java.io.IOException;
 import java.net.URL;
+import java.security.CodeSource;
 import java.util.jar.JarInputStream;
 import java.util.jar.Manifest;
 
@@ -45,8 +46,8 @@
         final boolean isSnapshot;
 
         final String esPrefix = "elasticsearch-" + Version.CURRENT;
-        final URL url = getElasticsearchCodebase();
-        final String urlStr = url.toString();
+        final URL url = getElasticsearchCodeSourceLocation();
+        final String urlStr = url == null ? "" : url.toString();
         if (urlStr.startsWith("file:/") && (urlStr.endsWith(esPrefix + ".jar") || urlStr.endsWith(esPrefix + "-SNAPSHOT.jar"))) {
             try (JarInputStream jar = new JarInputStream(FileSystemUtils.openFileURLStream(url))) {
                 Manifest manifest = jar.getManifest();
@@ -88,10 +89,13 @@
     private final boolean isSnapshot;
 
     /**
-     * Returns path to elasticsearch codebase path
+     * The location of the code source for Elasticsearch
+     *
+     * @return the location of the code source for Elasticsearch which may be null
      */
-    static URL getElasticsearchCodebase() {
-        return Build.class.getProtectionDomain().getCodeSource().getLocation();
+    static URL getElasticsearchCodeSourceLocation() {
+        final CodeSource codeSource = Build.class.getProtectionDomain().getCodeSource();
+        return codeSource == null ? null : codeSource.getLocation();
     }
 
     private final String shortHash;
diff --git a/core/src/test/java/org/elasticsearch/BuildTests.java b/core/src/test/java/org/elasticsearch/BuildTests.java
index ac5496856f92..a704bc7c3fcb 100644
--- a/core/src/test/java/org/elasticsearch/BuildTests.java
+++ b/core/src/test/java/org/elasticsearch/BuildTests.java
@@ -30,7 +30,7 @@
 
     /** Asking for the jar metadata should not throw exception in tests, no matter how configured */
     public void testJarMetadata() throws IOException {
-        URL url = Build.getElasticsearchCodebase();
+        URL url = Build.getElasticsearchCodeSourceLocation();
         // throws exception if does not exist, or we cannot access it
         try (InputStream ignored = FileSystemUtils.openFileURLStream(url)) {}
         // these should never be null
