diff --git a/src/main/java/org/elasticsearch/index/query/support/XContentStructure.java b/src/main/java/org/elasticsearch/index/query/support/XContentStructure.java
index 0ddec5456349..264fa2cd9fa0 100644
--- a/src/main/java/org/elasticsearch/index/query/support/XContentStructure.java
+++ b/src/main/java/org/elasticsearch/index/query/support/XContentStructure.java
@@ -127,13 +127,14 @@ public Query asFilter(String... types) throws IOException {
      */
     public static class InnerQuery extends XContentStructure {
         private Query query = null;
-
+        private boolean queryParsed = false;
         public InnerQuery(QueryParseContext parseContext1, @Nullable String... types) throws IOException {
             super(parseContext1);
             if (types != null) {
                 String[] origTypes = QueryParseContext.setTypesWithPrevious(types);
                 try {
                     query = parseContext1.parseInnerQuery();
+                    queryParsed = true;
                 } finally {
                     QueryParseContext.setTypes(origTypes);
                 }
@@ -150,7 +151,7 @@ public InnerQuery(QueryParseContext parseContext1, @Nullable String... types) th
          */
         @Override
         public Query asQuery(String... types) throws IOException {
-            if (this.query == null) {
+            if (!queryParsed) { // query can be null
                 this.query = super.asQuery(types);
             }
             return this.query;
@@ -164,6 +165,8 @@ public Query asQuery(String... types) throws IOException {
      */
     public static class InnerFilter extends XContentStructure {
         private Query query = null;
+        private boolean queryParsed = false;
+
 
         public InnerFilter(QueryParseContext parseContext1, @Nullable String... types) throws IOException {
             super(parseContext1);
@@ -172,6 +175,7 @@ public InnerFilter(QueryParseContext parseContext1, @Nullable String... types) t
                 try {
                     Filter innerFilter = parseContext1.parseInnerFilter();
                     query = new XConstantScoreQuery(innerFilter);
+                    queryParsed = true;
                 } finally {
                     QueryParseContext.setTypes(origTypes);
                 }
@@ -190,7 +194,7 @@ public InnerFilter(QueryParseContext parseContext1, @Nullable String... types) t
          */
         @Override
         public Query asFilter(String... types) throws IOException {
-            if (this.query == null) {
+            if (!queryParsed) { // query can be null
                 this.query = super.asFilter(types);
             }
             return this.query;
diff --git a/src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java b/src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
index d5da1b4d5180..99bac148f8a8 100644
--- a/src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
+++ b/src/test/java/org/elasticsearch/search/child/SimpleChildQuerySearchTests.java
@@ -125,6 +125,24 @@ public void multiLevelChild() throws Exception {
         assertThat(searchResponse.getHits().getAt(0).id(), equalTo("gc1"));
     }
 
+    @Test
+    // see #6722
+    public void test6722() throws ElasticsearchException, IOException {
+        assertAcked(prepareCreate("test")
+                .addMapping("foo")
+                .addMapping("test", "_parent", "type=foo"));
+        ensureGreen();
+
+        // index simple data
+        client().prepareIndex("test", "foo", "1").setSource("foo", 1).get();
+        client().prepareIndex("test", "test").setSource("foo", 1).setParent("1").get();
+        refresh();
+
+        SearchResponse searchResponse = client().prepareSearch("test").setSource("{\"query\":{\"filtered\":{\"filter\":{\"has_parent\":{\"type\":\"test\",\"query\":{\"bool\":{\"must\":[],\"must_not\":[],\"should\":[]}}},\"query\":[]}}}}").get();
+        assertNoFailures(searchResponse);
+        assertThat(searchResponse.getHits().totalHits(), equalTo(2l));
+    }
+
     @Test
     // see #2744
     public void test2744() throws ElasticsearchException, IOException {
