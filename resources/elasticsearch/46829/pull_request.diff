diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java
index 2bdd8124de28..c1ffb0c97131 100644
--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java
+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/RequestConverters.java
@@ -501,6 +501,9 @@ static Request count(CountRequest countRequest) throws IOException {
         if (countRequest.terminateAfter() != 0){
             params.withTerminateAfter(countRequest.terminateAfter());
         }
+        if (countRequest.minScore() != null){
+            params.putParam("min_score", String.valueOf(countRequest.minScore()));
+        }
         request.addParameters(params.asMap());
         request.setEntity(createEntity(countRequest.source(), REQUEST_BODY_CONTENT_TYPE));
         return request;
diff --git a/client/rest-high-level/src/main/java/org/elasticsearch/client/core/CountRequest.java b/client/rest-high-level/src/main/java/org/elasticsearch/client/core/CountRequest.java
index 75516288255f..6b9f62111987 100644
--- a/client/rest-high-level/src/main/java/org/elasticsearch/client/core/CountRequest.java
+++ b/client/rest-high-level/src/main/java/org/elasticsearch/client/core/CountRequest.java
@@ -44,6 +44,7 @@
     private SearchSourceBuilder searchSourceBuilder;
     private IndicesOptions indicesOptions = DEFAULT_INDICES_OPTIONS;
     private int terminateAfter = SearchContext.DEFAULT_TERMINATE_AFTER;
+    private Float minScore;
 
     public CountRequest() {
         this.searchSourceBuilder = new SearchSourceBuilder();
@@ -158,11 +159,11 @@ public String preference() {
     }
 
     public Float minScore() {
-        return this.searchSourceBuilder.minScore();
+        return minScore;
     }
 
     public CountRequest minScore(Float minScore) {
-        this.searchSourceBuilder.minScore(minScore);
+        this.minScore = minScore;
         return this;
     }
 
diff --git a/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java
index 0682ce8cbc04..18d2fef776db 100644
--- a/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java
+++ b/client/rest-high-level/src/test/java/org/elasticsearch/client/RequestConvertersTests.java
@@ -1191,10 +1191,14 @@ private static void setRandomCountParams(CountRequest countRequest,
             countRequest.preference(randomAlphaOfLengthBetween(3, 10));
             expectedParams.put("preference", countRequest.preference());
         }
-        if (randomBoolean()){
+        if (randomBoolean()) {
             countRequest.terminateAfter(randomIntBetween(0, Integer.MAX_VALUE));
             expectedParams.put("terminate_after", String.valueOf(countRequest.terminateAfter()));
         }
+        if (randomBoolean()) {
+            countRequest.minScore((float) randomIntBetween(1, 10));
+            expectedParams.put("min_score", String.valueOf(countRequest.minScore()));
+        }
     }
 
     public void testMultiSearch() throws IOException {
