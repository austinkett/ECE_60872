diff --git a/core/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java b/core/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java
index fab85c5c5af9..8a8faf3174ec 100644
--- a/core/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java
+++ b/core/src/main/java/org/elasticsearch/plugins/RemovePluginCommand.java
@@ -57,6 +57,10 @@ protected void execute(Terminal terminal, OptionSet options, Environment env) th
 
     // pkg private for testing
     void execute(Terminal terminal, String pluginName, Environment env) throws Exception {
+        if (pluginName == null) {
+            throw new UserException(ExitCodes.USAGE, "plugin name is required");
+        }
+
         terminal.println("-> Removing " + Strings.coalesceToEmpty(pluginName) + "...");
 
         final Path pluginDir = env.pluginsFile().resolve(pluginName);
diff --git a/qa/evil-tests/src/test/java/org/elasticsearch/plugins/RemovePluginCommandTests.java b/qa/evil-tests/src/test/java/org/elasticsearch/plugins/RemovePluginCommandTests.java
index 6306564e6a3b..997fbeffadd9 100644
--- a/qa/evil-tests/src/test/java/org/elasticsearch/plugins/RemovePluginCommandTests.java
+++ b/qa/evil-tests/src/test/java/org/elasticsearch/plugins/RemovePluginCommandTests.java
@@ -153,6 +153,12 @@ protected boolean addShutdownHook() {
         }
     }
 
+    public void testMissingPluginName() throws Exception {
+        UserException e = expectThrows(UserException.class, () -> removePlugin(null, home));
+        assertEquals(ExitCodes.USAGE, e.exitCode);
+        assertEquals("plugin name is required", e.getMessage());
+    }
+
     private String expectedConfigDirPreservedMessage(final Path configDir) {
         return "-> Preserving plugin config files [" + configDir + "] in case of upgrade, delete manually if not needed";
     }
