diff --git a/server/src/main/java/org/elasticsearch/search/query/QueryPhase.java b/server/src/main/java/org/elasticsearch/search/query/QueryPhase.java
index 8f933b28d94c..82d3528695c7 100644
--- a/server/src/main/java/org/elasticsearch/search/query/QueryPhase.java
+++ b/server/src/main/java/org/elasticsearch/search/query/QueryPhase.java
@@ -282,6 +282,10 @@ static boolean execute(SearchContext searchContext,
             } finally {
                 searchContext.clearReleasables(SearchContext.Lifetime.COLLECTION);
             }
+            if (searchContext.terminateAfter() != SearchContext.DEFAULT_TERMINATE_AFTER
+                    && queryResult.terminatedEarly() == null) {
+                queryResult.terminatedEarly(false);
+            }
 
             final QuerySearchResult result = searchContext.queryResult();
             for (QueryCollectorContext ctx : collectors) {
diff --git a/server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java b/server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java
index 16b18efe6232..69d5f095948d 100644
--- a/server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java
+++ b/server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java
@@ -345,11 +345,23 @@ public void testTerminateAfterEarlyTermination() throws Exception {
         TestSearchContext context = new TestSearchContext(null, indexShard);
         context.setTask(new SearchTask(123L, "", "", "", null, Collections.emptyMap()));
         context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));
-        context.terminateAfter(1);
 
         final IndexReader reader = DirectoryReader.open(dir);
         IndexSearcher contextSearcher = new IndexSearcher(reader);
 
+        context.terminateAfter(numDocs);
+        {
+            context.setSize(10);
+            TotalHitCountCollector collector = new TotalHitCountCollector();
+            context.queryCollectors().put(TotalHitCountCollector.class, collector);
+            QueryPhase.execute(context, contextSearcher, checkCancelled -> {});
+            assertFalse(context.queryResult().terminatedEarly());
+            assertThat(context.queryResult().topDocs().topDocs.totalHits.value, equalTo((long) numDocs));
+            assertThat(context.queryResult().topDocs().topDocs.scoreDocs.length, equalTo(10));
+            assertThat(collector.getTotalHits(), equalTo(numDocs));
+        }
+
+        context.terminateAfter(1);
         {
             context.setSize(1);
             QueryPhase.execute(context, contextSearcher, checkCancelled -> {});
@@ -411,7 +423,6 @@ public void testTerminateAfterEarlyTermination() throws Exception {
             assertThat(context.queryResult().topDocs().topDocs.scoreDocs.length, equalTo(0));
             assertThat(collector.getTotalHits(), equalTo(1));
         }
-
         reader.close();
         dir.close();
     }
diff --git a/server/src/test/java/org/elasticsearch/search/simple/SimpleSearchIT.java b/server/src/test/java/org/elasticsearch/search/simple/SimpleSearchIT.java
index 3e546d172028..74b0408636f9 100644
--- a/server/src/test/java/org/elasticsearch/search/simple/SimpleSearchIT.java
+++ b/server/src/test/java/org/elasticsearch/search/simple/SimpleSearchIT.java
@@ -250,7 +250,7 @@ public void testSimpleTerminateAfterCount() throws Exception {
                 .setTerminateAfter(2 * max).get();
 
         assertHitCount(searchResponse, max);
-        assertNull(searchResponse.isTerminatedEarly());
+        assertFalse(searchResponse.isTerminatedEarly());
     }
 
     public void testSimpleIndexSortEarlyTerminate() throws Exception {
