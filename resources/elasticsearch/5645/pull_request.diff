diff --git a/src/main/java/org/elasticsearch/tribe/TribeService.java b/src/main/java/org/elasticsearch/tribe/TribeService.java
index 1cdde8020858..f1aedcb496c1 100644
--- a/src/main/java/org/elasticsearch/tribe/TribeService.java
+++ b/src/main/java/org/elasticsearch/tribe/TribeService.java
@@ -22,7 +22,6 @@
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
-import com.google.common.collect.Sets;
 import org.elasticsearch.ElasticsearchException;
 import org.elasticsearch.ElasticsearchIllegalStateException;
 import org.elasticsearch.action.support.master.TransportMasterNodeReadOperationAction;
@@ -307,12 +306,15 @@ public ClusterState execute(ClusterState currentState) throws Exception {
                         if (table == null) {
                             continue;
                         }
-                        if (!currentState.metaData().hasIndex(tribeIndex.index()) && !droppedIndices.contains(tribeIndex.index())) {
-                            // a new index, add it, and add the tribe name as a setting
-                            logger.info("[{}] adding index [{}]", tribeName, tribeIndex.index());
-                            addNewIndex(tribeState, blocks, metaData, routingTable, tribeIndex);
+                        final IndexMetaData indexMetaData = currentState.metaData().index(tribeIndex.index());
+                        if (indexMetaData == null) {
+                            if (!droppedIndices.contains(tribeIndex.index())) {
+                                // a new index, add it, and add the tribe name as a setting
+                                logger.info("[{}] adding index [{}]", tribeName, tribeIndex.index());
+                                addNewIndex(tribeState, blocks, metaData, routingTable, tribeIndex);
+                            }
                         } else {
-                            String existingFromTribe = currentState.metaData().index(tribeIndex.index()).getSettings().get(TRIBE_NAME);
+                            String existingFromTribe = indexMetaData.getSettings().get(TRIBE_NAME);
                             if (!tribeName.equals(existingFromTribe)) {
                                 // we have a potential conflict on index names, decide what to do...
                                 if (ON_CONFLICT_ANY.equals(onConflict)) {
diff --git a/src/test/java/org/elasticsearch/tribe/TribeTests.java b/src/test/java/org/elasticsearch/tribe/TribeTests.java
index 65f0a7585f1e..8ea5453ce3e4 100644
--- a/src/test/java/org/elasticsearch/tribe/TribeTests.java
+++ b/src/test/java/org/elasticsearch/tribe/TribeTests.java
@@ -39,6 +39,7 @@
 import org.junit.BeforeClass;
 import org.junit.Test;
 
+import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertAcked;
 import static org.elasticsearch.test.hamcrest.ElasticsearchAssertions.assertHitCount;
 import static org.hamcrest.Matchers.equalTo;
 
@@ -171,10 +172,10 @@ public void testIndexWriteBlocks() throws Exception {
     @Test
     public void testOnConflictDrop() throws Exception {
         logger.info("create 2 indices, test1 on t1, and test2 on t2");
-        cluster().client().admin().indices().prepareCreate("conflict").get();
-        cluster2.client().admin().indices().prepareCreate("conflict").get();
-        cluster().client().admin().indices().prepareCreate("test1").get();
-        cluster2.client().admin().indices().prepareCreate("test2").get();
+        assertAcked(cluster().client().admin().indices().prepareCreate("conflict"));
+        assertAcked(cluster2.client().admin().indices().prepareCreate("conflict"));
+        assertAcked(cluster().client().admin().indices().prepareCreate("test1"));
+        assertAcked(cluster2.client().admin().indices().prepareCreate("test2"));
 
         setupTribeNode(ImmutableSettings.builder()
                 .put("tribe.on_conflict", "drop")
