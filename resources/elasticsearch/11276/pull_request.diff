diff --git a/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java b/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java
index a17e849b2058..fc67a2fd0c66 100644
--- a/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java
+++ b/src/main/java/org/elasticsearch/common/io/stream/StreamInput.java
@@ -336,21 +336,6 @@ public final Boolean readOptionalBoolean() throws IOException {
         return ret;
     }
 
-    /**
-     * Read in a list of strings. List can be empty but not {@code null}.
-     */
-    public List<String> readStringList() throws IOException {
-        int size = readVInt();
-        if (size == 0) {
-            return Collections.emptyList();
-        }
-        List<String> ret = new ArrayList<>(size);
-        for (int i = 0; i < size; i++) {
-            ret.add(readString());
-        }
-        return ret;
-    }
-
     @Nullable
     public Map<String, Object> readMap() throws IOException {
         return (Map<String, Object>) readGenericValue();
diff --git a/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java b/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java
index f4b0eb518ed2..4c83f66d4ec3 100644
--- a/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java
+++ b/src/main/java/org/elasticsearch/common/io/stream/StreamOutput.java
@@ -293,16 +293,6 @@ public void writeStringArray(String[] array) throws IOException {
         }
     }
 
-    /**
-     * Write a list of strings. List can be empty but not {@code null}.
-     */
-    public void writeStringList(List<String> stringList) throws IOException {
-        writeVInt(stringList.size());
-        for (String s : stringList) {
-            writeString(s);
-        }
-    }
-
     /**
      * Writes a string array, for nullable string, writes it as 0 (empty string).
      */
diff --git a/src/test/java/org/elasticsearch/common/io/streams/BytesStreamsTests.java b/src/test/java/org/elasticsearch/common/io/streams/BytesStreamsTests.java
index d21c62b01c3b..74a97ecc5f95 100644
--- a/src/test/java/org/elasticsearch/common/io/streams/BytesStreamsTests.java
+++ b/src/test/java/org/elasticsearch/common/io/streams/BytesStreamsTests.java
@@ -28,8 +28,6 @@
 import org.junit.Ignore;
 import org.junit.Test;
 
-import java.util.Arrays;
-
 import static org.hamcrest.Matchers.closeTo;
 import static org.hamcrest.Matchers.equalTo;
 
@@ -284,7 +282,6 @@ public void testSimpleStreams() throws Exception {
         out.writeGenericValue(doubleArray);
         out.writeString("hello");
         out.writeString("goodbye");
-        out.writeStringList(Arrays.asList(new String[]{"Hello", "Again"}));
         out.writeGenericValue(BytesRefs.toBytesRef("bytesref"));
         StreamInput in = StreamInput.wrap(out.bytes().toBytes());
         assertThat(in.readBoolean(), equalTo(false));
@@ -302,7 +299,6 @@ public void testSimpleStreams() throws Exception {
         assertThat(in.readGenericValue(), equalTo((Object)doubleArray));
         assertThat(in.readString(), equalTo("hello"));
         assertThat(in.readString(), equalTo("goodbye"));
-        assertThat(in.readStringList(), equalTo(Arrays.asList(new String[]{"Hello", "Again"})));
         assertThat(in.readGenericValue(), equalTo((Object)BytesRefs.toBytesRef("bytesref")));
         in.close();
         out.close();
