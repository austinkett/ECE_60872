diff --git a/TESTING.asciidoc b/TESTING.asciidoc
index a1a01a8f2317..c66d02926c98 100644
--- a/TESTING.asciidoc
+++ b/TESTING.asciidoc
@@ -430,7 +430,7 @@ You can also use Gradle to prepare the test environment and then starts a single
 gradle vagrantFedora24#up
 -------------------------------------------------
 
-Or any of vagrantCentos6#up, vagrantDebian8#up, vagrantFedora24#up, vagrantOel6#up,
+Or any of vagrantCentos6#up, vagrantDebian8#up, vagrantCentos7#up, vagrantOel6#up,
 vagrantOel7#up, vagrantOpensuse13#up, vagrantSles12#up, vagrantUbuntu1204#up,
 vagrantUbuntu1604#up.
 
diff --git a/core/src/main/java/org/elasticsearch/cli/Command.java b/core/src/main/java/org/elasticsearch/cli/Command.java
index 73687393dcdd..ac4fcc8e1208 100644
--- a/core/src/main/java/org/elasticsearch/cli/Command.java
+++ b/core/src/main/java/org/elasticsearch/cli/Command.java
@@ -81,8 +81,7 @@ public final int main(String[] args, Terminal terminal) throws Exception {
 
         // initialize default for es.logger.level because we will not read the log4j2.properties
         final String loggerLevel = System.getProperty("es.logger.level", Level.INFO.name());
-        final Settings settings = Settings.builder().put("logger.level", loggerLevel).build();
-        LogConfigurator.configureWithoutConfig(settings);
+        LogConfigurator.configureWithoutConfig(loggerLevel);
 
         try {
             mainWithoutErrorHandling(args, terminal);
diff --git a/core/src/main/java/org/elasticsearch/common/logging/LogConfigurator.java b/core/src/main/java/org/elasticsearch/common/logging/LogConfigurator.java
index 5e20b6c37e3f..89ae005a2fd3 100644
--- a/core/src/main/java/org/elasticsearch/common/logging/LogConfigurator.java
+++ b/core/src/main/java/org/elasticsearch/common/logging/LogConfigurator.java
@@ -58,12 +58,14 @@
      * Configure logging without reading a log4j2.properties file, effectively configuring the
      * status logger and all loggers to the console.
      *
-     * @param settings for configuring logger.level and individual loggers
+     * @param loggerLevel for configuring logger.level
      */
-    public static void configureWithoutConfig(final Settings settings) {
-        Objects.requireNonNull(settings);
+    public static void configureWithoutConfig(final String loggerLevel) {
+        Objects.requireNonNull(loggerLevel);
         // we initialize the status logger immediately otherwise Log4j will complain when we try to get the context
         configureStatusLogger();
+
+        Settings settings = Settings.builder().put("logger.level", loggerLevel).build();
         configureLoggerLevels(settings);
     }
 
