diff --git a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/EvaluateDataFrameAction.java b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/EvaluateDataFrameAction.java
index 7f8486223928..099a5693cb03 100644
--- a/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/EvaluateDataFrameAction.java
+++ b/x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/ml/action/EvaluateDataFrameAction.java
@@ -217,7 +217,7 @@ public String getEvaluationName() {
         @Override
         public void writeTo(StreamOutput out) throws IOException {
             out.writeString(evaluationName);
-            out.writeList(metrics);
+            out.writeNamedWriteableList(metrics);
         }
 
         @Override
diff --git a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/action/EvaluateDataFrameActionResponseTests.java b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/action/EvaluateDataFrameActionResponseTests.java
new file mode 100644
index 000000000000..8aedcb2bfa64
--- /dev/null
+++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/action/EvaluateDataFrameActionResponseTests.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
+ * or more contributor license agreements. Licensed under the Elastic License;
+ * you may not use this file except in compliance with the Elastic License.
+ */
+package org.elasticsearch.xpack.core.ml.action;
+
+import org.elasticsearch.common.io.stream.NamedWriteableRegistry;
+import org.elasticsearch.common.io.stream.Writeable;
+import org.elasticsearch.test.AbstractWireSerializingTestCase;
+import org.elasticsearch.xpack.core.ml.action.EvaluateDataFrameAction.Response;
+import org.elasticsearch.xpack.core.ml.dataframe.evaluation.EvaluationMetricResult;
+import org.elasticsearch.xpack.core.ml.dataframe.evaluation.MlEvaluationNamedXContentProvider;
+import org.elasticsearch.xpack.core.ml.dataframe.evaluation.classification.MulticlassConfusionMatrixResultTests;
+import org.elasticsearch.xpack.core.ml.dataframe.evaluation.regression.MeanSquaredError;
+import org.elasticsearch.xpack.core.ml.dataframe.evaluation.regression.RSquared;
+
+import java.util.List;
+
+public class EvaluateDataFrameActionResponseTests extends AbstractWireSerializingTestCase<Response> {
+
+    @Override
+    protected NamedWriteableRegistry getNamedWriteableRegistry() {
+        return new NamedWriteableRegistry(new MlEvaluationNamedXContentProvider().getNamedWriteables());
+    }
+
+    @Override
+    protected Response createTestInstance() {
+        String evaluationName = randomAlphaOfLength(10);
+        List<EvaluationMetricResult> metrics =
+            List.of(
+                MulticlassConfusionMatrixResultTests.createRandom(),
+                new MeanSquaredError.Result(randomDouble()),
+                new RSquared.Result(randomDouble()));
+        int numMetrics = randomIntBetween(0, metrics.size());
+        return new Response(evaluationName, metrics.subList(0, numMetrics));
+    }
+
+    @Override
+    protected Writeable.Reader<Response> instanceReader() {
+        return Response::new;
+    }
+}
diff --git a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/evaluation/classification/MulticlassConfusionMatrixResultTests.java b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/evaluation/classification/MulticlassConfusionMatrixResultTests.java
index b99e45ad7e01..24b13d372d52 100644
--- a/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/evaluation/classification/MulticlassConfusionMatrixResultTests.java
+++ b/x-pack/plugin/core/src/test/java/org/elasticsearch/xpack/core/ml/dataframe/evaluation/classification/MulticlassConfusionMatrixResultTests.java
@@ -19,13 +19,7 @@
 
 public class MulticlassConfusionMatrixResultTests extends AbstractSerializingTestCase<MulticlassConfusionMatrix.Result> {
 
-    @Override
-    protected MulticlassConfusionMatrix.Result doParseInstance(XContentParser parser) throws IOException {
-        return MulticlassConfusionMatrix.Result.fromXContent(parser);
-    }
-
-    @Override
-    protected MulticlassConfusionMatrix.Result createTestInstance() {
+    public static MulticlassConfusionMatrix.Result createRandom() {
         int numClasses = randomIntBetween(2, 100);
         List<String> classNames = Stream.generate(() -> randomAlphaOfLength(10)).limit(numClasses).collect(Collectors.toList());
         Map<String, Map<String, Long>> confusionMatrix = new TreeMap<>();
@@ -42,6 +36,16 @@
         return new MulticlassConfusionMatrix.Result(confusionMatrix, otherClassesCount);
     }
 
+    @Override
+    protected MulticlassConfusionMatrix.Result doParseInstance(XContentParser parser) throws IOException {
+        return MulticlassConfusionMatrix.Result.fromXContent(parser);
+    }
+
+    @Override
+    protected MulticlassConfusionMatrix.Result createTestInstance() {
+        return createRandom();
+    }
+
     @Override
     protected Writeable.Reader<MulticlassConfusionMatrix.Result> instanceReader() {
         return MulticlassConfusionMatrix.Result::new;
