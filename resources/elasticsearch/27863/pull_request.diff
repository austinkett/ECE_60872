diff --git a/core/src/main/java/org/elasticsearch/index/shard/DocsStats.java b/core/src/main/java/org/elasticsearch/index/shard/DocsStats.java
index ffad0f085f7d..22b9e603f155 100644
--- a/core/src/main/java/org/elasticsearch/index/shard/DocsStats.java
+++ b/core/src/main/java/org/elasticsearch/index/shard/DocsStats.java
@@ -49,7 +49,11 @@ public void add(DocsStats other) {
         if (other == null) {
             return;
         }
-        this.totalSizeInBytes += other.totalSizeInBytes;
+        if (this.totalSizeInBytes == -1) {
+            this.totalSizeInBytes = other.totalSizeInBytes;
+        } else if (other.totalSizeInBytes != -1) {
+            this.totalSizeInBytes += other.totalSizeInBytes;
+        }
         this.count += other.count;
         this.deleted += other.deleted;
     }
diff --git a/core/src/test/java/org/elasticsearch/index/shard/DocsStatsTests.java b/core/src/test/java/org/elasticsearch/index/shard/DocsStatsTests.java
index 85f6764941cb..cf769f1fcf97 100644
--- a/core/src/test/java/org/elasticsearch/index/shard/DocsStatsTests.java
+++ b/core/src/test/java/org/elasticsearch/index/shard/DocsStatsTests.java
@@ -41,6 +41,24 @@ public void testCalculateAverageDocSize() throws Exception {
         assertThat(stats.getTotalSizeInBytes(), equalTo(600L));
         assertThat(stats.getAverageSizeInBytes(), equalTo(12L));
     }
+    
+    public void testUninitialisedShards() {
+        DocsStats stats = new DocsStats(0, 0, -1);
+        assertThat(stats.getTotalSizeInBytes(), equalTo(-1L));
+        assertThat(stats.getAverageSizeInBytes(), equalTo(0L));
+        stats.add(new DocsStats(0, 0, -1));
+        assertThat(stats.getTotalSizeInBytes(), equalTo(-1L));
+        assertThat(stats.getAverageSizeInBytes(), equalTo(0L));
+        stats.add(new DocsStats(1, 0, 10));
+        assertThat(stats.getTotalSizeInBytes(), equalTo(10L));
+        assertThat(stats.getAverageSizeInBytes(), equalTo(10L));
+        stats.add(new DocsStats(0, 0, -1));
+        assertThat(stats.getTotalSizeInBytes(), equalTo(10L));
+        assertThat(stats.getAverageSizeInBytes(), equalTo(10L));
+        stats.add(new DocsStats(1, 0, 20));
+        assertThat(stats.getTotalSizeInBytes(), equalTo(30L));
+        assertThat(stats.getAverageSizeInBytes(), equalTo(15L));
+    }
 
     public void testSerialize() throws Exception {
         DocsStats originalStats = new DocsStats(randomNonNegativeLong(), randomNonNegativeLong(), randomNonNegativeLong());
diff --git a/rest-api-spec/src/main/resources/rest-api-spec/test/indices.rollover/10_basic.yml b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.rollover/10_basic.yml
index 1c45eace6039..1d22d4a4c1f5 100644
--- a/rest-api-spec/src/main/resources/rest-api-spec/test/indices.rollover/10_basic.yml
+++ b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.rollover/10_basic.yml
@@ -1,8 +1,6 @@
 ---
 "Rollover index via API":
-  - skip:
-         version: "all"
-         reason:  "AwaitsFix https://github.com/elastic/elasticsearch/pull/27863"
+
 
   # create index with alias
   - do:
@@ -80,8 +78,8 @@
 ---
 "Rollover no condition matched":
   - skip:
-        version: "all"
-        reason:  "AwaitsFix https://github.com/elastic/elasticsearch/pull/27863"
+        version: " - 5.0.0"
+        reason:  bug fixed in 5.0.1
 
   # create index with alias
   - do:
diff --git a/rest-api-spec/src/main/resources/rest-api-spec/test/indices.rollover/20_max_doc_condition.yml b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.rollover/20_max_doc_condition.yml
index 136cf5fc8c2e..ec9fabe02595 100644
--- a/rest-api-spec/src/main/resources/rest-api-spec/test/indices.rollover/20_max_doc_condition.yml
+++ b/rest-api-spec/src/main/resources/rest-api-spec/test/indices.rollover/20_max_doc_condition.yml
@@ -1,8 +1,8 @@
 ---
 "Max docs rollover conditions matches only primary shards":
   - skip:
-        version: "all"
-        reason:  "AwaitsFix https://github.com/elastic/elasticsearch/pull/27863"
+        version: "- 5.4.1"
+        reason:  "matching docs changed from all shards to primary shards"
 
   # create index with alias and replica
   - do:
