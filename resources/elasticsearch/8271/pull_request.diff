diff --git a/src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java b/src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
index 79a4b31640d9..0195beff427d 100644
--- a/src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
+++ b/src/main/java/org/elasticsearch/indices/recovery/RecoveryStatus.java
@@ -102,7 +102,7 @@ public ShardId shardId() {
     }
 
     public InternalIndexShard indexShard() {
-        ensureNotFinished();
+        ensureRefCount();
         return indexShard;
     }
 
@@ -115,7 +115,7 @@ public RecoveryState state() {
     }
 
     public Store store() {
-        ensureNotFinished();
+        ensureRefCount();
         return store;
     }
 
@@ -146,7 +146,7 @@ public void stage(RecoveryState.Stage stage) {
 
     /** renames all temporary files to their true name, potentially overriding existing files */
     public void renameAllTempFiles() throws IOException {
-        ensureNotFinished();
+        ensureRefCount();
         Iterator<String> tempFileIterator = tempFileNames.iterator();
         final Directory directory = store.directory();
         while (tempFileIterator.hasNext()) {
@@ -222,7 +222,7 @@ private boolean isTempFile(String filename) {
     }
 
     public IndexOutput getOpenIndexOutput(String key) {
-        ensureNotFinished();
+        ensureRefCount();
         return openIndexOutputs.get(key);
     }
 
@@ -236,7 +236,7 @@ private String originalNameForTempFile(String tempFile) {
 
     /** remove and {@link org.apache.lucene.store.IndexOutput} for a given file. It is the caller's responsibility to close it */
     public IndexOutput removeOpenIndexOutputs(String name) {
-        ensureNotFinished();
+        ensureRefCount();
         return openIndexOutputs.remove(name);
     }
 
@@ -248,7 +248,7 @@ public IndexOutput removeOpenIndexOutputs(String name) {
      * at a later stage
      */
     public IndexOutput openAndPutIndexOutput(String fileName, StoreFileMetaData metaData, Store store) throws IOException {
-        ensureNotFinished();
+        ensureRefCount();
         String tempFileName = getTempNameForFile(fileName);
         // add first, before it's created
         tempFileNames.add(tempFileName);
@@ -284,9 +284,9 @@ public String toString() {
         return shardId + " [" + recoveryId + "]";
     }
 
-    private void ensureNotFinished() {
-        if (finished.get()) {
-            throw new ElasticsearchException("RecoveryStatus is used after it was finished. Probably a mismatch between incRef/decRef calls");
+    private void ensureRefCount() {
+        if (refCount() <= 0) {
+            throw new ElasticsearchException("RecoveryStatus is used but it's refcount is 0. Probably a mismatch between incRef/decRef calls");
         }
     }
 
