diff --git a/src/main/java/rx/Observable.java b/src/main/java/rx/Observable.java
index 605f51dd27..dd67541c2f 100644
--- a/src/main/java/rx/Observable.java
+++ b/src/main/java/rx/Observable.java
@@ -5403,9 +5403,14 @@ public Completable toCompletable() {
      *              the alternate Observable to subscribe to if the source does not emit any items
      * @return  an Observable that emits the items emitted by the source Observable or the items of an
      *          alternate Observable if the source Observable is empty.
+     * @throws NullPointerException
+     *              if {@code alternate} is null
      * @since 1.1.0
      */
     public final Observable<T> switchIfEmpty(Observable<? extends T> alternate) {
+        if (alternate == null) {
+            throw new NullPointerException("alternate is null");
+        }
         return lift(new OperatorSwitchIfEmpty<T>(alternate));
     }
 
diff --git a/src/test/java/rx/internal/operators/OperatorSwitchIfEmptyTest.java b/src/test/java/rx/internal/operators/OperatorSwitchIfEmptyTest.java
index 12a9b72e5e..70225a53eb 100644
--- a/src/test/java/rx/internal/operators/OperatorSwitchIfEmptyTest.java
+++ b/src/test/java/rx/internal/operators/OperatorSwitchIfEmptyTest.java
@@ -207,4 +207,9 @@ public void call() {
         ts.assertValueCount(2);
         ts.unsubscribe();
     }
+
+    @Test(expected = NullPointerException.class)
+    public void testAlternateNull() {
+        Observable.just(1).switchIfEmpty(null);
+    }
 }
\ No newline at end of file
