diff --git a/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java
index 658f941430..c5ea0d1291 100644
--- a/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java
+++ b/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java
@@ -230,9 +230,14 @@ public MultiSourceRequestableSubscriber(int index, int initial, Subscriber<? sup
         }
 
         public void requestUpTo(long n) {
-            long r = Math.min(emitted.get(), n);
-            request(r);
-            emitted.addAndGet(-r);
+            do {
+                long r = emitted.get();
+                long u = Math.min(r, n);
+                if (emitted.compareAndSet(r, r - u)) {
+                    request(u);
+                    break;
+                }
+            } while (true);
         }
 
         @Override
diff --git a/src/test/java/rx/internal/operators/OnSubscribeCombineLatestTest.java b/src/test/java/rx/internal/operators/OnSubscribeCombineLatestTest.java
index 65510c5e29..d3de0c0186 100644
--- a/src/test/java/rx/internal/operators/OnSubscribeCombineLatestTest.java
+++ b/src/test/java/rx/internal/operators/OnSubscribeCombineLatestTest.java
@@ -789,6 +789,13 @@ public Object call(Object... args) {
 
     }
 
+    @Test
+    public void testBackpressureLoop() {
+        for (int i = 0; i < 5000; i++) {
+            testBackpressure();
+        }
+    }
+    
     @Test
     public void testBackpressure() {
         Func2<String, Integer, String> combineLatestFunction = getConcatStringIntegerCombineLatestFunction();
