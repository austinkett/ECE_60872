diff --git a/src/main/java/io/reactivex/internal/util/AppendOnlyLinkedArrayList.java b/src/main/java/io/reactivex/internal/util/AppendOnlyLinkedArrayList.java
index 13ddd34bf7..fce0130657 100644
--- a/src/main/java/io/reactivex/internal/util/AppendOnlyLinkedArrayList.java
+++ b/src/main/java/io/reactivex/internal/util/AppendOnlyLinkedArrayList.java
@@ -91,7 +91,7 @@ public void forEachWhile(NonThrowingPredicate<? super T> consumer) {
                     break;
                 }
                 if (consumer.test((T)o)) {
-                    break;
+                    return;
                 }
             }
             a = (Object[])a[c];
diff --git a/src/test/java/io/reactivex/internal/util/MiscUtilTest.java b/src/test/java/io/reactivex/internal/util/MiscUtilTest.java
index e5129fe47b..464262bce9 100644
--- a/src/test/java/io/reactivex/internal/util/MiscUtilTest.java
+++ b/src/test/java/io/reactivex/internal/util/MiscUtilTest.java
@@ -75,6 +75,27 @@ public void appendOnlyLinkedArrayListForEachWhile() throws Exception {
 
         final List<Integer> out = new ArrayList<Integer>();
 
+        list.forEachWhile(new NonThrowingPredicate<Integer>() {
+            @Override
+            public boolean test(Integer t2) {
+                out.add(t2);
+                return t2 == 2;
+            }
+        });
+
+        assertEquals(Arrays.asList(1, 2), out);
+    }
+
+    @Test
+    public void appendOnlyLinkedArrayListForEachWhileBi() throws Exception {
+        AppendOnlyLinkedArrayList<Integer> list = new AppendOnlyLinkedArrayList<Integer>(2);
+
+        list.add(1);
+        list.add(2);
+        list.add(3);
+
+        final List<Integer> out = new ArrayList<Integer>();
+
         list.forEachWhile(2, new BiPredicate<Integer, Integer>() {
             @Override
             public boolean test(Integer t1, Integer t2) throws Exception {
@@ -86,7 +107,6 @@ public boolean test(Integer t1, Integer t2) throws Exception {
         assertEquals(Arrays.asList(1, 2), out);
     }
 
-
     @Test
     public void appendOnlyLinkedArrayListForEachWhilePreGrow() throws Exception {
         AppendOnlyLinkedArrayList<Integer> list = new AppendOnlyLinkedArrayList<Integer>(12);
