diff --git a/src/main/java/io/reactivex/internal/disposables/DisposableHelper.java b/src/main/java/io/reactivex/internal/disposables/DisposableHelper.java
index 23f297c138..0f34261172 100644
--- a/src/main/java/io/reactivex/internal/disposables/DisposableHelper.java
+++ b/src/main/java/io/reactivex/internal/disposables/DisposableHelper.java
@@ -84,8 +84,10 @@ public static boolean dispose(AtomicReference<Disposable> field) {
         Disposable current = field.get();
         if (current != DISPOSED) {
             current = field.getAndSet(DISPOSED);
-            if (current != null && current != DISPOSED) {
-                current.dispose();
+            if (current != DISPOSED) {
+                if (current != null) {
+                    current.dispose();
+                }
                 return true;
             }
         }
diff --git a/src/main/java/io/reactivex/internal/subscriptions/SubscriptionHelper.java b/src/main/java/io/reactivex/internal/subscriptions/SubscriptionHelper.java
index 12d23906f6..775779a82f 100644
--- a/src/main/java/io/reactivex/internal/subscriptions/SubscriptionHelper.java
+++ b/src/main/java/io/reactivex/internal/subscriptions/SubscriptionHelper.java
@@ -182,8 +182,10 @@ public static boolean dispose(AtomicReference<Subscription> field) {
         Subscription current = field.get();
         if (current != CANCELLED) {
             current = field.getAndSet(CANCELLED);
-            if (current != null && current != CANCELLED) { // FIXME return true if current was null?
-                current.cancel();
+            if (current != CANCELLED) {
+                if (current != null) {
+                    current.cancel();
+                }
                 return true;
             }
         }
