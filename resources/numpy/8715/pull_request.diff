diff --git a/numpy/core/src/multiarray/number.c b/numpy/core/src/multiarray/number.c
index c4e67543080..3c952158606 100644
--- a/numpy/core/src/multiarray/number.c
+++ b/numpy/core/src/multiarray/number.c
@@ -137,7 +137,7 @@ needs_right_binop_forward(PyObject *self, PyObject *other,
         return 0;
     }
     if ((!inplace_op && PyType_IsSubtype(Py_TYPE(other), Py_TYPE(self))) ||
-        !PyArray_Check(self)) {
+        (!PyArray_Check(self) && !PyArray_CheckScalar(self))) {
         /*
          * Bail out if Python would already have called the right-hand
          * operation.
diff --git a/numpy/testing/tests/test_utils.py b/numpy/testing/tests/test_utils.py
index 804f22b7f09..448c8ec8290 100644
--- a/numpy/testing/tests/test_utils.py
+++ b/numpy/testing/tests/test_utils.py
@@ -1294,5 +1294,29 @@ def test_clear_and_catch_warnings_inherit():
     assert_equal(my_mod.__warningregistry__, {})
 
 
+class CustomArray(np.ndarray):
+    __numpy_ufunc__ = ""
+    def __radd__(self, a):
+        return a + 42
+    def __rmul__(self, a):
+        return a + 42
+
+
+class TestCustomArray(unittest.TestCase):
+    """Test of user arrays that inherent from ndarray"""
+
+    def test_radd(self):
+        res = np.int32(0) + CustomArray((1,))
+        self.assertEqual(res, 42)
+        res = np.array([0]) + CustomArray((1,))
+        self.assertEqual(res, 42)
+
+    def test_rmul(self):
+        res = np.int32(0) * CustomArray((1,))
+        self.assertEqual(res, 42)
+        res = np.array([0]) * CustomArray((1,))
+        self.assertEqual(res, 42)
+
+
 if __name__ == '__main__':
     run_module_suite()
