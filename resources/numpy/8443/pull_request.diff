diff --git a/doc/release/1.13.0-notes.rst b/doc/release/1.13.0-notes.rst
index 70b4fcbc679..eae81f94d50 100644
--- a/doc/release/1.13.0-notes.rst
+++ b/doc/release/1.13.0-notes.rst
@@ -144,3 +144,9 @@ Previously, ``np.testing.assert_array_less`` ignored all infinite values. This
 is not the expected behavior both according to documentation and intuitively.
 Now, -inf < x < inf is considered ``True`` for any real number x and all
 other cases fail.
+
+``offset`` attribute value in ``memmap`` objects
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+The ``offset`` attribute in a ``memmap`` object is now set to the
+offset into the file. This is a behaviour change only for offsets
+greater than ``mmap.ALLOCATIONGRANULARITY``.
diff --git a/numpy/core/memmap.py b/numpy/core/memmap.py
index b77deb59a18..f07cf78ee65 100644
--- a/numpy/core/memmap.py
+++ b/numpy/core/memmap.py
@@ -260,11 +260,11 @@ def __new__(subtype, filename, dtype=uint8, mode='r+', offset=0,
 
         start = offset - offset % mmap.ALLOCATIONGRANULARITY
         bytes -= start
-        offset -= start
+        array_offset = offset - start
         mm = mmap.mmap(fid.fileno(), bytes, access=acc, offset=start)
 
         self = ndarray.__new__(subtype, shape, dtype=descr, buffer=mm,
-            offset=offset, order=order)
+                               offset=array_offset, order=order)
         self._mmap = mm
         self.offset = offset
         self.mode = mode
diff --git a/numpy/core/tests/test_memmap.py b/numpy/core/tests/test_memmap.py
index 2f95910ecbc..f643dacc11b 100644
--- a/numpy/core/tests/test_memmap.py
+++ b/numpy/core/tests/test_memmap.py
@@ -4,6 +4,7 @@
 import os
 import shutil
 from tempfile import NamedTemporaryFile, TemporaryFile, mktemp, mkdtemp
+import mmap
 
 from numpy import (
     memmap, sum, average, product, ndarray, isscalar, add, subtract, multiply)
@@ -188,6 +189,11 @@ class MemmapSubClass(memmap):
         assert_(fp[1:, :-1].__class__ is MemmapSubClass)
         assert(fp[[0, 1]].__class__ is MemmapSubClass)
 
+    def test_mmap_offset_greater_than_allocation_granularity(self):
+        size = 5 * mmap.ALLOCATIONGRANULARITY
+        offset = mmap.ALLOCATIONGRANULARITY + 1
+        fp = memmap(self.tmpfp, shape=size, mode='w+', offset=offset)
+        assert_(fp.offset == offset)
 
 if __name__ == "__main__":
     run_module_suite()
