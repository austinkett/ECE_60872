diff --git a/numpy/random/mtrand/mtrand.pyx b/numpy/random/mtrand/mtrand.pyx
index ec759fdfbca..fe68df4c1aa 100644
--- a/numpy/random/mtrand/mtrand.pyx
+++ b/numpy/random/mtrand/mtrand.pyx
@@ -4259,8 +4259,12 @@ cdef class RandomState:
 
             if lngood < 0:
                 raise ValueError("ngood < 0")
+            if lngood >= 2**30:
+                raise ValueError("ngood must be less than 2**30")
             if lnbad < 0:
                 raise ValueError("nbad < 0")
+            if lnbad >= 2**30:
+                raise ValueError("nbad must be less than 2**30")
             if lnsample < 1:
                 raise ValueError("nsample < 1")
             if lngood + lnbad < lnsample:
@@ -4270,8 +4274,12 @@ cdef class RandomState:
 
         if np.any(np.less(ongood, 0)):
             raise ValueError("ngood < 0")
+        if np.any(np.greater_equal(ongood, 2**30)):
+            raise ValueError("ngood must be less than 2**30")
         if np.any(np.less(onbad, 0)):
             raise ValueError("nbad < 0")
+        if np.any(np.greater_equal(onbad, 2**30)):
+            raise ValueError("nbad must be less than 2**30")
         if np.any(np.less(onsample, 1)):
             raise ValueError("nsample < 1")
         if np.any(np.less(np.add(ongood, onbad),onsample)):
diff --git a/numpy/random/tests/test_regression.py b/numpy/random/tests/test_regression.py
index 3b4b4ed40a0..f882c509af2 100644
--- a/numpy/random/tests/test_regression.py
+++ b/numpy/random/tests/test_regression.py
@@ -25,11 +25,9 @@ def test_hypergeometric_range(self):
 
         # Test for ticket #5623
         args = [
-            (2**20 - 2, 2**20 - 2, 2**20 - 2),  # Check for 32-bit systems
+            (2**20 - 2, 2**20 - 2, 2**20 - 2),
+            (2**30 - 1, 2**30 - 1, 2**30 - 1),
         ]
-        is_64bits = sys.maxsize > 2**32
-        if is_64bits and sys.platform != 'win32':
-            args.append((2**40 - 2, 2**40 - 2, 2**40 - 2)) # Check for 64-bit systems
         for arg in args:
             assert_(np.random.hypergeometric(*arg) > 0)
 
