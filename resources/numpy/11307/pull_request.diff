diff --git a/numpy/core/memmap.py b/numpy/core/memmap.py
index b2ff0e793de..536fa60943e 100644
--- a/numpy/core/memmap.py
+++ b/numpy/core/memmap.py
@@ -236,6 +236,7 @@ def __new__(subtype, filename, dtype=uint8, mode='r+', offset=0,
                 raise ValueError("Size of available data is not a "
                         "multiple of the data-type size.")
             size = bytes // _dbytes
+            shape = (size,)
         else:
             if not isinstance(shape, tuple):
                 shape = (shape,)
diff --git a/numpy/core/tests/test_memmap.py b/numpy/core/tests/test_memmap.py
index 6c88a9c2cfd..59ca28324d4 100644
--- a/numpy/core/tests/test_memmap.py
+++ b/numpy/core/tests/test_memmap.py
@@ -196,3 +196,8 @@ def test_mmap_offset_greater_than_allocation_granularity(self):
         offset = mmap.ALLOCATIONGRANULARITY + 1
         fp = memmap(self.tmpfp, shape=size, mode='w+', offset=offset)
         assert_(fp.offset == offset)
+
+    def test_no_shape(self):
+        self.tmpfp.write(b'a'*16)
+        mm = memmap(self.tmpfp, dtype='float64')
+        assert_equal(mm.shape, (2,))
