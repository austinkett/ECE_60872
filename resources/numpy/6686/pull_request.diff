diff --git a/numpy/testing/tests/test_utils.py b/numpy/testing/tests/test_utils.py
index a31fce4afbc..13aeffe0287 100644
--- a/numpy/testing/tests/test_utils.py
+++ b/numpy/testing/tests/test_utils.py
@@ -9,7 +9,8 @@
     assert_array_almost_equal, build_err_msg, raises, assert_raises,
     assert_warns, assert_no_warnings, assert_allclose, assert_approx_equal,
     assert_array_almost_equal_nulp, assert_array_max_ulp,
-    clear_and_catch_warnings, run_module_suite
+    clear_and_catch_warnings, run_module_suite,
+    assert_string_equal
     )
 import unittest
 
@@ -715,6 +716,22 @@ def test_nan(self):
                                   lambda: assert_array_max_ulp(nan, nzero,
                                                                maxulp=maxulp))
 
+class TestStringEqual(unittest.TestCase):
+    def test_simple(self):
+        assert_string_equal("hello", "hello")
+        assert_string_equal("hello\nmultiline", "hello\nmultiline")
+
+        try:
+            assert_string_equal("foo\nbar", "hello\nbar")
+        except AssertionError as exc:
+            assert_equal(str(exc), "Differences in strings:\n- foo\n+ hello")
+        else:
+            raise AssertionError("exception not raised")
+
+        self.assertRaises(AssertionError,
+                          lambda: assert_string_equal("foo", "hello"))
+
+
 def assert_warn_len_equal(mod, n_in_context):
     mod_warns = mod.__warningregistry__
     # Python 3.4 appears to clear any pre-existing warnings of the same type,
diff --git a/numpy/testing/utils.py b/numpy/testing/utils.py
index 099b75bdf43..8a282ff3c4f 100644
--- a/numpy/testing/utils.py
+++ b/numpy/testing/utils.py
@@ -1018,11 +1018,12 @@ def assert_string_equal(actual, desired):
             if not d2.startswith('+ '):
                 raise AssertionError(repr(d2))
             l.append(d2)
-            d3 = diff.pop(0)
-            if d3.startswith('? '):
-                l.append(d3)
-            else:
-                diff.insert(0, d3)
+            if diff:
+                d3 = diff.pop(0)
+                if d3.startswith('? '):
+                    l.append(d3)
+                else:
+                    diff.insert(0, d3)
             if re.match(r'\A'+d2[2:]+r'\Z', d1[2:]):
                 continue
             diff_list.extend(l)
