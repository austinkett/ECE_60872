diff --git a/numpy/core/src/multiarray/scalartypes.c.src b/numpy/core/src/multiarray/scalartypes.c.src
index 08505c5c7e5..fcf1dcf6199 100644
--- a/numpy/core/src/multiarray/scalartypes.c.src
+++ b/numpy/core/src/multiarray/scalartypes.c.src
@@ -2411,11 +2411,15 @@ gentype_getbuffer(PyObject *self, Py_buffer *view, int flags)
 {
     Py_ssize_t len;
     void *buf;
-
+    int result;
+    
     /* FIXME: XXX: the format is not implemented! -- this needs more work */
 
     len = gentype_getreadbuf(self, 0, &buf);
-    return PyBuffer_FillInfo(view, self, buf, len, 1, flags);
+    result = PyBuffer_FillInfo(view, self, buf, len, 1, flags);
+    if (result != -1)
+        view->ndim = 0;
+    return result;
 }
 
 /* releasebuffer is not needed */
@@ -2435,10 +2439,9 @@ static PyBufferProcs gentype_as_buffer = {
 
 #if defined(NPY_PY3K)
 #define BASEFLAGS Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE
-#define LEAFFLAGS  Py_TPFLAGS_DEFAULT
 #else
-#define BASEFLAGS Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE | Py_TPFLAGS_CHECKTYPES
-#define LEAFFLAGS  Py_TPFLAGS_DEFAULT | Py_TPFLAGS_CHECKTYPES
+#define BASEFLAGS Py_TPFLAGS_DEFAULT | Py_TPFLAGS_BASETYPE | \
+                  Py_TPFLAGS_CHECKTYPES | Py_TPFLAGS_HAVE_NEWBUFFER
 #endif
 
 NPY_NO_EXPORT PyTypeObject PyGenericArrType_Type = {
diff --git a/numpy/core/tests/test_scalarmath.py b/numpy/core/tests/test_scalarmath.py
index b8f4388b16b..113f3d7ea2e 100644
--- a/numpy/core/tests/test_scalarmath.py
+++ b/numpy/core/tests/test_scalarmath.py
@@ -503,6 +503,12 @@ def __array__(self):
             assert_array_equal(arr_like * np.int_(3), np.full(3, 3))
             assert_array_equal(np.int_(3) * arr_like, np.full(3, 3))
 
+    def test_memoryview(self):
+        for tp in types:
+            x = tp()
+            m = memoryview(x)
+            assert_equal(m.ndim, 0)
+
 
 class TestAbs(TestCase):
 
