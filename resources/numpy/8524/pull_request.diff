diff --git a/numpy/core/_methods.py b/numpy/core/_methods.py
index abfd0a3ccaf..c05316d18ff 100644
--- a/numpy/core/_methods.py
+++ b/numpy/core/_methods.py
@@ -72,10 +72,10 @@ def _mean(a, axis=None, dtype=None, out=None, keepdims=False):
         ret = um.true_divide(
                 ret, rcount, out=ret, casting='unsafe', subok=False)
         if is_float16_result and out is None:
-            ret = a.dtype.type(ret)
+            ret = arr.dtype.type(ret)
     elif hasattr(ret, 'dtype'):
         if is_float16_result:
-            ret = a.dtype.type(ret / rcount)
+            ret = arr.dtype.type(ret / rcount)
         else:
             ret = ret.dtype.type(ret / rcount)
     else:
diff --git a/numpy/core/tests/test_multiarray.py b/numpy/core/tests/test_multiarray.py
index b21e193b91f..6bd45149818 100644
--- a/numpy/core/tests/test_multiarray.py
+++ b/numpy/core/tests/test_multiarray.py
@@ -4380,6 +4380,12 @@ def setUp(self):
         self.omat = np.array([Decimal(repr(r)) for r in self.rmat.flat])
         self.omat = self.omat.reshape(4, 5)
 
+    def test_python_type(self):
+        for x in (np.float16(1.), 1, 1., 1+0j):
+            assert_equal(np.mean([x]), 1.)
+            assert_equal(np.std([x]), 0.)
+            assert_equal(np.var([x]), 0.)
+
     def test_keepdims(self):
         mat = np.eye(3)
         for f in self.funcs:
