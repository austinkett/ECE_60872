diff --git a/numpy/lib/function_base.py b/numpy/lib/function_base.py
index 51353351fa5..23f8d7d4db4 100644
--- a/numpy/lib/function_base.py
+++ b/numpy/lib/function_base.py
@@ -4498,24 +4498,21 @@ def meshgrid(*xi, **kwargs):
             "Valid values for `indexing` are 'xy' and 'ij'.")
 
     s0 = (1,) * ndim
-    output = [np.asanyarray(x).reshape(s0[:i] + (-1,) + s0[i + 1::])
+    output = [np.asanyarray(x).reshape(s0[:i] + (-1,) + s0[i + 1:])
               for i, x in enumerate(xi)]
 
-    shape = [x.size for x in output]
-
     if indexing == 'xy' and ndim > 1:
         # switch first and second axis
-        output[0].shape = (1, -1) + (1,)*(ndim - 2)
-        output[1].shape = (-1, 1) + (1,)*(ndim - 2)
-        shape[0], shape[1] = shape[1], shape[0]
-
-    if copy_:
-        output = [x.copy() for x in output]
+        output[0].shape = (1, -1) + s0[2:]
+        output[1].shape = (-1, 1) + s0[2:]
 
-    if not sparse and len(output) > 0:
+    if not sparse:
         # Return the full N-D matrix (not only the 1-D vector)
         output = np.broadcast_arrays(*output, subok=True)
 
+    if copy_:
+        output = [x.copy() for x in output]
+
     return output
 
 
diff --git a/numpy/lib/stride_tricks.py b/numpy/lib/stride_tricks.py
index f390cf49b79..545623c38dd 100644
--- a/numpy/lib/stride_tricks.py
+++ b/numpy/lib/stride_tricks.py
@@ -179,7 +179,7 @@ def _broadcast_shape(*args):
     supplied arrays against each other.
     """
     if not args:
-        raise ValueError('must provide at least one argument')
+        return ()
     # use the old-iterator because np.nditer does not handle size 0 arrays
     # consistently
     b = np.broadcast(*args[:32])
diff --git a/numpy/lib/tests/test_function_base.py b/numpy/lib/tests/test_function_base.py
index 5c2446e5027..f69c24d59c5 100644
--- a/numpy/lib/tests/test_function_base.py
+++ b/numpy/lib/tests/test_function_base.py
@@ -2266,6 +2266,16 @@ def test_return_type(self):
         assert_(X.dtype == x.dtype)
         assert_(Y.dtype == y.dtype)
 
+    def test_writeback(self):
+        # Issue 8561
+        X = np.array([1.1, 2.2])
+        Y = np.array([3.3, 4.4])
+        x, y = np.meshgrid(X, Y, sparse=False, copy=True)
+
+        x[0, :] = 0
+        assert_equal(x[0, :], 0)
+        assert_equal(x[1, :], X)
+
 
 class TestPiecewise(TestCase):
 
diff --git a/numpy/lib/tests/test_stride_tricks.py b/numpy/lib/tests/test_stride_tricks.py
index 95df135cf8d..39a76c2f6fd 100644
--- a/numpy/lib/tests/test_stride_tricks.py
+++ b/numpy/lib/tests/test_stride_tricks.py
@@ -266,7 +266,7 @@ def test_broadcast_to_raises():
 
 def test_broadcast_shape():
     # broadcast_shape is already exercized indirectly by broadcast_arrays
-    assert_raises(ValueError, _broadcast_shape)
+    assert_equal(_broadcast_shape(), ())
     assert_equal(_broadcast_shape([1, 2]), (2,))
     assert_equal(_broadcast_shape(np.ones((1, 1))), (1, 1))
     assert_equal(_broadcast_shape(np.ones((1, 1)), np.ones((3, 4))), (3, 4))
