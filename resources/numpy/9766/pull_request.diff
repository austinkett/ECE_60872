diff --git a/numpy/lib/function_base.py b/numpy/lib/function_base.py
index 91b9299ec7a..8b20c36a51a 100644
--- a/numpy/lib/function_base.py
+++ b/numpy/lib/function_base.py
@@ -783,7 +783,7 @@ def histogram(a, bins=10, range=None, normed=False, weights=None,
         bins = bin_edges
     else:
         bins = asarray(bins)
-        if (np.diff(bins) < 0).any():
+        if np.any(bins[:-1] > bins[1:]):
             raise ValueError(
                 'bins must increase monotonically.')
 
diff --git a/numpy/lib/tests/test_function_base.py b/numpy/lib/tests/test_function_base.py
index d7d00758efd..1dfdb35007a 100644
--- a/numpy/lib/tests/test_function_base.py
+++ b/numpy/lib/tests/test_function_base.py
@@ -1768,6 +1768,14 @@ def test_last_bin_inclusive_range(self):
         hist, edges = np.histogram(arr, bins=30, range=(-0.5, 5))
         self.assertEqual(hist[-1], 1)
 
+    def test_unsigned_monotonicity_check(self):
+        # Ensures ValueError is raised if bins not increasing monotonically
+        # when bins contain unsigned values (see #9222)
+        arr = np.array([2])
+        bins = np.array([1, 3, 1], dtype='uint64')
+        with assert_raises(ValueError):
+            hist, edges = np.histogram(arr, bins=bins)
+
 
 class TestHistogramOptimBinNums(TestCase):
     """
