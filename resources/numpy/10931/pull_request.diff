diff --git a/numpy/lib/format.py b/numpy/lib/format.py
index 363bb2101d5..fe375b3b0dc 100644
--- a/numpy/lib/format.py
+++ b/numpy/lib/format.py
@@ -152,6 +152,7 @@
 import numpy
 import sys
 import io
+import re
 import warnings
 from numpy.lib.utils import safe_eval
 from numpy.compat import asbytes, asstr, isfileobj, long, basestring
@@ -496,6 +497,10 @@ def _read_array_header(fp, version):
     #   "descr" : dtype.descr
     header = _filter_header(header)
     try:
+        old_header = header
+        # replace paddings like ('', '|V4')
+        header = re.sub(r"\s*,*\s*\(\s*''\s*,\s*'\|*V\d'\s*\)", '', header)
+        aligned = header != old_header
         d = safe_eval(header)
     except SyntaxError as e:
         msg = "Cannot parse header: %r\nException: %r"
@@ -517,7 +522,7 @@ def _read_array_header(fp, version):
         msg = "fortran_order is not a valid bool: %r"
         raise ValueError(msg % (d['fortran_order'],))
     try:
-        dtype = numpy.dtype(d['descr'])
+        dtype = numpy.dtype(d['descr'], align=aligned)
     except TypeError as e:
         msg = "descr is not a valid dtype descriptor: %r"
         raise ValueError(msg % (d['descr'],))
diff --git a/numpy/lib/tests/test_format.py b/numpy/lib/tests/test_format.py
index 38a9b800066..ea97bb7913f 100644
--- a/numpy/lib/tests/test_format.py
+++ b/numpy/lib/tests/test_format.py
@@ -523,6 +523,15 @@ def test_compressed_roundtrip():
     assert_array_equal(arr, arr1)
 
 
+def test_load_aligned_dtype():
+    dt1 = np.dtype('i1, i4, i1', align=True)
+    arr = np.zeros(1, dt1)
+    npz_file = os.path.join(tempdir, 'aligned.npz')
+    np.savez(npz_file, arr=arr)
+    arr1 = np.load(npz_file)['arr']
+    assert_array_equal(arr, arr1)
+
+
 def test_python2_python3_interoperability():
     if sys.version_info[0] >= 3:
         fname = 'win64python2.npy'
