diff --git a/numpy/core/src/multiarray/arraytypes.c.src b/numpy/core/src/multiarray/arraytypes.c.src
index 6023365edfd..1c4db2c18ac 100644
--- a/numpy/core/src/multiarray/arraytypes.c.src
+++ b/numpy/core/src/multiarray/arraytypes.c.src
@@ -356,18 +356,18 @@ string_to_long_double(PyObject*op)
     if (s) {
         errno = 0;
         temp = NumPyOS_ascii_strtold(s, &end);
-        if (end==s || *end) {
+        if (errno) {
             PyErr_Format(PyExc_ValueError,
-                         "invalid literal for long double: %s",
-                         s);
+                         "invalid literal for long double: %s (%s)",
+                         s,
+                         strerror(errno));
             Py_XDECREF(b);
             return 0;
         }
-        else if (errno) {
+        else if (end == s || *end) {
             PyErr_Format(PyExc_ValueError,
-                         "invalid literal for long double: %s (%s)",
-                         s,
-                         strerror(errno));
+                         "invalid literal for long double: %s",
+                         s);
             Py_XDECREF(b);
             return 0;
         }
diff --git a/numpy/core/src/multiarray/numpyos.c b/numpy/core/src/multiarray/numpyos.c
index b232d3f231d..e6f414786e1 100644
--- a/numpy/core/src/multiarray/numpyos.c
+++ b/numpy/core/src/multiarray/numpyos.c
@@ -570,12 +570,11 @@ NumPyOS_ascii_strtold(const char *s, char** endptr)
         errno = 0;
         result = strtold_l(s, endptr, clocale);
         freelocale(clocale);
-        if (errno) {
-            *endptr = (char*)s;
-        }
     }
     else {
-        *endptr = (char*)s;
+        if (endptr != NULL) {
+            *endptr = (char*)s;
+        }
         result = 0;
     }
     return result;
