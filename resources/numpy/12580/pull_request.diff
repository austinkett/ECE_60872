diff --git a/numpy/ctypeslib.py b/numpy/ctypeslib.py
index 11368587fa4..9eefbc9f4b7 100644
--- a/numpy/ctypeslib.py
+++ b/numpy/ctypeslib.py
@@ -401,5 +401,5 @@ def as_ctypes(obj):
             raise TypeError("readonly arrays unsupported")
         tp = _ctype_ndarray(_typecodes[ai["typestr"]], ai["shape"])
         result = tp.from_address(addr)
-        result.__keep = ai
+        result.__keep = obj
         return result
diff --git a/numpy/tests/test_ctypeslib.py b/numpy/tests/test_ctypeslib.py
index 53b75db0785..d389b37a876 100644
--- a/numpy/tests/test_ctypeslib.py
+++ b/numpy/tests/test_ctypeslib.py
@@ -2,6 +2,7 @@
 
 import sys
 import pytest
+import weakref
 
 import numpy as np
 from numpy.ctypeslib import ndpointer, load_library, as_array
@@ -260,3 +261,15 @@ def test_reference_cycles(self):
             b = np.ctypeslib.as_array(newpnt, (N,))
             # now delete both, which should cleanup both objects
             del newpnt, b
+
+    def test_segmentation_fault(self):
+        arr = np.zeros((224, 224, 3))
+        c_arr = np.ctypeslib.as_ctypes(arr)
+        arr_ref = weakref.ref(arr)
+        del arr
+
+        # check the reference wasn't cleaned up
+        assert_(arr_ref() is not None)
+
+        # check we avoid the segfault
+        c_arr[0][0][0]
