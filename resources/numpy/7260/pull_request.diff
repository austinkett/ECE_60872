diff --git a/numpy/ma/core.py b/numpy/ma/core.py
index 3dfe0c4e359..9d6b86ad2f3 100644
--- a/numpy/ma/core.py
+++ b/numpy/ma/core.py
@@ -3527,7 +3527,14 @@ def get_fill_value(self):
         """
         if self._fill_value is None:
             self._fill_value = _check_fill_value(None, self.dtype)
-        return self._fill_value[()]
+
+        # Temporary workaround to account for the fact that str and bytes
+        # scalars cannot be indexed with (), whereas all other numpy
+        # scalars can. See issues #7259 and #7267.
+        # The if-block can be removed after #7267 has been fixed.
+        if isinstance(self._fill_value, ndarray):
+            return self._fill_value[()]
+        return self._fill_value
 
     def set_fill_value(self, value=None):
         """
diff --git a/numpy/ma/tests/test_core.py b/numpy/ma/tests/test_core.py
index b163d3b2642..db21f11341c 100644
--- a/numpy/ma/tests/test_core.py
+++ b/numpy/ma/tests/test_core.py
@@ -1819,6 +1819,13 @@ def test_fillvalue_in_view(self):
         y = x.view(dtype=np.int32)
         assert_(y.fill_value == 999999)
 
+    def test_fillvalue_bytes_or_str(self):
+        # Test whether fill values work as expected for structured dtypes
+        # containing bytes or str.  See issue #7259.
+        a = empty(shape=(3, ), dtype="(2)3S,(2)3U")
+        assert_equal(a["f0"].fill_value, default_fill_value(b"spam"))
+        assert_equal(a["f1"].fill_value, default_fill_value("eggs"))
+
 
 class TestUfuncs(TestCase):
     # Test class for the application of ufuncs on MaskedArrays.
