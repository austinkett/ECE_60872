diff --git a/numpy/core/src/multiarray/ctors.c b/numpy/core/src/multiarray/ctors.c
index 606c3e81ffe..e74ccf7b535 100644
--- a/numpy/core/src/multiarray/ctors.c
+++ b/numpy/core/src/multiarray/ctors.c
@@ -2940,7 +2940,8 @@ static int _safe_ceil_to_intp(double value, npy_intp* ret)
     double ivalue;
 
     ivalue = npy_ceil(value);
-    if (ivalue < NPY_MIN_INTP || ivalue > NPY_MAX_INTP) {
+    /* condition inverted to handle NaN */
+    if (!(NPY_MIN_INTP <= ivalue && ivalue <= NPY_MAX_INTP)) {
         return -1;
     }
 
diff --git a/numpy/core/tests/test_multiarray.py b/numpy/core/tests/test_multiarray.py
index a625a1bce18..d8b564a1972 100644
--- a/numpy/core/tests/test_multiarray.py
+++ b/numpy/core/tests/test_multiarray.py
@@ -7282,6 +7282,10 @@ def test_npymath_real():
                 expected = npfun(z)
                 assert_allclose(got, expected)
 
+# Test when (stop - start) / step is NaN, ValueError is raised instead
+# of returning a zero-length array.
+def test_arange_nan():
+    assert_raises(ValueError, np.arange, 0, 1, np.nan)
 
 if __name__ == "__main__":
     run_module_suite()
