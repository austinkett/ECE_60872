diff --git a/numpy/core/src/multiarray/methods.c b/numpy/core/src/multiarray/methods.c
index 08528e7f863..f2e1d87ad94 100644
--- a/numpy/core/src/multiarray/methods.c
+++ b/numpy/core/src/multiarray/methods.c
@@ -429,6 +429,10 @@ PyArray_SetField(PyArrayObject *self, PyArray_Descr *dtype,
     PyObject *ret = NULL;
     int retval = 0;
 
+    if (PyArray_FailUnlessWriteable(self, "assignment destination") < 0) {
+        return -1;
+    }
+
     /* getfield returns a view we can write to */
     ret = PyArray_GetField(self, dtype, offset);
     if (ret == NULL) {
diff --git a/numpy/core/tests/test_records.py b/numpy/core/tests/test_records.py
index c4360bcf2e3..bd1fc014e51 100644
--- a/numpy/core/tests/test_records.py
+++ b/numpy/core/tests/test_records.py
@@ -300,6 +300,15 @@ def assign_invalid_column(x):
 
         self.assertRaises(AttributeError, assign_invalid_column, a)
 
+    def test_nonwriteable_setfield(self):
+        # gh-8171
+        r = np.rec.array([(0,), (1,)], dtype=[('f', 'i4')])
+        r.flags.writeable = False
+        with assert_raises(ValueError):
+            r.f = [2, 3]
+        with assert_raises(ValueError):
+            r.setfield([2,3], *r.dtype.fields['f'])
+
     def test_out_of_order_fields(self):
         """Ticket #1431."""
         # this test will be invalid in 1.13
