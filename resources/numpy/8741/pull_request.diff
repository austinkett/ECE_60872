diff --git a/numpy/lib/function_base.py b/numpy/lib/function_base.py
index c54512c2153..0903790bd70 100644
--- a/numpy/lib/function_base.py
+++ b/numpy/lib/function_base.py
@@ -1135,7 +1135,7 @@ def average(a, axis=None, weights=None, returned=False):
             wgt = wgt.swapaxes(-1, axis)
 
         scl = wgt.sum(axis=axis, dtype=result_dtype)
-        if (scl == 0.0).any():
+        if np.any(scl == 0.0):
             raise ZeroDivisionError(
                 "Weights sum to zero, can't be normalized")
 
diff --git a/numpy/lib/tests/test_function_base.py b/numpy/lib/tests/test_function_base.py
index 4fb0dba5105..6213b7a3a66 100644
--- a/numpy/lib/tests/test_function_base.py
+++ b/numpy/lib/tests/test_function_base.py
@@ -3,6 +3,7 @@
 import operator
 import warnings
 import sys
+import decimal
 
 import numpy as np
 from numpy.testing import (
@@ -258,6 +259,11 @@ def test_basic(self):
         y6 = np.matrix(rand(5, 5))
         assert_array_equal(y6.mean(0), average(y6, 0))
 
+        y7 = np.array([decimal.Decimal(x) for x in range(10)])
+        w7 = np.array([decimal.Decimal(1) for _ in range(10)])
+        w7 /= w7.sum()
+        assert_almost_equal(y7.mean(0), average(y7, weights=w7)) 
+
     def test_weights(self):
         y = np.arange(10)
         w = np.arange(10)
