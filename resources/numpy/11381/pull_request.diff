diff --git a/numpy/core/src/multiarray/einsum.c.src b/numpy/core/src/multiarray/einsum.c.src
index 039bcc15ee3..2f300480bfe 100644
--- a/numpy/core/src/multiarray/einsum.c.src
+++ b/numpy/core/src/multiarray/einsum.c.src
@@ -2769,8 +2769,11 @@ PyArray_EinsteinSum(char *subscripts, npy_intp nop,
 
     /* Initialize the output to all zeros and reset the iterator */
     ret = NpyIter_GetOperandArray(iter)[nop];
-    Py_INCREF(ret);
     PyArray_AssignZero(ret, NULL);
+    if (out) {
+        ret = out;
+    }
+    Py_INCREF(ret);
 
 
     /***************************/
diff --git a/numpy/core/src/umath/ufunc_object.c b/numpy/core/src/umath/ufunc_object.c
index 5e92bc9919f..0efff50dd23 100644
--- a/numpy/core/src/umath/ufunc_object.c
+++ b/numpy/core/src/umath/ufunc_object.c
@@ -2609,8 +2609,11 @@ PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc,
     for (i = 0; i < nin; ++i) {
         op_flags[i] = NPY_ITER_READONLY |
                       NPY_ITER_COPY |
-                      NPY_ITER_ALIGNED |
-                      NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE;
+                      NPY_ITER_ALIGNED;
+        if (op[i] && PyArray_NDIM(op[i]) < 2) {
+            op_flags[i] |= NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE;
+        }
+
         /*
          * If READWRITE flag has been set for this operand,
          * then clear default READONLY flag
@@ -2625,8 +2628,10 @@ PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc,
                       NPY_ITER_UPDATEIFCOPY|
                       NPY_ITER_ALIGNED|
                       NPY_ITER_ALLOCATE|
-                      NPY_ITER_NO_BROADCAST|
-                      NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE;
+                      NPY_ITER_NO_BROADCAST;
+        if (op[i] && PyArray_NDIM(op[i]) < 2) {
+            op_flags[i] |= NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE;
+        }
     }
 
     iter_flags = ufunc->iter_flags |
diff --git a/numpy/core/tests/test_mem_overlap.py b/numpy/core/tests/test_mem_overlap.py
index f4ce6a84ae5..a853eed71f7 100644
--- a/numpy/core/tests/test_mem_overlap.py
+++ b/numpy/core/tests/test_mem_overlap.py
@@ -948,3 +948,8 @@ def test_inplace_op_simple_manual(self):
 
         x += x.T
         assert_array_equal(x - x.T, 0)
+
+def test_matrix_multiply_overlap():
+    a = np.arange(9, dtype=int).reshape(3,3)
+    b = a.copy()
+    assert_copy_equivalent(_umath_tests.matrix_multiply, [a, b], out=b)
diff --git a/numpy/core/tests/test_multiarray.py b/numpy/core/tests/test_multiarray.py
index e85a73154d0..aa072dc0505 100644
--- a/numpy/core/tests/test_multiarray.py
+++ b/numpy/core/tests/test_multiarray.py
@@ -7387,6 +7387,13 @@ def test_dot_out(self):
         # if HAVE_CBLAS, will use WRITEBACKIFCOPY
         a = np.arange(9, dtype=float).reshape(3,3)
         b = np.dot(a, a, out=a)
+        assert b is a
+        assert_equal(b, np.array([[15, 18, 21], [42, 54, 66], [69, 90, 111]]))
+
+    def test_matmul_out(self):
+        a = np.arange(9, dtype=float).reshape(3,3)
+        b = np.matmul(a, a, out=a)
+        assert b is a
         assert_equal(b, np.array([[15, 18, 21], [42, 54, 66], [69, 90, 111]]))
 
     def test_view_assign(self):
